var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.17,1,0.712]],["body/components/AppComponent.html",[0,0.329,1,1.321,2,1.673,3,0.537,4,0.452,5,1.524,6,1.524,7,1.524,8,1.524,9,0.372,10,3.018,11,0.724,12,1.524,13,2.307,14,1.85,15,3.73,16,1.883,17,4.98,18,1.883,19,4.588,20,0.537,21,1.025,22,5.345,23,1.043,24,1.165,25,4.588,26,2.61,27,0.537,28,0.047,29,0.942,30,1.066,31,0.942,32,0.842,33,3.164,34,0.537,35,0.452,36,3.712,37,0.537,38,0.537,39,1.202,40,1.883,41,1.883,42,1.524,43,2.135,44,1.524,45,1.025,46,1.524,47,0.829,48,1.524,49,0.829,50,0.942,51,1.524,52,0.829,53,1.524,54,0.829,55,1.524,56,0.942,57,0.942,58,1.524,59,0.942,60,0.829,61,1.202,62,1.524,63,1.524,64,1.524,65,0.03,66,0.037,67,0.03]],["title/modules/AppModule.html",[68,1.675,69,1.675]],["body/modules/AppModule.html",[1,1.43,3,0.483,4,0.406,9,0.334,14,1.081,28,0.048,34,0.824,35,0.406,37,0.483,38,0.483,39,1.081,47,1.204,49,1.184,50,1.09,52,1.184,54,1.184,56,1.369,59,1.346,61,1.39,65,0.027,66,0.035,67,0.027,68,1.995,69,3.486,70,1.75,71,1.995,72,3.855,73,3.855,74,3.855,75,2.302,76,2.714,77,2.714,78,2.714,79,2.714,80,2.714,81,2.778,82,1.034,83,1.933,84,1.522,85,3.488,86,1.995,87,1.37,88,3.338,89,3.488,90,4.291,91,2.714,92,2.302,93,3.488,94,3.338,95,3.338,96,2.714,97,2.714,98,2.714,99,4.291,100,2.714,101,3.338,102,4.291,103,1.37,104,3.338,105,3.338,106,3.338,107,1.995,108,2.714,109,3.338,110,2.302,111,3.338,112,2.714,113,1.75,114,2.714]],["title/modules/AppRoutingModule.html",[68,1.675,81,1.469]],["body/modules/AppRoutingModule.html",[0,0.323,3,0.582,4,0.49,9,0.403,28,0.047,32,0.815,34,0.802,35,0.49,37,0.582,38,0.582,47,1.077,49,1.077,50,1.224,52,1.077,54,1.077,65,0.032,66,0.039,67,0.032,70,2.11,75,2.777,81,2.527,89,3.273,93,3.919,96,3.273,97,3.273,98,3.273,112,3.273,113,2.11,114,3.273,115,4.027,116,4.027,117,3.084,118,4.821,119,1.864,120,2.11,121,5.349,122,4.027,123,2.777,124,1.653,125,1.157,126,3.273,127,4.027]],["title/interfaces/Game.html",[32,0.474,128,0.805]],["body/interfaces/Game.html",[3,0.401,4,0.338,9,0.278,11,0.542,20,0.401,21,0.848,23,0.542,27,0.626,28,0.048,29,1.308,31,0.705,32,0.981,34,0.626,35,0.338,37,0.549,38,0.401,45,1.171,65,0.022,66,0.031,67,0.022,82,0.741,103,1.14,125,1.445,128,1.336,129,1.659,130,1.915,131,3.087,132,1.506,133,1.939,134,1.834,135,3.518,136,3.087,137,2.183,138,1.777,139,1.243,140,2.255,141,2.514,142,1.14,143,1.659,144,1.455,145,1.479,146,2.269,147,2.257,148,2.619,149,0.705,150,2.985,151,2.438,152,0.899,153,3.087,154,1.758,155,1.506,156,1.285,157,1.14,158,1.559,159,2.065,160,2.065,161,1.285,162,2.257,163,1.285,164,1.285,165,1.23,166,1.14,167,1.088,168,1.659,169,1.659,170,1.285,171,1.14,172,1.455,173,1.659,174,1.659,175,1.559,176,2.269,177,2.269,178,2.619,179,1.578,180,1.99,181,1.088,182,1.776,183,1.915,184,2.257,185,2.257,186,2.257,187,3.087,188,3.087,189,2.257,190,2.257,191,1.834,192,2.003,193,2.257,194,1.659,195,2.257,196,2.257,197,1.915,198,1.455,199,2.257,200,1.915,201,1.915,202,0.705,203,1.455,204,1.507,205,3.961,206,1.915,207,2.257,208,2.257,209,1.14,210,1.285,211,1.455,212,2.257,213,2.257,214,1.285,215,1.285,216,2.586,217,0.797,218,2.257,219,3.087,220,1.455,221,2.257,222,2.257,223,2.257,224,0.797,225,1.455,226,1.915,227,2.257,228,2.257,229,2.257,230,2.257,231,1.915,232,2.257,233,2.257,234,2.269,235,1.285,236,2.257,237,2.257]],["title/components/GameComponent.html",[0,0.17,47,0.626]],["body/components/GameComponent.html",[0,0.231,1,0.273,2,0.867,3,0.156,4,0.131,5,0.442,6,0.442,7,0.442,8,0.442,9,0.183,11,0.547,12,0.442,13,1.634,14,1.439,16,0.75,18,0.75,20,0.156,21,0.408,23,0.464,24,1.241,26,0.957,27,0.654,28,0.048,29,1.011,30,1.097,31,0.97,32,0.895,34,0.493,35,0.131,37,0.156,38,0.156,39,0.349,40,1.399,41,1.568,42,0.442,43,1.491,44,0.442,45,0.853,46,0.442,47,0.761,48,0.442,49,0.241,50,0.464,51,0.442,52,0.241,53,0.442,54,0.241,55,0.442,56,1.046,57,0.865,58,0.442,59,0.273,60,1.081,61,0.592,62,0.75,63,0.442,64,0.442,65,0.009,66,0.023,67,0.009,82,0.911,83,1.452,84,1.218,86,1.091,107,0.644,108,0.875,119,0.499,120,0.564,124,0.976,132,1.375,134,1.021,138,1.746,145,0.805,148,1.932,149,0.604,151,1.786,152,1.176,154,1.577,155,0.901,157,1.634,159,1.491,160,1.691,165,1.237,166,0.442,167,0.853,175,1.287,178,2.35,179,1.324,180,0.564,181,0.889,182,0.442,191,1.502,198,2.087,202,0.711,204,1.104,206,2.163,209,1.966,210,0.499,214,0.845,216,1.091,217,0.979,224,0.805,238,0.743,239,0.845,240,1.101,241,2.378,242,1.826,243,2.378,244,3.136,245,3.407,246,4.241,247,3.981,248,2.378,249,2.378,250,3.632,251,0.592,252,2.378,253,2.801,254,2.378,255,1.681,256,1.826,257,1.826,258,1.826,259,2.801,260,0.644,261,2.17,262,1.826,263,1.826,264,2.163,265,1.104,266,0.907,267,2.17,268,3.136,269,2.277,270,0.957,271,1.077,272,1.826,273,2.036,274,1.874,275,1.826,276,4.526,277,2.801,278,1.043,279,1.077,280,1.826,281,1.101,282,1.826,283,0.957,284,1.932,285,1.077,286,1.932,287,2.801,288,1.826,289,1.077,290,1.077,291,2.378,292,1.077,293,1.546,294,1.826,295,1.826,296,1.826,297,1.826,298,2.77,299,3.847,300,2.378,301,4.526,302,1.65,303,1.826,304,2.801,305,1.826,306,2.801,307,1.826,308,2.801,309,2.801,310,1.077,311,1.077,312,2.77,313,2.801,314,1.826,315,1.826,316,1.485,317,1.681,318,1.826,319,1.26,320,3.82,321,2.277,322,3.407,323,2.746,324,1.077,325,2.159,326,1.077,327,3.407,328,1.826,329,1.874,330,3.407,331,1.485,332,1.826,333,1.077,334,1.26,335,1.485,336,1.826,337,1.826,338,1.826,339,1.826,340,4.348,341,2.277,342,1.077,343,1.826,344,2.378,345,1.826,346,1.826,347,1.932,348,3.407,349,1.826,350,2.549,351,1.826,352,1.826,353,1.826,354,1.077,355,1.826,356,1.826,357,1.826,358,1.826,359,1.826,360,3.407,361,1.077,362,2.801,363,2.277,364,1.485,365,2.925,366,1.077,367,1.826,368,1.826,369,1.826,370,1.826,371,1.826,372,1.826,373,1.077,374,1.826,375,1.826,376,1.826,377,1.077,378,1.826,379,2.549,380,1.077,381,1.826,382,1.826,383,2.036,384,1.826,385,1.826,386,1.826,387,2.378,388,1.077,389,1.826,390,1.485,391,1.826,392,1.077,393,0.564,394,0.875,395,0.644,396,0.644,397,0.564,398,0.564,399,1.452,400,0.743,401,0.564,402,1.077,403,1.077,404,1.077,405,1.077,406,2.378,407,1.826,408,1.077,409,1.826,410,1.077,411,1.077,412,1.077,413,1.077,414,3.136,415,2.801,416,2.277,417,2.283,418,2.801,419,1.077,420,0.743,421,1.077,422,1.933,423,1.485,424,0.875,425,1.077,426,1.077,427,0.743,428,1.077,429,1.077,430,2.549,431,1.077,432,0.875,433,3.106,434,2.163,435,0.875,436,0.875,437,0.875,438,0.875,439,0.875,440,0.875,441,0.743,442,1.485,443,0.875,444,0.644,445,0.644,446,0.644,447,0.743,448,1.077,449,1.077,450,2.606,451,1.077,452,1.826,453,2.378,454,1.077,455,1.077,456,1.077,457,1.826,458,1.826,459,1.826,460,1.077,461,1.077,462,1.077,463,1.077,464,3.106,465,2.277,466,2.378,467,3.407,468,1.077,469,1.933,470,1.077,471,1.826,472,1.077,473,2.036,474,1.077,475,1.826,476,2.378,477,1.485,478,3.981,479,2.801,480,2.801,481,1.826,482,2.378,483,1.826,484,1.077,485,1.077,486,1.077,487,2.378,488,1.077,489,1.077,490,1.826,491,1.077,492,2.801,493,1.826,494,1.077,495,1.26,496,1.077,497,1.826,498,2.378,499,1.077,500,0.644,501,0.875,502,1.077,503,1.077,504,1.077,505,1.077,506,1.077,507,0.875,508,1.077,509,1.077,510,1.826,511,1.826,512,1.077,513,1.077,514,1.077,515,1.077,516,1.826,517,1.077,518,1.077,519,1.077,520,1.077,521,1.077,522,1.077,523,1.077,524,1.077,525,1.077,526,1.826,527,1.826,528,1.077,529,1.077,530,1.077,531,1.077,532,1.077,533,1.077,534,1.077,535,1.077,536,2.378,537,1.077,538,1.077,539,1.077,540,1.077,541,1.077,542,1.077,543,1.077,544,1.077,545,1.077,546,1.077,547,1.077,548,1.826,549,1.077,550,2.378,551,1.077,552,1.077,553,1.077,554,1.077,555,1.077,556,1.077,557,1.077,558,1.826,559,1.077,560,1.077,561,1.077,562,1.077,563,1.077,564,1.826,565,0.442,566,0.875,567,1.077,568,1.077,569,1.077,570,1.077,571,1.077,572,1.077,573,1.077,574,1.077,575,2.378,576,1.077,577,0.875,578,1.077,579,1.077,580,2.378,581,1.077,582,1.077,583,0.875,584,2.635,585,0.875,586,1.091,587,0.644,588,1.246,589,1.246,590,1.077,591,1.077,592,1.077,593,1.077,594,1.077,595,2.378,596,1.077,597,1.077,598,1.077,599,1.077,600,1.077,601,0.644,602,1.077,603,1.077,604,1.077,605,1.077,606,0.875,607,1.077,608,1.077,609,1.826,610,1.077,611,1.077,612,0.875,613,1.077,614,1.826,615,1.826,616,1.826,617,2.801,618,1.077,619,1.826,620,1.077,621,1.826,622,1.826,623,1.077,624,1.077,625,1.077,626,0.875,627,1.077,628,1.826,629,1.077,630,0.875,631,1.077,632,1.077,633,1.077,634,1.077,635,1.077,636,1.077,637,1.077,638,1.077,639,1.077,640,1.826,641,1.826,642,1.485,643,1.485,644,1.485,645,1.485,646,1.485,647,0.957,648,1.826,649,1.826,650,1.826,651,1.826,652,1.485,653,1.826,654,1.26,655,1.826,656,1.826,657,0.875,658,2.301,659,2.378,660,1.874,661,1.077,662,2.378,663,2.378,664,1.826,665,1.077,666,1.077,667,3.136,668,1.077,669,0.743,670,1.826,671,1.932,672,1.932,673,2.77,674,1.077,675,1.077,676,1.681,677,2.223,678,1.826,679,1.077,680,2.378,681,2.378,682,2.378,683,1.077,684,1.077,685,2.549,686,0.875,687,1.64,688,1.077,689,1.64,690,1.933,691,1.485,692,1.485,693,1.077,694,1.077,695,2.163,696,1.077,697,1.077,698,1.077,699,1.077,700,0.743,701,1.077,702,1.077,703,2.505,704,2.77,705,1.077,706,1.077,707,2.801,708,2.036,709,1.421,710,1.077,711,1.485,712,0.875,713,1.077,714,1.077,715,1.077,716,1.077,717,1.077,718,1.077,719,1.077,720,1.077,721,1.077,722,1.077,723,0.743,724,1.826,725,1.826,726,1.077,727,1.077,728,0.875,729,0.875,730,1.077,731,0.743,732,0.875,733,1.077,734,1.077,735,1.077,736,1.077]],["title/injectables/GameService.html",[82,0.547,139,0.805]],["body/injectables/GameService.html",[3,0.336,4,0.283,9,0.233,11,0.891,20,0.336,21,0.749,23,0.768,24,1.333,27,0.725,28,0.048,29,1.093,30,1.13,31,1.159,32,0.97,34,0.569,35,0.283,37,0.485,38,0.336,45,1.12,65,0.019,66,0.027,67,0.019,82,0.84,103,0.955,125,1.13,128,1.237,130,1.605,131,1.892,132,1.13,133,1.664,134,1.434,135,2.727,136,1.892,137,2.097,138,1.664,139,1.237,140,2.322,141,2.577,142,0.955,143,1.391,144,1.22,145,1.55,146,2.573,147,2.727,148,2.969,149,0.999,150,3.379,151,2.678,152,1.087,153,3.5,154,1.993,155,1.618,156,1.821,157,1.377,158,1.615,159,2.178,160,2.156,161,1.821,162,2.727,163,1.077,164,1.077,165,1.087,166,0.955,167,1.019,168,2.005,169,2.005,170,1.553,171,0.955,172,1.22,173,1.391,174,1.391,175,1.615,176,2.573,177,2.573,178,2.969,179,1.733,180,2.256,181,1.185,182,1.951,183,2.314,184,2.727,185,3.5,186,1.892,187,2.727,188,2.727,189,1.892,190,1.892,191,1.733,192,1.821,193,1.892,194,1.391,195,1.892,196,1.892,197,1.605,198,1.22,199,1.892,200,1.605,201,1.605,202,0.852,203,1.758,204,1.624,205,3.983,206,2.314,207,2.727,208,1.892,209,0.955,210,1.077,211,1.22,212,1.892,213,1.892,214,1.077,215,1.553,216,2.727,217,0.964,218,2.727,219,2.727,220,1.758,221,3.5,222,2.727,223,2.727,224,0.964,225,1.758,226,2.314,227,2.727,228,1.892,229,2.727,230,2.727,231,2.314,232,2.727,233,1.892,234,2.573,235,1.553,236,3.5,237,1.892,251,1.087,265,1.478,266,1.478,278,0.669,737,1.391,738,2.727,739,3.355,740,3.355,741,3.355,742,1.605,743,3.355,744,2.328,745,2.328,746,2.328,747,2.328,748,2.328,749,2.328,750,2.328,751,2.328,752,2.328]],["title/components/GameTabViewComponent.html",[0,0.17,49,0.626]],["body/components/GameTabViewComponent.html",[0,0.25,1,0.364,2,1.062,3,0.207,4,0.175,5,0.589,6,0.589,7,0.589,8,0.589,9,0.335,11,0.568,12,0.589,13,1.821,14,1.437,16,0.951,18,0.951,20,0.207,21,0.517,23,0.652,24,1.332,26,1.752,27,0.641,28,0.048,29,0.588,30,1.127,31,1.091,32,0.943,34,0.483,35,0.175,37,0.207,38,0.53,39,0.465,40,0.951,41,0.951,42,0.589,43,1.372,44,0.589,45,0.991,46,0.589,47,0.32,48,0.589,49,0.922,50,1.43,51,0.589,52,0.32,53,0.589,54,0.32,55,0.589,56,0.364,57,0.364,58,0.589,59,0.364,60,1.093,61,0.465,62,0.589,63,0.589,64,0.589,65,0.012,66,0.019,67,0.012,82,0.955,84,1.234,86,1.384,87,1.763,113,2.715,119,0.664,120,1.526,124,0.951,125,0.665,126,1.883,132,1.515,133,1.698,137,1.61,138,1.337,144,0.752,145,0.665,149,1.205,150,1.597,151,2.251,152,1.537,154,1.547,155,1.274,157,1.372,165,0.465,167,0.819,170,1.072,179,1.062,181,1.13,183,1.597,191,1.43,198,0.752,202,1.048,203,2.251,204,1.188,209,1.61,210,1.348,215,1.547,217,0.96,220,1.752,224,1.363,225,1.214,226,3.141,234,0.857,239,1.072,240,1.348,251,0.75,255,1.547,260,0.857,261,2.651,264,0.989,265,0.943,266,0.943,267,0.857,270,0.752,273,0.857,274,0.857,278,1.308,281,2.414,286,2.305,293,1.337,298,1.883,299,2.717,316,1.883,317,1.547,321,4.211,323,1.597,325,2.163,329,2.567,334,0.989,335,1.883,347,2.008,364,1.883,365,0.989,383,0.857,393,0.752,395,0.857,396,1.74,397,1.526,398,1.526,399,1.547,400,2.008,401,0.752,417,2.192,434,0.989,444,0.857,445,0.857,446,0.857,447,0.989,450,1.214,469,1.166,473,0.857,477,1.166,507,1.166,565,0.589,566,1.166,586,1.384,587,1.384,588,0.752,589,0.752,601,0.857,646,1.883,647,2.487,654,1.597,657,1.883,658,1.91,660,0.857,671,1.597,672,0.989,676,1.348,677,0.752,687,1.597,689,1.597,690,1.166,691,1.166,692,1.166,709,0.857,711,1.883,712,1.166,731,0.989,738,1.883,753,3.573,754,0.989,755,2.912,756,2.316,757,2.912,758,3.668,759,2.912,760,2.912,761,2.912,762,2.912,763,2.912,764,3.343,765,2.912,766,3.343,767,3.668,768,3.343,769,3.343,770,2.316,771,2.912,772,2.316,773,2.912,774,2.316,775,3.668,776,1.883,777,1.434,778,2.316,779,4.148,780,1.434,781,1.434,782,1.434,783,3.343,784,2.717,785,1.434,786,1.434,787,1.166,788,1.434,789,2.316,790,2.316,791,1.434,792,2.316,793,1.434,794,2.316,795,1.883,796,2.316,797,2.316,798,2.316,799,2.316,800,1.434,801,1.434,802,2.316,803,2.316,804,2.912,805,1.434,806,1.883,807,1.597,808,2.008,809,1.434,810,1.434,811,2.316,812,3.343,813,1.434,814,2.717,815,1.434,816,2.316,817,3.923,818,3.923,819,1.434,820,2.316,821,2.316,822,1.434,823,2.316,824,1.434,825,1.384,826,2.316,827,1.434,828,2.316,829,0.989,830,1.597,831,0.989,832,1.434,833,1.166,834,1.434,835,1.434,836,1.434,837,1.434,838,3.343,839,2.367,840,1.434,841,1.434,842,1.434,843,2.912,844,1.434,845,2.316,846,2.316,847,1.434,848,2.717,849,1.434,850,2.316,851,3.343,852,1.434,853,1.434,854,3.343,855,1.434,856,2.316,857,3.923,858,2.316,859,3.343,860,2.316,861,1.434,862,2.912,863,2.316,864,1.434,865,3.668,866,2.316,867,1.166,868,1.434,869,1.434,870,1.434,871,1.434,872,1.434,873,1.434,874,1.434,875,1.434,876,1.434,877,1.434,878,2.912,879,2.316,880,1.434,881,2.912,882,1.434,883,2.912,884,1.434,885,1.434,886,1.434,887,1.434,888,1.434,889,1.434,890,1.434,891,1.434,892,1.434,893,2.717,894,1.434,895,3.189,896,2.316,897,1.883,898,1.883,899,2.316,900,2.316,901,1.597,902,1.597,903,1.883,904,1.883,905,1.597,906,1.883,907,1.883,908,1.883,909,1.883,910,1.166,911,2.316,912,1.166,913,1.434,914,1.74,915,1.166,916,1.166,917,1.434,918,1.434,919,1.166,920,1.434,921,1.434,922,1.597,923,0.989,924,1.74,925,1.166,926,1.166,927,1.883,928,1.434,929,1.434,930,2.316,931,1.434,932,1.434,933,1.166,934,1.434]],["title/components/IndexComponent.html",[0,0.17,52,0.626]],["body/components/IndexComponent.html",[0,0.316,1,0.807,2,1.516,3,0.459,4,0.387,5,1.305,6,1.305,7,1.305,8,1.305,9,0.318,11,0.62,12,1.305,13,2.244,14,1.77,15,2.584,16,1.706,18,1.706,20,0.67,23,0.959,24,1.055,27,0.459,28,0.047,32,0.537,34,0.601,35,0.387,37,0.459,38,0.459,39,1.029,40,1.706,41,1.706,42,1.305,43,2.017,44,1.305,45,1.035,46,1.305,47,0.71,48,1.305,49,0.71,50,0.807,51,1.305,52,1.168,53,1.305,54,0.71,55,1.305,56,0.807,57,0.807,58,1.305,59,0.807,60,0.71,61,1.029,62,1.305,63,1.305,64,1.305,65,0.026,66,0.033,67,0.026,82,1.076,149,0.807,152,1.5,156,1.924,158,1.305,167,0.928,179,1.159,181,0.71,215,1.924,217,1.194,239,1.924,240,2.144,251,1.346,255,2.274,265,1.029,266,1.029,278,1.194,393,1.666,399,1.924,417,2.484,430,3.994,473,2.484,565,1.305,584,3.388,588,2.179,589,2.179,642,3.379,643,3.379,645,3.379,658,2.36,660,1.899,669,2.192,671,2.867,673,2.584,676,1.924,677,2.179,685,2.584,687,2.867,689,2.192,695,2.867,703,2.192,704,2.584,732,2.584,910,2.584,914,1.899,922,2.867,923,2.192,924,1.899,935,2.584,936,4.632,937,4.157,938,3.178,939,3.178,940,3.178,941,3.178,942,3.178,943,3.178,944,4.157,945,4.157,946,4.157,947,4.157,948,4.157,949,4.157,950,4.157,951,3.379,952,4.157,953,4.157,954,4.157,955,4.157,956,3.178,957,2.584,958,3.178,959,2.584,960,3.178,961,3.178,962,3.178,963,3.178,964,3.178,965,3.178]],["title/components/LoginComponent.html",[0,0.17,54,0.626]],["body/components/LoginComponent.html",[0,0.26,1,0.512,2,1.1,3,0.291,4,0.245,5,0.827,6,0.827,7,0.827,8,0.827,9,0.302,11,0.589,12,0.827,13,2.021,14,1.594,16,1.239,18,1.239,20,0.291,21,0.674,23,0.393,24,1.273,26,1.582,27,0.725,28,0.048,29,1.147,30,1.154,31,1.147,32,0.679,34,0.581,35,0.245,37,0.291,38,0.436,39,0.653,40,1.239,41,1.239,42,0.827,43,1.649,44,0.827,45,0.897,46,0.827,47,0.45,48,0.827,49,0.45,50,0.512,51,0.827,52,0.45,53,0.827,54,1.009,55,0.827,56,0.512,57,0.512,58,0.827,59,0.512,60,1.221,61,0.653,62,0.827,63,0.827,64,0.827,65,0.029,66,0.024,67,0.016,82,0.961,84,1.524,119,0.933,120,1.056,124,2.116,132,1.236,133,0.735,134,1.1,145,0.579,149,1.02,151,1.582,152,0.653,154,1.675,157,1.239,165,0.653,167,1.075,171,0.827,172,1.056,175,1.485,181,0.897,182,1.766,197,1.39,198,1.896,200,1.39,201,1.39,202,1.147,209,1.766,210,0.933,211,1.582,214,1.397,231,2.081,239,1.397,240,1.675,251,0.977,255,1.86,260,1.204,261,2.798,264,2.081,265,0.977,266,0.977,270,1.056,273,1.204,274,1.204,278,1.345,281,2.413,286,2.081,293,1.319,302,1.1,317,1.397,329,2.698,350,1.638,363,1.638,383,1.204,390,2.453,393,1.056,395,1.204,396,1.803,397,1.056,398,1.056,399,2.167,400,1.39,401,1.056,416,2.453,422,2.453,423,2.453,427,2.081,432,1.638,433,3.266,434,2.495,435,1.638,436,2.453,437,1.638,438,1.638,439,1.638,440,1.638,441,1.39,442,1.638,443,2.453,444,1.803,445,1.803,446,1.803,450,2.105,464,3.671,465,1.638,473,1.204,500,1.204,501,2.941,565,0.827,583,1.638,584,2.081,585,2.941,606,1.638,612,1.638,626,1.638,630,1.638,644,1.638,658,1.675,676,1.397,677,1.056,695,1.39,700,1.39,708,1.204,723,1.39,731,2.081,779,2.453,806,2.453,807,2.081,808,2.77,825,2.877,848,2.453,867,1.638,897,2.453,914,1.204,922,2.081,923,1.39,924,2.162,951,2.453,957,1.638,966,1.39,967,3.618,968,3.018,969,2.967,970,2.967,971,3.618,972,2.967,973,3.018,974,4.017,975,4.017,976,3.018,977,3.018,978,2.081,979,3.018,980,3.018,981,2.015,982,3.018,983,2.015,984,2.015,985,3.018,986,3.018,987,3.018,988,4.017,989,2.015,990,4.017,991,2.015,992,4.814,993,2.015,994,4.923,995,3.114,996,3.018,997,2.015,998,2.77,999,2.015,1000,2.09,1001,2.015,1002,2.015,1003,2.015,1004,2.015,1005,2.015,1006,2.015,1007,2.015,1008,2.015,1009,3.018,1010,2.015,1011,1.39,1012,2.015,1013,2.015,1014,2.015,1015,3.018,1016,2.015,1017,2.015,1018,2.015,1019,2.015,1020,2.015,1021,2.015,1022,2.015,1023,2.015,1024,3.018,1025,2.015,1026,2.015,1027,3.018,1028,2.015,1029,2.015,1030,2.015,1031,3.018,1032,2.015,1033,2.015,1034,1.39,1035,2.015,1036,2.015,1037,3.018,1038,2.015,1039,2.015,1040,2.015,1041,2.015,1042,2.015,1043,2.015,1044,2.015,1045,2.015,1046,3.018,1047,2.015,1048,2.015,1049,3.018,1050,2.015,1051,2.015,1052,3.618,1053,3.018,1054,2.015,1055,3.018,1056,2.015,1057,2.015,1058,2.015,1059,2.015,1060,2.015,1061,2.015,1062,2.015,1063,2.015,1064,2.015,1065,2.015,1066,2.015,1067,1.39,1068,2.015,1069,2.015,1070,2.015,1071,2.015,1072,1.39,1073,2.015,1074,2.015,1075,2.015,1076,2.015,1077,2.015,1078,2.015,1079,2.015,1080,2.015,1081,2.015,1082,2.015,1083,2.015,1084,2.015,1085,2.015]],["title/interfaces/Score.html",[57,0.712,128,0.805]],["body/interfaces/Score.html",[3,0.454,4,0.382,9,0.314,11,0.613,20,0.454,21,0.921,23,0.613,27,0.666,28,0.048,29,1.29,34,0.666,35,0.382,37,0.596,38,0.666,57,1.486,65,0.025,66,0.033,67,0.025,83,1.145,103,1.289,123,2.844,125,1.497,128,1.323,129,1.876,132,1.184,133,2.035,134,1.901,137,2.238,138,1.966,139,1.184,140,2.351,141,2.351,142,1.289,143,1.876,144,1.646,145,1.184,149,1.169,155,1.405,158,1.693,159,2.085,160,2.007,161,1.453,163,1.453,164,1.453,165,1.017,166,1.289,167,1.092,168,1.876,169,1.876,170,1.453,171,1.289,176,1.876,177,1.876,179,1.679,180,1.646,181,1.029,191,1.783,192,1.909,202,0.797,217,1.184,220,1.646,224,0.902,235,1.453,283,1.646,302,1.145,319,2.165,325,2.413,1000,2.459,1086,2.165,1087,2.464,1088,3.176,1089,2.552,1090,2.165,1091,2.552,1092,2.552,1093,2.552,1094,2.552,1095,2.552,1096,3.352,1097,2.552,1098,3.743,1099,2.552,1100,2.844,1101,2.552]],["title/injectables/ScoreService.html",[83,1.022,139,0.805]],["body/injectables/ScoreService.html",[3,0.41,4,0.345,9,0.284,11,0.553,20,0.41,21,0.86,23,0.854,24,1.315,27,0.709,28,0.048,29,1.285,30,1.106,31,0.978,34,0.632,35,0.345,37,0.557,38,0.709,45,0.977,57,1.457,65,0.023,66,0.031,67,0.023,83,1.404,103,1.163,123,3.236,125,1.256,128,1.106,132,0.814,133,1.789,134,1.595,137,2.193,138,1.846,139,1.106,140,2.439,141,2.473,142,1.163,143,1.694,144,1.485,145,1.348,149,1.315,155,1.578,158,1.796,159,2.217,160,2.125,161,2.025,163,1.312,164,1.312,165,0.918,166,1.163,167,1.048,168,2.301,169,2.301,170,1.783,171,1.163,176,2.301,177,2.301,179,1.846,180,2.018,181,1.157,191,1.789,192,1.783,202,0.978,217,1.348,220,2.018,224,1.106,235,1.783,251,1.247,265,1.417,266,1.417,278,0.814,283,2.018,302,1.404,319,2.656,325,2.653,737,1.694,742,1.955,1000,2.343,1086,1.955,1087,1.694,1088,3.571,1089,3.131,1090,2.656,1091,3.815,1092,2.304,1093,3.131,1094,3.131,1095,2.304,1096,3.131,1097,2.304,1098,3.815,1099,3.556,1100,2.656,1101,3.815,1102,3.851,1103,3.851,1104,2.834,1105,2.834,1106,2.834,1107,2.834,1108,2.834,1109,2.834]],["title/components/ScoreTabComponent.html",[0,0.17,56,0.712]],["body/components/ScoreTabComponent.html",[0,0.296,1,0.716,2,1.399,3,0.408,4,0.343,5,1.158,6,1.158,7,1.158,8,1.158,9,0.282,11,0.55,12,1.158,13,2.19,14,1.728,16,1.575,18,1.575,20,0.408,21,0.857,23,0.852,24,1.313,27,0.731,28,0.048,29,0.975,30,1.102,31,0.975,32,0.477,34,0.555,35,0.343,37,0.408,38,0.408,39,0.913,40,1.575,41,1.575,42,1.158,43,1.922,44,1.158,45,0.975,46,1.158,47,0.63,48,1.158,49,0.63,50,1.108,51,1.158,52,0.63,53,1.158,54,0.63,55,1.158,56,1.283,57,1.424,58,1.158,59,0.716,60,1.046,61,0.913,62,1.158,63,1.158,64,1.158,65,0.023,66,0.031,67,0.023,83,2.015,107,3.145,125,1.253,132,1.102,145,1.253,155,1.102,167,0.63,170,1.777,179,1.399,181,0.975,202,0.975,224,1.102,239,1.777,240,2.02,251,1.243,255,2.168,265,0.913,266,0.913,273,1.685,274,1.685,278,1.345,293,1.028,325,2.454,365,1.945,394,2.293,397,1.478,424,2.293,577,2.293,658,1.777,672,3.009,676,1.777,677,1.478,703,2.647,708,2.294,709,1.685,728,2.293,729,2.293,787,3.807,912,3.547,919,2.293,926,2.293,927,2.293,1000,1.777,1088,3.009,1090,2.647,1100,2.647,1110,4.278,1111,2.293,1112,4.363,1113,3.838,1114,4.363,1115,4.683,1116,5.054,1117,2.82,1118,3.838,1119,2.82,1120,2.82,1121,3.838,1122,3.838,1123,3.838,1124,3.838,1125,2.82,1126,2.82,1127,2.82,1128,4.683,1129,3.838,1130,2.82,1131,2.82,1132,2.82,1133,2.82,1134,2.82,1135,3.838,1136,3.838,1137,3.838,1138,3.838,1139,3.838,1140,3.838,1141,3.838,1142,3.838,1143,2.82,1144,3.838,1145,3.838,1146,2.82,1147,2.293,1148,2.82,1149,2.82,1150,2.82,1151,2.82,1152,2.82,1153,2.82,1154,2.293,1155,2.293,1156,2.82,1157,2.82,1158,2.82]],["title/interfaces/User.html",[60,0.626,128,0.805]],["body/interfaces/User.html",[0,0.284,3,0.364,4,0.306,9,0.252,11,0.491,20,0.364,21,0.792,23,0.491,27,0.68,28,0.048,29,1.426,30,1.019,31,0.901,32,0.599,33,2.833,34,0.645,35,0.306,37,0.513,38,0.513,60,1.303,65,0.02,66,0.029,67,0.02,82,0.918,84,0.723,87,1.033,103,1.033,124,2.003,125,1.47,128,1.18,129,1.504,132,1.401,133,1.923,134,1.866,137,2.101,138,1.498,139,1.019,140,2.177,141,2.177,142,1.033,145,0.723,146,2.12,149,0.901,152,1.149,155,1.351,156,1.165,158,1.686,159,1.456,160,1.831,161,1.165,163,1.642,164,1.642,165,1.33,166,1.456,167,1.162,171,1.033,172,1.319,173,1.504,174,1.504,175,1.033,181,0.917,182,1.033,191,1.626,192,1.165,194,1.504,202,0.901,203,1.319,204,1.149,209,1.033,211,1.319,214,1.165,215,1.642,217,1.281,224,1.019,225,1.319,235,1.165,278,0.723,281,2.177,283,1.319,293,0.918,302,1.498,317,1.642,420,1.736,450,2.153,495,1.736,500,1.504,565,1.033,587,1.504,588,1.319,589,1.319,601,1.504,647,1.319,825,2.81,969,2.833,970,3.076,972,2.833,978,2.446,995,3.713,998,2.833,1000,2.512,1011,1.736,1034,1.736,1067,1.736,1072,3.769,1087,2.12,1159,1.736,1160,2.046,1161,2.046,1162,2.046,1163,2.046,1164,3.626,1165,2.046,1166,2.883,1167,2.046,1168,2.046,1169,2.046,1170,2.046,1171,2.046,1172,2.046,1173,2.046,1174,2.046,1175,2.046,1176,2.046,1177,2.046,1178,2.046,1179,2.046,1180,3.822,1181,1.736,1182,2.046,1183,2.046,1184,3.626,1185,2.046,1186,2.046,1187,2.046,1188,2.046,1189,2.046,1190,2.046,1191,2.046,1192,2.046,1193,2.046,1194,2.046,1195,1.736,1196,1.736,1197,3.339,1198,2.046,1199,2.046,1200,2.883,1201,2.046,1202,2.046]],["title/components/UserActionsBtnsComponent.html",[0,0.17,59,0.712]],["body/components/UserActionsBtnsComponent.html",[0,0.287,1,0.658,2,1.32,3,0.375,4,0.315,5,1.064,6,1.064,7,1.064,8,1.064,9,0.259,11,0.506,12,1.064,13,2.151,14,1.697,16,1.486,18,1.486,20,0.375,21,0.809,23,0.882,24,1.207,26,1.898,27,0.523,28,0.047,32,0.803,34,0.687,35,0.315,37,0.375,38,0.603,39,0.84,40,1.486,41,1.486,42,1.064,43,1.855,44,1.064,45,0.932,46,1.064,47,1.209,48,1.064,49,0.579,50,0.658,51,1.064,52,0.579,53,1.064,54,0.579,55,1.064,56,0.658,57,0.658,58,1.064,59,1.25,60,1.233,61,1.825,62,1.713,63,1.064,64,1.064,65,0.021,66,0.029,67,0.021,82,1.047,84,1.566,87,1.486,110,3.396,119,1.2,124,1.486,149,1.06,154,1.676,155,1.199,156,1.676,157,1.064,167,1.009,181,0.932,202,0.919,204,1.173,217,1.04,224,0.745,234,2.164,239,1.676,240,1.932,251,1.173,255,2.28,260,1.549,261,3.021,265,0.84,266,0.84,267,2.164,270,1.898,278,1.298,284,2.497,302,1.32,317,1.932,323,2.497,331,2.944,347,2.497,383,1.549,393,1.358,395,1.549,398,1.358,399,1.2,417,2.164,427,1.788,441,3.116,444,1.549,445,1.549,446,1.549,447,1.788,565,1.064,586,2.164,647,1.898,652,2.944,654,3.116,658,2.2,660,2.164,669,2.497,676,1.2,686,2.107,700,2.497,708,1.549,709,1.549,723,1.788,776,2.944,784,2.107,795,2.944,807,2.497,814,2.944,833,2.944,839,2.944,893,3.673,895,2.944,898,3.673,901,2.497,902,2.497,903,2.944,904,2.944,905,2.497,906,2.944,907,2.944,908,2.944,909,2.944,914,1.549,915,2.944,916,2.107,924,2.164,925,2.107,933,2.107,959,2.944,1147,2.107,1154,2.107,1155,2.107,1195,2.497,1196,2.497,1203,4.003,1204,2.107,1205,4.174,1206,3.621,1207,4.518,1208,4.174,1209,2.592,1210,2.592,1211,2.592,1212,2.944,1213,2.592,1214,3.621,1215,3.621,1216,2.592,1217,2.592,1218,2.592,1219,2.592,1220,2.592,1221,2.592,1222,2.592,1223,2.592,1224,3.621,1225,3.621,1226,2.592,1227,2.592,1228,2.592,1229,2.592,1230,2.592,1231,2.592,1232,2.592]],["title/injectables/UserService.html",[84,0.805,139,0.805]],["body/injectables/UserService.html",[0,0.306,3,0.303,4,0.255,9,0.21,11,0.799,20,0.303,21,0.694,23,0.723,24,1.237,27,0.704,28,0.048,29,1.426,30,1.316,31,1.163,32,0.692,33,3.16,34,0.592,35,0.255,37,0.449,38,0.535,45,0.915,60,1.294,65,0.017,66,0.025,67,0.017,82,0.971,84,0.893,87,1.276,103,0.861,124,2.134,125,1.177,128,0.893,132,1.429,133,1.671,134,1.494,137,1.681,138,0.764,139,0.893,140,2.255,141,2.303,142,0.861,145,0.893,146,2.448,149,1.04,152,1.2,155,1.534,156,1.439,158,1.681,159,1.681,160,1.881,161,1.715,163,1.439,164,1.439,165,1.327,166,1.276,167,1.111,171,0.861,172,1.099,173,1.253,174,1.253,175,0.861,181,1.088,182,1.276,191,1.595,192,0.971,194,1.253,202,1.04,203,1.629,204,1.327,209,1.276,211,1.099,214,1.439,215,1.896,217,1.399,224,1.177,225,1.629,235,1.439,251,1.007,265,1.327,266,1.327,278,1.064,281,2.343,283,1.629,293,1.133,302,1.671,317,1.715,420,2.144,450,2.401,495,2.144,500,1.857,565,0.861,587,1.857,588,1.629,589,1.629,601,1.253,647,1.629,737,1.253,742,1.446,825,3.025,969,3.017,970,3.359,972,3.017,978,2.825,995,3.431,998,3.017,1000,2.377,1011,2.144,1034,2.144,1067,2.144,1072,3.585,1087,1.253,1159,1.446,1160,1.704,1161,2.527,1162,2.527,1163,2.527,1164,4.044,1165,2.527,1166,3.011,1167,2.527,1168,2.527,1169,2.527,1170,2.527,1171,2.527,1172,2.527,1173,2.527,1174,2.527,1175,2.527,1176,2.527,1177,2.527,1178,2.527,1179,2.527,1180,4.115,1181,2.144,1182,1.704,1183,1.704,1184,3.33,1185,1.704,1186,1.704,1187,1.704,1188,2.527,1189,2.527,1190,2.527,1191,2.527,1192,2.527,1193,1.704,1194,2.527,1195,2.144,1196,2.825,1197,3.011,1198,3.33,1199,1.704,1200,3.011,1201,2.527,1202,2.527,1233,3.108,1234,3.108,1235,3.108,1236,2.097,1237,2.097,1238,2.097,1239,2.097,1240,2.097,1241,2.097,1242,2.097,1243,2.097,1244,2.097]],["title/coverage.html",[1245,3.107]],["body/coverage.html",[0,0.332,1,0.921,9,0.363,10,2.948,27,0.524,28,0.047,32,0.613,47,0.81,49,0.81,50,1.409,52,0.81,54,0.81,56,0.921,57,0.921,59,0.921,60,0.81,61,1.465,65,0.029,66,0.036,67,0.029,82,0.708,83,1.323,84,1.042,107,2.168,110,2.501,113,2.704,125,1.042,128,1.416,130,3.119,139,1.416,204,1.175,238,3.119,379,4.701,401,2.583,753,3.559,754,3.559,830,2.501,831,2.501,935,2.948,966,3.119,1086,3.119,1110,2.948,1111,2.948,1159,3.119,1203,2.948,1204,2.948,1245,2.948,1246,3.627,1247,3.627,1248,3.627,1249,4.523,1250,4.523,1251,5.598,1252,5.598,1253,4.523,1254,4.523,1255,3.627,1256,3.627,1257,3.627,1258,3.627,1259,3.627,1260,4.523,1261,3.627,1262,3.627,1263,3.627,1264,2.948,1265,3.677,1266,2.948,1267,3.677,1268,2.948,1269,2.948,1270,3.627]],["title/dependencies.html",[71,2.014,1271,2.343]],["body/dependencies.html",[28,0.047,35,0.523,65,0.035,66,0.04,67,0.035,71,2.569,91,4.074,92,3.456,100,3.495,119,1.99,142,1.765,1272,4.3,1273,4.651,1274,4.3,1275,4.3,1276,4.3,1277,4.3,1278,4.3,1279,4.3,1280,4.3,1281,4.3,1282,4.3,1283,4.3]],["title/index.html",[20,0.339,1212,1.904,1284,2.343]],["body/index.html",[0,0.31,4,0.483,14,1.286,28,0.038,45,0.887,65,0.032,66,0.038,67,0.032,87,1.63,175,1.962,204,1.286,216,2.373,267,3.065,269,3.228,270,2.081,284,3.297,293,1.941,312,3.228,341,4.428,829,2.738,1181,2.738,1273,3.228,1285,3.97,1286,4.781,1287,3.97,1288,5.129,1289,5.129,1290,3.97,1291,3.97,1292,5.596,1293,3.97,1294,3.97,1295,3.97,1296,3.97,1297,3.97,1298,3.97,1299,3.97,1300,3.97,1301,5.129,1302,3.97,1303,5.448,1304,3.97,1305,3.97,1306,3.97,1307,3.97,1308,3.97,1309,3.228,1310,4.781,1311,4.781,1312,4.328,1313,3.97,1314,4.781,1315,3.97,1316,3.97,1317,3.97,1318,3.97,1319,5.129,1320,3.97,1321,3.97,1322,2.738,1323,3.97]],["title/modules.html",[70,2.003]],["body/modules.html",[28,0.041,65,0.036,66,0.041,67,0.036,69,2.691,70,2.36,81,2.36,92,3.106,1324,4.503,1325,4.503,1326,5.147,1327,4.503,1328,4.503]],["title/overview.html",[1322,2.636]],["body/overview.html",[1,1.418,2,1.436,28,0.047,39,1.275,47,1.142,49,1.142,52,1.142,54,1.142,56,1.298,59,1.298,65,0.032,66,0.038,67,0.032,68,2.353,69,3.515,70,2.064,71,2.353,72,3.201,73,3.201,74,3.201,75,2.716,76,3.201,77,3.201,78,3.201,79,3.201,80,3.201,81,2.679,82,0.998,83,1.864,84,1.468,85,3.867,86,2.353,87,1.616,117,2.353,129,2.353,586,2.353,737,2.353,901,3.28,902,2.716,905,2.716,1322,2.716]],["title/routes.html",[117,2.284]],["body/routes.html",[28,0.042,65,0.037,66,0.042,67,0.037,117,2.73]],["title/miscellaneous/variables.html",[1329,1.904,1330,2.74]],["body/miscellaneous/variables.html",[9,0.533,20,0.528,24,1.351,27,0.81,28,0.047,30,1.558,31,1.313,50,1.351,60,1.155,65,0.029,66,0.037,67,0.029,113,1.913,120,1.913,152,1.471,157,1.864,182,1.864,210,2.462,238,2.517,281,2.288,293,1.886,302,1.656,329,3.372,334,2.517,396,3.179,397,2.71,398,2.788,399,2.288,401,2.842,753,2.517,754,3.567,808,2.517,829,2.517,830,3.132,831,3.132,966,2.517,1264,2.967,1265,4.204,1266,2.967,1267,2.967,1268,4.018,1269,4.018,1309,4.204,1312,2.967,1329,2.967,1330,2.967,1331,4.541,1332,3.65,1333,3.65,1334,4.943,1335,3.65,1336,3.65,1337,3.65,1338,3.65,1339,3.65,1340,3.65,1341,4.541]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":365,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["0.10.2",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":736,"title":{},"body":{"components/GameComponent.html":{}}}],["0.6s",{"_index":681,"title":{},"body":{"components/GameComponent.html":{}}}],["0.7",{"_index":916,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["045fb4",{"_index":1157,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["0px",{"_index":724,"title":{},"body":{"components/GameComponent.html":{}}}],["1",{"_index":317,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["1/1",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":323,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["100",{"_index":379,"title":{},"body":{"components/GameComponent.html":{},"coverage.html":{}}}],["100/howmanyseconds",{"_index":620,"title":{},"body":{"components/GameComponent.html":{}}}],["100px",{"_index":668,"title":{},"body":{"components/GameComponent.html":{}}}],["10px",{"_index":731,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["11.0.5",{"_index":1273,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["12/12",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["130px",{"_index":963,"title":{},"body":{"components/IndexComponent.html":{}}}],["180px",{"_index":1225,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["1px",{"_index":712,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["1s",{"_index":628,"title":{},"body":{"components/GameComponent.html":{}}}],["2",{"_index":586,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":707,"title":{},"body":{"components/GameComponent.html":{}}}],["20/20",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["20px",{"_index":673,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["25",{"_index":931,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["2px",{"_index":690,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["3",{"_index":901,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{},"overview.html":{}}}],["3/3",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["3061ed",{"_index":694,"title":{},"body":{"components/GameComponent.html":{}}}],["30px",{"_index":702,"title":{},"body":{"components/GameComponent.html":{}}}],["325dda",{"_index":693,"title":{},"body":{"components/GameComponent.html":{}}}],["33.33",{"_index":921,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["35px",{"_index":1147,"title":{},"body":{"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["38px",{"_index":725,"title":{},"body":{"components/GameComponent.html":{}}}],["3px",{"_index":734,"title":{},"body":{"components/GameComponent.html":{}}}],["4",{"_index":902,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{},"overview.html":{}}}],["4/4",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":730,"title":{},"body":{"components/GameComponent.html":{}}}],["5",{"_index":903,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["5/5",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":665,"title":{},"body":{"components/GameComponent.html":{}}}],["520px",{"_index":719,"title":{},"body":{"components/GameComponent.html":{}}}],["5px",{"_index":709,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["6",{"_index":904,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["6.6.0",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":616,"title":{},"body":{"components/GameComponent.html":{}}}],["7",{"_index":905,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{},"overview.html":{}}}],["7/8",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":962,"title":{},"body":{"components/IndexComponent.html":{}}}],["8",{"_index":906,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["80",{"_index":661,"title":{},"body":{"components/GameComponent.html":{}}}],["83",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":907,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["9/10",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["90px",{"_index":716,"title":{},"body":{"components/GameComponent.html":{}}}],["a:hover",{"_index":1232,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["abd",{"_index":282,"title":{},"body":{"components/GameComponent.html":{}}}],["above",{"_index":391,"title":{},"body":{"components/GameComponent.html":{}}}],["absolute",{"_index":1155,"title":{},"body":{"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["action",{"_index":686,"title":{},"body":{"components/GameComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["actions",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{}}}],["active",{"_index":154,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["activeuser",{"_index":1164,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["actual_component",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["add",{"_index":319,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["added",{"_index":1201,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["additionallinksbtn",{"_index":922,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["admin",{"_index":775,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["adresa",{"_index":164,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["adresu",{"_index":1056,"title":{},"body":{"components/LoginComponent.html":{}}}],["akcije",{"_index":899,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ako",{"_index":433,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["aktivnog",{"_index":1166,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["align",{"_index":671,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{}}}],["allows",{"_index":402,"title":{},"body":{"components/GameComponent.html":{}}}],["angular",{"_index":1288,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"dependencies.html":{}}}],["animaciju",{"_index":562,"title":{},"body":{"components/GameComponent.html":{}}}],["animation",{"_index":386,"title":{},"body":{"components/GameComponent.html":{}}}],["answer",{"_index":306,"title":{},"body":{"components/GameComponent.html":{}}}],["answers",{"_index":376,"title":{},"body":{"components/GameComponent.html":{}}}],["anything",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{}}}],["api",{"_index":160,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["apija",{"_index":426,"title":{},"body":{"components/GameComponent.html":{}}}],["apiurl",{"_index":161,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"index.html":{}}}],["app.component",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["appmodule",{"_index":69,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":81,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":325,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{}}}],["array.length",{"_index":454,"title":{},"body":{"components/GameComponent.html":{}}}],["array[i",{"_index":458,"title":{},"body":{"components/GameComponent.html":{}}}],["array[j",{"_index":459,"title":{},"body":{"components/GameComponent.html":{}}}],["artifacts",{"_index":1304,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1128,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["ascending",{"_index":1123,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["asinhrone",{"_index":186,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["asinhrono",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["atribut",{"_index":1194,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["attribute",{"_index":217,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["auto",{"_index":659,"title":{},"body":{"components/GameComponent.html":{}}}],["automatically",{"_index":1297,"title":{},"body":{"index.html":{}}}],["available",{"_index":1328,"title":{},"body":{"modules.html":{}}}],["b:any",{"_index":1138,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["backend",{"_index":1093,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["background",{"_index":676,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["bar",{"_index":663,"title":{},"body":{"components/GameComponent.html":{}}}],["barlow",{"_index":1149,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["bcryptjs",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["beginning",{"_index":364,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["being",{"_index":331,"title":{},"body":{"components/GameComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["bgcolor",{"_index":1229,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["bi",{"_index":589,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["binding",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{}}}],["bio",{"_index":592,"title":{},"body":{"components/GameComponent.html":{}}}],["biti",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{}}}],["block",{"_index":959,"title":{},"body":{"components/IndexComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["body",{"_index":956,"title":{},"body":{"components/IndexComponent.html":{}}}],["bold",{"_index":729,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["boolean",{"_index":151,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["bootstrap",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":691,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["both",{"_index":320,"title":{},"body":{"components/GameComponent.html":{}}}],["bottom",{"_index":689,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{}}}],["bottom:20px",{"_index":923,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["bottom:5px",{"_index":960,"title":{},"body":{"components/IndexComponent.html":{}}}],["br",{"_index":720,"title":{},"body":{"components/GameComponent.html":{}}}],["brisanja",{"_index":876,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["broj",{"_index":414,"title":{},"body":{"components/GameComponent.html":{}}}],["brown",{"_index":706,"title":{},"body":{"components/GameComponent.html":{}}}],["browse",{"_index":1326,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1228,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["btns.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["btns.component.css",{"_index":1205,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.html",{"_index":1206,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts",{"_index":1204,"title":{},"body":{"components/UserActionsBtnsComponent.html":{},"coverage.html":{}}}],["btns.component.ts:16",{"_index":1209,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts:25",{"_index":1216,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts:33",{"_index":1210,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts:40",{"_index":1213,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts:49",{"_index":1211,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns/user",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{}}}],["bude",{"_index":477,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["build",{"_index":1303,"title":{},"body":{"index.html":{}}}],["built",{"_index":370,"title":{},"body":{"components/GameComponent.html":{}}}],["button",{"_index":924,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["buttons",{"_index":1218,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["call",{"_index":231,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{}}}],["called",{"_index":808,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":170,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{}}}],["case",{"_index":1176,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["cee3f6",{"_index":918,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["cekamo",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["center",{"_index":687,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{}}}],["chance",{"_index":328,"title":{},"body":{"components/GameComponent.html":{}}}],["change",{"_index":269,"title":{},"body":{"components/GameComponent.html":{},"index.html":{}}}],["check",{"_index":312,"title":{},"body":{"components/GameComponent.html":{},"index.html":{}}}],["checkiffieldsnotempty",{"_index":763,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["checkiffieldsnotempty():boolean",{"_index":882,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["checks",{"_index":286,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["choice",{"_index":1122,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["choose",{"_index":1214,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["choosen",{"_index":803,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["chooses",{"_index":806,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["chosen",{"_index":811,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["class",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1289,"title":{},"body":{"index.html":{}}}],["click",{"_index":295,"title":{},"body":{"components/GameComponent.html":{}}}],["click)=\"oncolumnoneclick(item.columnone",{"_index":463,"title":{},"body":{"components/GameComponent.html":{}}}],["clicked",{"_index":304,"title":{},"body":{"components/GameComponent.html":{}}}],["clicks",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{}}}],["close",{"_index":814,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["cluster_appmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1181,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["coded",{"_index":1191,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["collects",{"_index":280,"title":{},"body":{"components/GameComponent.html":{}}}],["color",{"_index":677,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{}}}],["color:#0a1b2a",{"_index":914,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["color:#40ff00",{"_index":717,"title":{},"body":{"components/GameComponent.html":{}}}],["color:#5882fa",{"_index":957,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["color:#8a0808",{"_index":705,"title":{},"body":{"components/GameComponent.html":{}}}],["color:#b45f04",{"_index":698,"title":{},"body":{"components/GameComponent.html":{}}}],["color:#d8d8d8",{"_index":911,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["color:#f3f781",{"_index":920,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["color:#f7fe2e",{"_index":1156,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["color:black",{"_index":700,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["color:forestgreen",{"_index":715,"title":{},"body":{"components/GameComponent.html":{}}}],["color:red",{"_index":1158,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["color:white",{"_index":723,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["column",{"_index":276,"title":{},"body":{"components/GameComponent.html":{}}}],["columns",{"_index":330,"title":{},"body":{"components/GameComponent.html":{}}}],["command",{"_index":1323,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"overview.html":{}}}],["components/game",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/game/game.component",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/game/score",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["components/game/user",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["components/index/index.component",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["condensed",{"_index":1151,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["console.log(\"not",{"_index":837,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["console.log('[login",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(data",{"_index":577,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["console.log(e",{"_index":847,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["console.log(err",{"_index":849,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["console.log(id",{"_index":872,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["console.log(this.scoresortorder",{"_index":1134,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["const",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(gameservice",{"_index":938,"title":{},"body":{"components/IndexComponent.html":{}}}],["constructor(httpclient",{"_index":742,"title":{},"body":{"injectables/GameService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":171,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":424,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["constructor(scoreservice",{"_index":1117,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["constructor(userservice",{"_index":260,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["contact",{"_index":176,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["contacts",{"_index":1188,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["contain",{"_index":826,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["contains",{"_index":224,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["context",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["corner",{"_index":1130,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["correct",{"_index":308,"title":{},"body":{"components/GameComponent.html":{}}}],["correctly",{"_index":374,"title":{},"body":{"components/GameComponent.html":{}}}],["coverage",{"_index":1245,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":203,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["creategameinputelements",{"_index":1226,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["createnewuser",{"_index":1233,"title":{},"body":{"injectables/UserService.html":{}}}],["createnewuser(usr",{"_index":1192,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["creating",{"_index":817,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["css",{"_index":602,"title":{},"body":{"components/GameComponent.html":{}}}],["currect",{"_index":343,"title":{},"body":{"components/GameComponent.html":{}}}],["currentactivegamename",{"_index":243,"title":{},"body":{"components/GameComponent.html":{}}}],["currently",{"_index":153,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["cursor",{"_index":274,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{}}}],["cuva",{"_index":572,"title":{},"body":{"components/GameComponent.html":{}}}],["cuvamo",{"_index":1165,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["cuvanje",{"_index":345,"title":{},"body":{"components/GameComponent.html":{}}}],["da",{"_index":450,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["dalje",{"_index":471,"title":{},"body":{"components/GameComponent.html":{}}}],["data",{"_index":132,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["data.name",{"_index":596,"title":{},"body":{"components/GameComponent.html":{}}}],["database",{"_index":137,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["datatablee",{"_index":912,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["datauser",{"_index":1200,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["declarations",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":400,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["decoration:none",{"_index":1231,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["decreasepermin",{"_index":619,"title":{},"body":{"components/GameComponent.html":{}}}],["default",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultni",{"_index":440,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["defiend",{"_index":184,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":804,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["deletes",{"_index":802,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["deligate",{"_index":798,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["dependencies",{"_index":71,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1142,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["descending",{"_index":1124,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["desne",{"_index":645,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["dev",{"_index":1294,"title":{},"body":{"index.html":{}}}],["development",{"_index":1291,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":779,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["directive",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["directives",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1302,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1307,"title":{},"body":{"index.html":{}}}],["disable",{"_index":294,"title":{},"body":{"components/GameComponent.html":{}}}],["disableclickonitems",{"_index":252,"title":{},"body":{"components/GameComponent.html":{}}}],["disableclickonitems():void",{"_index":560,"title":{},"body":{"components/GameComponent.html":{}}}],["disasble",{"_index":272,"title":{},"body":{"components/GameComponent.html":{}}}],["display",{"_index":669,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["displayed",{"_index":332,"title":{},"body":{"components/GameComponent.html":{}}}],["dist",{"_index":1306,"title":{},"body":{"index.html":{}}}],["div",{"_index":964,"title":{},"body":{"components/IndexComponent.html":{}}}],["dobar",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{}}}],["dobijamo",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{}}}],["dobijene",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{}}}],["dobijeni",{"_index":421,"title":{},"body":{"components/GameComponent.html":{}}}],["documentation",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["dodaj",{"_index":570,"title":{},"body":{"components/GameComponent.html":{}}}],["dole",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["dozvolu",{"_index":1173,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["draw",{"_index":384,"title":{},"body":{"components/GameComponent.html":{}}}],["drugaciji",{"_index":593,"title":{},"body":{"components/GameComponent.html":{}}}],["druge",{"_index":498,"title":{},"body":{"components/GameComponent.html":{}}}],["drugoj",{"_index":540,"title":{},"body":{"components/GameComponent.html":{}}}],["dugme",{"_index":651,"title":{},"body":{"components/GameComponent.html":{}}}],["dynamic",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":846,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["e.columnone.trim",{"_index":886,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["e.columntwo.trim",{"_index":887,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["e.pointer",{"_index":564,"title":{},"body":{"components/GameComponent.html":{}}}],["e.selectedone",{"_index":481,"title":{},"body":{"components/GameComponent.html":{}}}],["e.selectedtwo",{"_index":511,"title":{},"body":{"components/GameComponent.html":{}}}],["e2e",{"_index":1316,"title":{},"body":{"index.html":{}}}],["ease",{"_index":682,"title":{},"body":{"components/GameComponent.html":{}}}],["easier",{"_index":359,"title":{},"body":{"components/GameComponent.html":{}}}],["edit",{"_index":833,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["eiither",{"_index":823,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["elem.columnone",{"_index":490,"title":{},"body":{"components/GameComponent.html":{}}}],["elem.columntwo",{"_index":516,"title":{},"body":{"components/GameComponent.html":{}}}],["elem.selectedone",{"_index":502,"title":{},"body":{"components/GameComponent.html":{}}}],["elemenat",{"_index":492,"title":{},"body":{"components/GameComponent.html":{}}}],["element",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["elemente",{"_index":452,"title":{},"body":{"components/GameComponent.html":{}}}],["elements",{"_index":277,"title":{},"body":{"components/GameComponent.html":{}}}],["email",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["eml",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["empties",{"_index":783,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["empty",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["enables",{"_index":832,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["end",{"_index":293,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ended",{"_index":148,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{}}}],["entered",{"_index":1180,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["enviroment",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":1265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":287,"title":{},"body":{"components/GameComponent.html":{}}}],["err",{"_index":848,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["error",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{}}}],["event",{"_index":296,"title":{},"body":{"components/GameComponent.html":{}}}],["execute",{"_index":1314,"title":{},"body":{"index.html":{}}}],["execution",{"_index":316,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["exist",{"_index":315,"title":{},"body":{"components/GameComponent.html":{}}}],["export",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["fajlu",{"_index":465,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["false",{"_index":152,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1148,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["field",{"_index":825,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fields",{"_index":321,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1299,"title":{},"body":{"index.html":{}}}],["filled",{"_index":778,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["finds",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":313,"title":{},"body":{"components/GameComponent.html":{}}}],["flag",{"_index":216,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"index.html":{}}}],["flagselecteditems",{"_index":244,"title":{},"body":{"components/GameComponent.html":{}}}],["flex",{"_index":670,"title":{},"body":{"components/GameComponent.html":{}}}],["font",{"_index":703,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{},"components/ScoreTabComponent.html":{}}}],["for(let",{"_index":844,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["form",{"_index":784,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["format",{"_index":136,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["formcreategame",{"_index":932,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["forminputinvalid",{"_index":757,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["formsection",{"_index":1082,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":235,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["founditem",{"_index":482,"title":{},"body":{"components/GameComponent.html":{}}}],["founditem.pointer",{"_index":547,"title":{},"body":{"components/GameComponent.html":{}}}],["founditem.selectedone",{"_index":491,"title":{},"body":{"components/GameComponent.html":{}}}],["founditem.selectedtwo",{"_index":525,"title":{},"body":{"components/GameComponent.html":{}}}],["founditem.success",{"_index":544,"title":{},"body":{"components/GameComponent.html":{}}}],["full",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["function",{"_index":329,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["funkcija",{"_index":630,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["funkcije",{"_index":187,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["further",{"_index":1318,"title":{},"body":{"index.html":{}}}],["ga",{"_index":515,"title":{},"body":{"components/GameComponent.html":{}}}],["game",{"_index":32,"title":{"interfaces/Game.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["game'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["game.component",{"_index":1217,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["game.component.css",{"_index":241,"title":{},"body":{"components/GameComponent.html":{}}}],["game.component.html",{"_index":242,"title":{},"body":{"components/GameComponent.html":{}}}],["game.service",{"_index":1160,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["gameactive",{"_index":156,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/IndexComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["gameapp",{"_index":1285,"title":{},"body":{"index.html":{}}}],["gamecomponent",{"_index":47,"title":{"components/GameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameendedflag",{"_index":150,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{}}}],["gameendedsendscoreresult",{"_index":253,"title":{},"body":{"components/GameComponent.html":{}}}],["gamename",{"_index":733,"title":{},"body":{"components/GameComponent.html":{}}}],["gameobj",{"_index":205,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["games",{"_index":234,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["gameservice",{"_index":82,"title":{"injectables/GameService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["gametablelist",{"_index":758,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["gametabviewcomponent",{"_index":49,"title":{"components/GameTabViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gde",{"_index":200,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{}}}],["generate",{"_index":1301,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1287,"title":{},"body":{"index.html":{}}}],["get(`${this.apiurl}/game",{"_index":193,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["get(`${this.apiurl}/game/all",{"_index":237,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["get(`${this.apiurl}/score",{"_index":1092,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["getallgames",{"_index":236,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["getgame",{"_index":185,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["getgameendedflag",{"_index":221,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["getgametablelist",{"_index":764,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["getiscreatemodalactive",{"_index":765,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["getiscreatemodalactive():boolean",{"_index":894,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["getloggedinuser",{"_index":1198,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getscore",{"_index":1091,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["getscorelist",{"_index":1101,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["getter",{"_index":220,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["getting",{"_index":1284,"title":{"index.html":{}},"body":{}}],["glavna",{"_index":163,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["go",{"_index":1321,"title":{},"body":{"index.html":{}}}],["going",{"_index":336,"title":{},"body":{"components/GameComponent.html":{}}}],["gotova",{"_index":558,"title":{},"body":{"components/GameComponent.html":{}}}],["grab",{"_index":338,"title":{},"body":{"components/GameComponent.html":{}}}],["graficki",{"_index":639,"title":{},"body":{"components/GameComponent.html":{}}}],["graph",{"_index":1327,"title":{},"body":{"modules.html":{}}}],["greske",{"_index":851,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["group",{"_index":685,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["h1",{"_index":910,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{}}}],["h5",{"_index":1227,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["handles",{"_index":794,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["hard",{"_index":1190,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["height",{"_index":667,"title":{},"body":{"components/GameComponent.html":{}}}],["height:100",{"_index":675,"title":{},"body":{"components/GameComponent.html":{}}}],["height:200px",{"_index":684,"title":{},"body":{"components/GameComponent.html":{}}}],["hellousername",{"_index":722,"title":{},"body":{"components/GameComponent.html":{}}}],["help",{"_index":1319,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":821,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["hover",{"_index":275,"title":{},"body":{"components/GameComponent.html":{}}}],["howmanyseconds",{"_index":617,"title":{},"body":{"components/GameComponent.html":{}}}],["html",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["http://localhost:4200",{"_index":1296,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":140,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclijenta",{"_index":173,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["https://angular.io/guide/observables",{"_index":190,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["https://localhost:5101",{"_index":1161,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["https://localhost:5201/api",{"_index":1089,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["https://localhost:5301/api",{"_index":162,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["id",{"_index":133,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ide",{"_index":626,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["idemo",{"_index":524,"title":{},"body":{"components/GameComponent.html":{}}}],["identifier",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["if(!founditem){return",{"_index":503,"title":{},"body":{"components/GameComponent.html":{}}}],["if(!pointerflag){return",{"_index":462,"title":{},"body":{"components/GameComponent.html":{}}}],["if(!this.checkiffieldsnotempty",{"_index":856,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["if(founditem.success){return",{"_index":517,"title":{},"body":{"components/GameComponent.html":{}}}],["if(issuccess",{"_index":542,"title":{},"body":{"components/GameComponent.html":{}}}],["if(res",{"_index":1062,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.gameservice.getgameendedflag",{"_index":468,"title":{},"body":{"components/GameComponent.html":{}}}],["if(this.gameservice.getgameendedflag()){clearinterval(this.interval",{"_index":632,"title":{},"body":{"components/GameComponent.html":{}}}],["if(this.inputnamegamedata.trim",{"_index":884,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["if(this.isnumberoftriesequaltoten",{"_index":553,"title":{},"body":{"components/GameComponent.html":{}}}],["if(this.numoftries",{"_index":559,"title":{},"body":{"components/GameComponent.html":{}}}],["if(this.scoresortorder",{"_index":1135,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["if(userservice.getloggedinuser().id",{"_index":432,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["if(userservice.getloggedinuser().role",{"_index":834,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ifadmin",{"_index":1224,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["igra",{"_index":417,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["igraj",{"_index":955,"title":{},"body":{"components/IndexComponent.html":{}}}],["igrali",{"_index":950,"title":{},"body":{"components/IndexComponent.html":{}}}],["igranapravi",{"_index":934,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["igre",{"_index":647,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["igru",{"_index":654,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["ih",{"_index":545,"title":{},"body":{"components/GameComponent.html":{}}}],["ili",{"_index":951,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["ima",{"_index":1172,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ime",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["imena",{"_index":603,"title":{},"body":{"components/GameComponent.html":{}}}],["implements",{"_index":239,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["import",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["inactive",{"_index":1179,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["index'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["index.component.css",{"_index":936,"title":{},"body":{"components/IndexComponent.html":{}}}],["index.component.html",{"_index":937,"title":{},"body":{"components/IndexComponent.html":{}}}],["index.html",{"_index":396,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["indexcomponent",{"_index":52,"title":{"components/IndexComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["initemptyinputupdateform",{"_index":766,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["initialize",{"_index":334,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"miscellaneous/variables.html":{}}}],["initializeupdategamemodalvar",{"_index":830,"title":{},"body":{"components/GameTabViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initmaindatatable",{"_index":767,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["injectable",{"_index":139,"title":{"injectables/GameService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":737,"title":{},"body":{"injectables/GameService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":958,"title":{},"body":{"components/IndexComponent.html":{}}}],["input",{"_index":281,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["inputgamedata",{"_index":759,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["inputidclicked",{"_index":760,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["inputnamegamedata",{"_index":761,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["inscorelist",{"_index":1098,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["instanceof",{"_index":1063,"title":{},"body":{"components/LoginComponent.html":{}}}],["interface",{"_index":128,"title":{"interfaces/Game.html":{},"interfaces/Score.html":{},"interfaces/User.html":{}},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":129,"title":{},"body":{"interfaces/Game.html":{},"interfaces/Score.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interval",{"_index":245,"title":{},"body":{"components/GameComponent.html":{}}}],["intervalom",{"_index":634,"title":{},"body":{"components/GameComponent.html":{}}}],["iscreatemodalactive",{"_index":762,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["isnumberoftriesequaltoten",{"_index":254,"title":{},"body":{"components/GameComponent.html":{}}}],["isnumberoftriesequaltoten():boolean",{"_index":555,"title":{},"body":{"components/GameComponent.html":{}}}],["ispise",{"_index":1077,"title":{},"body":{"components/LoginComponent.html":{}}}],["ispod",{"_index":613,"title":{},"body":{"components/GameComponent.html":{}}}],["issuccess",{"_index":529,"title":{},"body":{"components/GameComponent.html":{}}}],["issue",{"_index":168,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["istravanje",{"_index":412,"title":{},"body":{"components/GameComponent.html":{}}}],["itd",{"_index":189,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["item",{"_index":299,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["item.columnone",{"_index":655,"title":{},"body":{"components/GameComponent.html":{}}}],["item.id",{"_index":865,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["item.name",{"_index":881,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["item.score",{"_index":1145,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["item.username",{"_index":1144,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["item:hover{background",{"_index":699,"title":{},"body":{"components/GameComponent.html":{}}}],["items",{"_index":300,"title":{},"body":{"components/GameComponent.html":{}}}],["itemz.columntwo",{"_index":656,"title":{},"body":{"components/GameComponent.html":{}}}],["iz",{"_index":348,"title":{},"body":{"components/GameComponent.html":{}}}],["izabere",{"_index":508,"title":{},"body":{"components/GameComponent.html":{}}}],["izabrano",{"_index":521,"title":{},"body":{"components/GameComponent.html":{}}}],["izbriši",{"_index":896,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["izgled",{"_index":143,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["izmendju",{"_index":537,"title":{},"body":{"components/GameComponent.html":{}}}],["izmene",{"_index":840,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["izmeni",{"_index":895,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["izvri",{"_index":629,"title":{},"body":{"components/GameComponent.html":{}}}],["izvrsi",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["j",{"_index":455,"title":{},"body":{"components/GameComponent.html":{}}}],["javascript",{"_index":1065,"title":{},"body":{"components/LoginComponent.html":{}}}],["je",{"_index":209,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["jeste",{"_index":1066,"title":{},"body":{"components/LoginComponent.html":{}}}],["joj",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{}}}],["js",{"_index":210,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":135,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["json.parse(data.data",{"_index":598,"title":{},"body":{"components/GameComponent.html":{}}}],["json.parse(item.data",{"_index":880,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["json.stringify(this.inputgamedata",{"_index":860,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["kada",{"_index":416,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["kako",{"_index":588,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["kao",{"_index":214,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["karma",{"_index":1315,"title":{},"body":{"index.html":{}}}],["kazemo",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{}}}],["keeps",{"_index":1129,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["klik",{"_index":561,"title":{},"body":{"components/GameComponent.html":{}}}],["klikce",{"_index":549,"title":{},"body":{"components/GameComponent.html":{}}}],["klikne",{"_index":497,"title":{},"body":{"components/GameComponent.html":{}}}],["kliknite",{"_index":650,"title":{},"body":{"components/GameComponent.html":{}}}],["kliknut",{"_index":487,"title":{},"body":{"components/GameComponent.html":{}}}],["kod",{"_index":867,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["koj",{"_index":486,"title":{},"body":{"components/GameComponent.html":{}}}],["koja",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{}}}],["koje",{"_index":212,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["koji",{"_index":495,"title":{},"body":{"components/GameComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["koliko",{"_index":407,"title":{},"body":{"components/GameComponent.html":{}}}],["kolona",{"_index":349,"title":{},"body":{"components/GameComponent.html":{}}}],["kolone",{"_index":467,"title":{},"body":{"components/GameComponent.html":{}}}],["koloni",{"_index":541,"title":{},"body":{"components/GameComponent.html":{}}}],["komponente",{"_index":429,"title":{},"body":{"components/GameComponent.html":{}}}],["komponentu",{"_index":1074,"title":{},"body":{"components/LoginComponent.html":{}}}],["kontaktira",{"_index":431,"title":{},"body":{"components/GameComponent.html":{}}}],["kontaktiramo",{"_index":174,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["kontaktiranje",{"_index":425,"title":{},"body":{"components/GameComponent.html":{}}}],["korisnicko",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{}}}],["korisnik",{"_index":469,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["kroz",{"_index":532,"title":{},"body":{"components/GameComponent.html":{}}}],["lakse",{"_index":351,"title":{},"body":{"components/GameComponent.html":{}}}],["later",{"_index":1163,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["left",{"_index":383,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["left:5",{"_index":674,"title":{},"body":{"components/GameComponent.html":{}}}],["legend",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"overview.html":{}}}],["leve",{"_index":642,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["li",{"_index":500,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["link",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{}}}],["list",{"_index":179,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{}}}],["liste",{"_index":453,"title":{},"body":{"components/GameComponent.html":{}}}],["listi",{"_index":489,"title":{},"body":{"components/GameComponent.html":{}}}],["listu",{"_index":533,"title":{},"body":{"components/GameComponent.html":{}}}],["literal",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loads",{"_index":941,"title":{},"body":{"components/IndexComponent.html":{}}}],["local",{"_index":790,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["log",{"_index":1215,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["logged",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["loggedin",{"_index":264,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["loggedout",{"_index":1177,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["logic",{"_index":369,"title":{},"body":{"components/GameComponent.html":{}}}],["login",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["login.component.css",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbtn",{"_index":1081,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompclass",{"_index":1079,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":54,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginuser",{"_index":1234,"title":{},"body":{"injectables/UserService.html":{}}}],["loginuser(usr",{"_index":1239,"title":{},"body":{"injectables/UserService.html":{}}}],["loginuser(usr:string",{"_index":1182,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["logout",{"_index":441,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["logoutuser",{"_index":1196,"title":{},"body":{"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["logovan",{"_index":435,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["logovanog",{"_index":443,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["logujte",{"_index":949,"title":{},"body":{"components/IndexComponent.html":{}}}],["main",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["mainly",{"_index":1219,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["makes",{"_index":358,"title":{},"body":{"components/GameComponent.html":{}}}],["manipulate",{"_index":385,"title":{},"body":{"components/GameComponent.html":{}}}],["many",{"_index":367,"title":{},"body":{"components/GameComponent.html":{}}}],["margin",{"_index":658,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["mark",{"_index":146,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["marked",{"_index":307,"title":{},"body":{"components/GameComponent.html":{}}}],["markirano",{"_index":519,"title":{},"body":{"components/GameComponent.html":{}}}],["match",{"_index":309,"title":{},"body":{"components/GameComponent.html":{}}}],["matching",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":456,"title":{},"body":{"components/GameComponent.html":{}}}],["mathced",{"_index":375,"title":{},"body":{"components/GameComponent.html":{}}}],["mathing",{"_index":368,"title":{},"body":{"components/GameComponent.html":{}}}],["max",{"_index":371,"title":{},"body":{"components/GameComponent.html":{}}}],["means",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{}}}],["menjanja",{"_index":868,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["message",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{}}}],["mestu",{"_index":199,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["method",{"_index":202,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":251,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["metodama",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{}}}],["mi",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{}}}],["microservice",{"_index":159,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["microservise",{"_index":339,"title":{},"body":{"components/GameComponent.html":{}}}],["min",{"_index":666,"title":{},"body":{"components/GameComponent.html":{}}}],["miscellaneous",{"_index":1329,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":398,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["modala",{"_index":1078,"title":{},"body":{"components/LoginComponent.html":{}}}],["model",{"_index":131,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["module",{"_index":68,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":70,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mogla",{"_index":892,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["mogo",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{}}}],["mora",{"_index":507,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["moramo",{"_index":196,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["morate",{"_index":908,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["more",{"_index":1320,"title":{},"body":{"index.html":{}}}],["moze",{"_index":476,"title":{},"body":{"components/GameComponent.html":{}}}],["mozemo",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["much",{"_index":382,"title":{},"body":{"components/GameComponent.html":{}}}],["na",{"_index":198,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["nadjen/nema",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{}}}],["nadji",{"_index":513,"title":{},"body":{"components/GameComponent.html":{}}}],["nadju",{"_index":484,"title":{},"body":{"components/GameComponent.html":{}}}],["najbolji",{"_index":573,"title":{},"body":{"components/GameComponent.html":{}}}],["nalazu",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{}}}],["nalog",{"_index":954,"title":{},"body":{"components/IndexComponent.html":{}}}],["nam",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["napravi",{"_index":893,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["napravite",{"_index":952,"title":{},"body":{"components/IndexComponent.html":{}}}],["napravljena",{"_index":891,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["nas",{"_index":166,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["nasoj",{"_index":488,"title":{},"body":{"components/GameComponent.html":{}}}],["nav",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigate",{"_index":1295,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1220,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["naziv",{"_index":646,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["nazive",{"_index":947,"title":{},"body":{"components/IndexComponent.html":{}}}],["nazivima",{"_index":948,"title":{},"body":{"components/IndexComponent.html":{}}}],["ne",{"_index":505,"title":{},"body":{"components/GameComponent.html":{}}}],["necessary",{"_index":1162,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["need",{"_index":1175,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["neki",{"_index":501,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["nema",{"_index":442,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["netacno",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{}}}],["new",{"_index":204,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["nezelimo",{"_index":522,"title":{},"body":{"components/GameComponent.html":{}}}],["ng",{"_index":1292,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":600,"title":{},"body":{"components/GameComponent.html":{}}}],["ngmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":255,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["nije",{"_index":434,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["niko",{"_index":504,"title":{},"body":{"components/GameComponent.html":{}}}],["nista",{"_index":506,"title":{},"body":{"components/GameComponent.html":{}}}],["njenim",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{}}}],["noothing",{"_index":314,"title":{},"body":{"components/GameComponent.html":{}}}],["nothing",{"_index":796,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["nova",{"_index":652,"title":{},"body":{"components/GameComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["nove",{"_index":587,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["novi",{"_index":953,"title":{},"body":{"components/IndexComponent.html":{}}}],["novu",{"_index":898,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["npr",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{}}}],["number",{"_index":138,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["numoftries",{"_index":246,"title":{},"body":{"components/GameComponent.html":{}}}],["numoftriesdiv",{"_index":701,"title":{},"body":{"components/GameComponent.html":{}}}],["numstats",{"_index":710,"title":{},"body":{"components/GameComponent.html":{}}}],["o",{"_index":683,"title":{},"body":{"components/GameComponent.html":{}}}],["obaveštenje",{"_index":726,"title":{},"body":{"components/GameComponent.html":{}}}],["obe",{"_index":591,"title":{},"body":{"components/GameComponent.html":{}}}],["objecct",{"_index":799,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["object",{"_index":182,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.serverdata.dataone).foreach(key=>this.serverdata.datatwo[key]=this.serverdata.dataone[key",{"_index":610,"title":{},"body":{"components/GameComponent.html":{}}}],["objekat",{"_index":211,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["obrisana",{"_index":874,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["observable",{"_index":141,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["obtain",{"_index":177,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["obtained",{"_index":378,"title":{},"body":{"components/GameComponent.html":{}}}],["od",{"_index":422,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["odgovarajucim",{"_index":643,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["odgovor",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["odgovora",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{}}}],["omogucava",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["onaj",{"_index":485,"title":{},"body":{"components/GameComponent.html":{}}}],["onapiloginorregisteractionresult",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{}}}],["onapiloginorregisteractionresult(res",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{}}}],["onapiloginorregisteractionresult(res:any",{"_index":1061,"title":{},"body":{"components/LoginComponent.html":{}}}],["oncolumnoneclick",{"_index":256,"title":{},"body":{"components/GameComponent.html":{}}}],["oncolumnoneclick(item",{"_index":290,"title":{},"body":{"components/GameComponent.html":{}}}],["oncolumnoneclick(item:string",{"_index":460,"title":{},"body":{"components/GameComponent.html":{}}}],["oncolumntwoclick",{"_index":257,"title":{},"body":{"components/GameComponent.html":{}}}],["oncolumntwoclick(item",{"_index":310,"title":{},"body":{"components/GameComponent.html":{}}}],["oncolumntwoclick(item:string",{"_index":496,"title":{},"body":{"components/GameComponent.html":{}}}],["oncreatenewgame",{"_index":768,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["oncreatenewgamesubmit",{"_index":769,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ondelete",{"_index":770,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ondelete(id",{"_index":800,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ondelete(id:number):void",{"_index":871,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["one",{"_index":298,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["ongoing",{"_index":147,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["oninit",{"_index":240,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["onlogin",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{}}}],["onnewgame",{"_index":1207,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["onregister",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{}}}],["onscoresort",{"_index":1115,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["onupdategameformsubmit",{"_index":771,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdategameformsubmit():void",{"_index":855,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdateopendialog",{"_index":772,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdateopendialog(item",{"_index":809,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdateopendialog(item:game):void",{"_index":877,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdatgamemodalclose",{"_index":773,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdatgamemodalclose():void",{"_index":869,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onuserlogout",{"_index":1208,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["onuserlogout():void",{"_index":1221,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["opacity",{"_index":915,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["open",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{}}}],["opens",{"_index":792,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["operation",{"_index":828,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["option",{"_index":807,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["optional",{"_index":266,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["orange",{"_index":930,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["order",{"_index":787,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["ostalo",{"_index":409,"title":{},"body":{"components/GameComponent.html":{}}}],["osvojeni",{"_index":648,"title":{},"body":{"components/GameComponent.html":{}}}],["out",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"index.html":{},"overview.html":{}}}],["ovako",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{}}}],["overview",{"_index":1322,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":965,"title":{},"body":{"components/IndexComponent.html":{}}}],["pa",{"_index":195,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["package",{"_index":1271,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":711,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["page",{"_index":270,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"index.html":{}}}],["pairs",{"_index":360,"title":{},"body":{"components/GameComponent.html":{}}}],["par",{"_index":536,"title":{},"body":{"components/GameComponent.html":{}}}],["param",{"_index":167,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":265,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["parsefloat(a.score",{"_index":1139,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["parsefloat(b.score",{"_index":1140,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["password",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["password:pwd",{"_index":1186,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["pasword",{"_index":1054,"title":{},"body":{"components/LoginComponent.html":{}}}],["path",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["play",{"_index":403,"title":{},"body":{"components/GameComponent.html":{}}}],["playing",{"_index":1178,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["pocetna",{"_index":897,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["podaci",{"_index":420,"title":{},"body":{"components/GameComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["podataka",{"_index":144,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["podatke",{"_index":583,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["poeni",{"_index":649,"title":{},"body":{"components/GameComponent.html":{}}}],["pointer",{"_index":273,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{}}}],["pointerflag",{"_index":291,"title":{},"body":{"components/GameComponent.html":{}}}],["pointerflag:boolean",{"_index":461,"title":{},"body":{"components/GameComponent.html":{}}}],["pointsdiv",{"_index":713,"title":{},"body":{"components/GameComponent.html":{}}}],["pokusaja",{"_index":415,"title":{},"body":{"components/GameComponent.html":{}}}],["polja",{"_index":347,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["polje",{"_index":518,"title":{},"body":{"components/GameComponent.html":{}}}],["poljima",{"_index":644,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["popuniti",{"_index":909,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["position",{"_index":1154,"title":{},"body":{"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["post(`${this.apiurl}/game",{"_index":208,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["post(`${this.apiurl}/login",{"_index":1187,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["post(`${this.apiurl}/score",{"_index":1097,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["postavi",{"_index":552,"title":{},"body":{"components/GameComponent.html":{}}}],["postavlja",{"_index":601,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["postavljamo",{"_index":612,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["postoji",{"_index":535,"title":{},"body":{"components/GameComponent.html":{}}}],["potrebni",{"_index":1167,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["povecaj",{"_index":551,"title":{},"body":{"components/GameComponent.html":{}}}],["povecavamo",{"_index":523,"title":{},"body":{"components/GameComponent.html":{}}}],["pozivamo",{"_index":201,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{}}}],["prava",{"_index":470,"title":{},"body":{"components/GameComponent.html":{}}}],["pravi",{"_index":1174,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["prazne",{"_index":841,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["precent",{"_index":381,"title":{},"body":{"components/GameComponent.html":{}}}],["preko",{"_index":172,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["prestaje",{"_index":633,"title":{},"body":{"components/GameComponent.html":{}}}],["pri",{"_index":852,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["prikaz",{"_index":406,"title":{},"body":{"components/GameComponent.html":{}}}],["prikaza",{"_index":637,"title":{},"body":{"components/GameComponent.html":{}}}],["prikazuje",{"_index":622,"title":{},"body":{"components/GameComponent.html":{}}}],["prilikom",{"_index":875,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["pristupamo",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{}}}],["pristupio",{"_index":835,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["pristupiti",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["pristupom",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":149,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["procenat",{"_index":410,"title":{},"body":{"components/GameComponent.html":{}}}],["prod",{"_index":1308,"title":{},"body":{"index.html":{}}}],["prodji",{"_index":531,"title":{},"body":{"components/GameComponent.html":{}}}],["production",{"_index":1309,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":662,"title":{},"body":{"components/GameComponent.html":{}}}],["project",{"_index":1286,"title":{},"body":{"index.html":{}}}],["promenjena",{"_index":864,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["promenu",{"_index":428,"title":{},"body":{"components/GameComponent.html":{}}}],["promise",{"_index":188,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["pronadjen",{"_index":546,"title":{},"body":{"components/GameComponent.html":{}}}],["properly",{"_index":405,"title":{},"body":{"components/GameComponent.html":{}}}],["properties",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":1317,"title":{},"body":{"index.html":{}}}],["proveravamo",{"_index":1064,"title":{},"body":{"components/LoginComponent.html":{}}}],["provere",{"_index":352,"title":{},"body":{"components/GameComponent.html":{}}}],["proveri",{"_index":499,"title":{},"body":{"components/GameComponent.html":{}}}],["proveru",{"_index":571,"title":{},"body":{"components/GameComponent.html":{}}}],["providers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["prve",{"_index":466,"title":{},"body":{"components/GameComponent.html":{}}}],["prvoj",{"_index":539,"title":{},"body":{"components/GameComponent.html":{}}}],["public",{"_index":155,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["purple",{"_index":696,"title":{},"body":{"components/GameComponent.html":{}}}],["pushgame",{"_index":738,"title":{},"body":{"injectables/GameService.html":{},"components/GameTabViewComponent.html":{}}}],["pushgame(gameobj",{"_index":207,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["pushscore",{"_index":1102,"title":{},"body":{"injectables/ScoreService.html":{}}}],["pushscore(score",{"_index":1094,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["pwd",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["pwd:string",{"_index":1183,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["radi",{"_index":350,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["radimo",{"_index":585,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["random",{"_index":178,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{}}}],["rasporedi",{"_index":451,"title":{},"body":{"components/GameComponent.html":{}}}],["reached",{"_index":372,"title":{},"body":{"components/GameComponent.html":{}}}],["real",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["receive",{"_index":268,"title":{},"body":{"components/GameComponent.html":{}}}],["red",{"_index":678,"title":{},"body":{"components/GameComponent.html":{}}}],["reddirect",{"_index":436,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["reddirected",{"_index":776,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["reddirects",{"_index":263,"title":{},"body":{"components/GameComponent.html":{}}}],["redirected",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{}}}],["redosled",{"_index":590,"title":{},"body":{"components/GameComponent.html":{}}}],["reference",{"_index":829,"title":{},"body":{"components/GameTabViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{}}}],["registerbtn",{"_index":1080,"title":{},"body":{"components/LoginComponent.html":{}}}],["related",{"_index":786,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["reload",{"_index":1298,"title":{},"body":{"index.html":{}}}],["removegame",{"_index":739,"title":{},"body":{"injectables/GameService.html":{}}}],["removegame(id",{"_index":232,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["removes",{"_index":229,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["representing",{"_index":1087,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["represents",{"_index":134,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["requests",{"_index":169,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["require",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.email",{"_index":1071,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.id",{"_index":1069,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.role",{"_index":1073,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.username",{"_index":1070,"title":{},"body":{"components/LoginComponent.html":{}}}],["reset",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"overview.html":{}}}],["result",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resurs",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{}}}],["return",{"_index":191,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["returnbool",{"_index":883,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["returns",{"_index":181,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["rgba(0",{"_index":735,"title":{},"body":{"components/GameComponent.html":{}}}],["right",{"_index":672,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["right:10px",{"_index":925,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["right:20px",{"_index":961,"title":{},"body":{"components/IndexComponent.html":{}}}],["right:5px",{"_index":928,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["role",{"_index":1072,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/IndexComponent.html":{}}}],["root'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["route",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{}}}],["router",{"_index":261,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["router:router",{"_index":427,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["routermodule",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":117,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":657,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["run",{"_index":341,"title":{},"body":{"components/GameComponent.html":{},"index.html":{}}}],["running",{"_index":1310,"title":{},"body":{"index.html":{}}}],["ruteru",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["rxjs",{"_index":142,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["sa",{"_index":584,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["salje",{"_index":213,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["salji",{"_index":1076,"title":{},"body":{"components/LoginComponent.html":{}}}],["samo",{"_index":475,"title":{},"body":{"components/GameComponent.html":{}}}],["sans",{"_index":1152,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["save",{"_index":305,"title":{},"body":{"components/GameComponent.html":{}}}],["scaffolding",{"_index":1300,"title":{},"body":{"index.html":{}}}],["scora",{"_index":1171,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["score",{"_index":57,"title":{"interfaces/Score.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{}}}],["scorelist",{"_index":1088,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{}}}],["scorenum",{"_index":247,"title":{},"body":{"components/GameComponent.html":{}}}],["scorenumdiv",{"_index":714,"title":{},"body":{"components/GameComponent.html":{}}}],["scoreobj",{"_index":1096,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["scores",{"_index":1090,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{}}}],["scoreservice",{"_index":83,"title":{"injectables/ScoreService.html":{}},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scoresortorder",{"_index":1114,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["scoretabcomponent",{"_index":56,"title":{"components/ScoreTabComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["script",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["se",{"_index":473,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["second",{"_index":318,"title":{},"body":{"components/GameComponent.html":{}}}],["secondary",{"_index":697,"title":{},"body":{"components/GameComponent.html":{}}}],["seconds",{"_index":389,"title":{},"body":{"components/GameComponent.html":{}}}],["sekunde",{"_index":387,"title":{},"body":{"components/GameComponent.html":{}}}],["sekundi",{"_index":408,"title":{},"body":{"components/GameComponent.html":{}}}],["select",{"_index":297,"title":{},"body":{"components/GameComponent.html":{}}}],["selected",{"_index":301,"title":{},"body":{"components/GameComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["selectovanih",{"_index":346,"title":{},"body":{"components/GameComponent.html":{}}}],["selektovan",{"_index":478,"title":{},"body":{"components/GameComponent.html":{}}}],["selektovanih",{"_index":538,"title":{},"body":{"components/GameComponent.html":{}}}],["selektuj",{"_index":514,"title":{},"body":{"components/GameComponent.html":{}}}],["selektuje",{"_index":474,"title":{},"body":{"components/GameComponent.html":{}}}],["semi",{"_index":1150,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["send",{"_index":206,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{}}}],["sendmessageusermodal",{"_index":401,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sendmessageusermodal(\"doslo",{"_index":850,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["sendmessageusermodal(\"igra",{"_index":567,"title":{},"body":{"components/GameComponent.html":{}}}],["sendmessageusermodal(\"nova",{"_index":889,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["sendmessageusermodal(`doslo",{"_index":866,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["sendmessageusermodal(`igra",{"_index":863,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["sendmessageusermodal(res",{"_index":1075,"title":{},"body":{"components/LoginComponent.html":{}}}],["sends",{"_index":283,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["serif",{"_index":1153,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["serve",{"_index":1293,"title":{},"body":{"index.html":{}}}],["server",{"_index":175,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["servera",{"_index":423,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["serverdata",{"_index":248,"title":{},"body":{"components/GameComponent.html":{}}}],["service",{"_index":1195,"title":{},"body":{"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["services/game.service",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["services/score.service",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["services/user.service",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":302,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["setactiveuser",{"_index":1235,"title":{},"body":{"injectables/UserService.html":{}}}],["setactiveuser(datauser",{"_index":1202,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["setgameendedflag",{"_index":740,"title":{},"body":{"injectables/GameService.html":{}}}],["setgameendedflag(flag",{"_index":218,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["setinterval",{"_index":624,"title":{},"body":{"components/GameComponent.html":{}}}],["sets",{"_index":215,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["setscorelist",{"_index":1099,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["setscorelist(inscorelist",{"_index":1107,"title":{},"body":{"injectables/ScoreService.html":{}}}],["show",{"_index":397,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"miscellaneous/variables.html":{}}}],["shown",{"_index":390,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["showuserloginform",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["shuffle",{"_index":327,"title":{},"body":{"components/GameComponent.html":{}}}],["shufflearray",{"_index":258,"title":{},"body":{"components/GameComponent.html":{}}}],["shufflearray(array",{"_index":324,"title":{},"body":{"components/GameComponent.html":{}}}],["shufflearray(array:array",{"_index":449,"title":{},"body":{"components/GameComponent.html":{}}}],["size",{"_index":704,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["skiplocationchange",{"_index":445,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["slanje",{"_index":1170,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["sluzi",{"_index":344,"title":{},"body":{"components/GameComponent.html":{}}}],["smanji",{"_index":636,"title":{},"body":{"components/GameComponent.html":{}}}],["smo",{"_index":438,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["solid",{"_index":692,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["sort",{"_index":1121,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["sort((a:any",{"_index":1137,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spec\\.ts",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spoite",{"_index":641,"title":{},"body":{"components/GameComponent.html":{}}}],["spojiti",{"_index":946,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game.component.ts",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.ts",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/game",{"_index":753,"title":{},"body":{"components/GameTabViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/game/game.component.ts",{"_index":238,"title":{},"body":{"components/GameComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/game/game.component.ts:115",{"_index":311,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:154",{"_index":285,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:161",{"_index":271,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:170",{"_index":279,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:193",{"_index":333,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:22",{"_index":388,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:24",{"_index":380,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:26",{"_index":366,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:28",{"_index":373,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:30",{"_index":377,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:32",{"_index":342,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:34",{"_index":354,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:39",{"_index":262,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:49",{"_index":392,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:50",{"_index":361,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:63",{"_index":289,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:71",{"_index":326,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:89",{"_index":292,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/score",{"_index":1110,"title":{},"body":{"components/ScoreTabComponent.html":{},"coverage.html":{}}}],["src/app/components/game/user",{"_index":1203,"title":{},"body":{"components/UserActionsBtnsComponent.html":{},"coverage.html":{}}}],["src/app/components/index/index.component.ts",{"_index":935,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["src/app/components/index/index.component.ts:10",{"_index":939,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:20",{"_index":940,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:22",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:24",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:47",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:52",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:67",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:92",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/services/game.service",{"_index":393,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["src/app/services/game.service.ts",{"_index":130,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["src/app/services/game.service.ts:20",{"_index":752,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:22",{"_index":751,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:24",{"_index":743,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:35",{"_index":745,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:45",{"_index":747,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:53",{"_index":749,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:60",{"_index":746,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:69",{"_index":750,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:77",{"_index":748,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:84",{"_index":744,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/score.service",{"_index":394,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["src/app/services/score.service.ts",{"_index":1086,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["src/app/services/score.service.ts:18",{"_index":1109,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:20",{"_index":1103,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:31",{"_index":1104,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:41",{"_index":1106,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:54",{"_index":1108,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:61",{"_index":1105,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/user.service",{"_index":395,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":1159,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:102",{"_index":1242,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:23",{"_index":1244,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:28",{"_index":1243,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:37",{"_index":1236,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:51",{"_index":1240,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:68",{"_index":1237,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:81",{"_index":1241,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:94",{"_index":1238,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sta",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{}}}],["started",{"_index":1212,"title":{"index.html":{}},"body":{"components/UserActionsBtnsComponent.html":{}}}],["starts",{"_index":335,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["startthegame",{"_index":259,"title":{},"body":{"components/GameComponent.html":{}}}],["statements",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["stavi",{"_index":479,"title":{},"body":{"components/GameComponent.html":{}}}],["stavili",{"_index":439,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["stavljamo",{"_index":625,"title":{},"body":{"components/GameComponent.html":{}}}],["sto",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["stops",{"_index":797,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["stored",{"_index":1305,"title":{},"body":{"index.html":{}}}],["strana",{"_index":945,"title":{},"body":{"components/IndexComponent.html":{}}}],["strane",{"_index":430,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["strani",{"_index":836,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["stranu",{"_index":437,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["string",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["stringove",{"_index":842,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["structure",{"_index":183,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["su",{"_index":1168,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["submit",{"_index":795,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["subscribe",{"_index":197,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{}}}],["subscribe((data:any",{"_index":576,"title":{},"body":{"components/GameComponent.html":{}}}],["success",{"_index":180,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["successful",{"_index":230,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["support",{"_index":1324,"title":{},"body":{"modules.html":{}}}],["sva",{"_index":839,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["svaki",{"_index":480,"title":{},"body":{"components/GameComponent.html":{}}}],["svakih",{"_index":627,"title":{},"body":{"components/GameComponent.html":{}}}],["sve",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["svg",{"_index":1325,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tab'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["tab.component",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{}}}],["tab.component.css",{"_index":1112,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.html",{"_index":1113,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts",{"_index":1111,"title":{},"body":{"components/ScoreTabComponent.html":{},"coverage.html":{}}}],["tab.component.ts:13",{"_index":1126,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts:15",{"_index":1118,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts:20",{"_index":1127,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts:22",{"_index":1119,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts:27",{"_index":1125,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts:34",{"_index":1120,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab/score",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{},"components/ScoreTabComponent.html":{},"coverage.html":{}}}],["table",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["tacan",{"_index":543,"title":{},"body":{"components/GameComponent.html":{}}}],["tacnih",{"_index":419,"title":{},"body":{"components/GameComponent.html":{}}}],["tacno",{"_index":520,"title":{},"body":{"components/GameComponent.html":{}}}],["tagu",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{}}}],["td",{"_index":927,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["tekstualnim",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["temp",{"_index":457,"title":{},"body":{"components/GameComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["ten",{"_index":288,"title":{},"body":{"components/GameComponent.html":{}}}],["test",{"_index":1313,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1312,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":399,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["th",{"_index":919,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["this.activeuser",{"_index":1197,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.currentactivegamename",{"_index":595,"title":{},"body":{"components/GameComponent.html":{}}}],["this.disableclickonitems",{"_index":568,"title":{},"body":{"components/GameComponent.html":{}}}],["this.eml",{"_index":1055,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.flagselecteditems.one",{"_index":493,"title":{},"body":{"components/GameComponent.html":{}}}],["this.flagselecteditems.two",{"_index":527,"title":{},"body":{"components/GameComponent.html":{}}}],["this.forminputinvalid",{"_index":857,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.gamecomponent.startthegame",{"_index":1223,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["this.gameendedflag",{"_index":219,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["this.gameendedsendscoreresult",{"_index":554,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gameservice.gameactive",{"_index":565,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["this.gameservice.getgame().subscribe((data",{"_index":594,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gameservice.pushgame(item).subscribe((data",{"_index":888,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.gameservice.removegame(id).subscribe",{"_index":873,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.gameservice.setgameendedflag(false",{"_index":579,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gameservice.setgameendedflag(true",{"_index":566,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["this.gameservice.updategame(item).subscribe((e",{"_index":861,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.gametablelist",{"_index":845,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.httpclient",{"_index":192,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.httpclient.delete(`${this.apiurl}/game/${id",{"_index":233,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["this.httpclient.post(`${this.apiurl}/create",{"_index":1193,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.httpclient.put(`${this.apiurl}/game",{"_index":228,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["this.initemptyinputupdateform",{"_index":838,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.initmaindatatable",{"_index":854,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.inputgamedata",{"_index":843,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.inputgamedata.foreach((e",{"_index":885,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.inputidclicked",{"_index":858,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.inputnamegamedata",{"_index":859,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.interval",{"_index":623,"title":{},"body":{"components/GameComponent.html":{}}}],["this.iscreatemodalactive",{"_index":878,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.numoftries",{"_index":526,"title":{},"body":{"components/GameComponent.html":{}}}],["this.onapiloginorregisteractionresult(\"korisnicko",{"_index":1059,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onapiloginorregisteractionresult(\"lozinka",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onapiloginorregisteractionresult(\"unesite",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onapiloginorregisteractionresult(data",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onupdatgamemodalclose",{"_index":862,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.pwd",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.pwd).subscribe((data",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([\"/game",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([\"/login",{"_index":447,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["this.router.navigatebyurl",{"_index":444,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["this.scorelist",{"_index":1100,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{}}}],["this.scorenum",{"_index":550,"title":{},"body":{"components/GameComponent.html":{}}}],["this.scoreservice.getscore().subscribe((data",{"_index":1132,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.scoreservice.getscorelist",{"_index":1136,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.scoreservice.pushscore",{"_index":569,"title":{},"body":{"components/GameComponent.html":{}}}],["this.scoreservice.setscorelist(data",{"_index":1133,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.scoreservice.setscorelist(this.scorelist",{"_index":1143,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.scoresortorder",{"_index":1141,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.scoretabcomponent.updatescoretableview",{"_index":578,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata",{"_index":448,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.data",{"_index":597,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.data.find((elem:any",{"_index":530,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.data.foreach((e",{"_index":599,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.data.foreach((e:any",{"_index":563,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.dataone",{"_index":607,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.dataone.find((elem:any",{"_index":483,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.dataone.foreach((e:any",{"_index":472,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.datatwo",{"_index":609,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.datatwo.find((elem:any",{"_index":512,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.datatwo.foreach((e:any",{"_index":510,"title":{},"body":{"components/GameComponent.html":{}}}],["this.shufflearray(this.serverdata.data",{"_index":608,"title":{},"body":{"components/GameComponent.html":{}}}],["this.shufflearray(this.serverdata.datatwo",{"_index":611,"title":{},"body":{"components/GameComponent.html":{}}}],["this.timerheight",{"_index":580,"title":{},"body":{"components/GameComponent.html":{}}}],["this.timertxt",{"_index":621,"title":{},"body":{"components/GameComponent.html":{}}}],["this.updatescoretableview",{"_index":1131,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.userservice.createnewuser(this.usr",{"_index":1057,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getloggedinuser().username",{"_index":575,"title":{},"body":{"components/GameComponent.html":{}}}],["this.userservice.loginuser(this.usr",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.logoutuser",{"_index":1222,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["this.userservice.setactiveuser",{"_index":1068,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usr",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{}}}],["thscore",{"_index":926,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["ti",{"_index":357,"title":{},"body":{"components/GameComponent.html":{}}}],["time",{"_index":363,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["timer",{"_index":340,"title":{},"body":{"components/GameComponent.html":{}}}],["timera",{"_index":638,"title":{},"body":{"components/GameComponent.html":{}}}],["timerheight",{"_index":249,"title":{},"body":{"components/GameComponent.html":{}}}],["timerinminutes",{"_index":614,"title":{},"body":{"components/GameComponent.html":{}}}],["timerinseconds",{"_index":615,"title":{},"body":{"components/GameComponent.html":{}}}],["timerinseconds/1000",{"_index":618,"title":{},"body":{"components/GameComponent.html":{}}}],["timersecondsleft",{"_index":727,"title":{},"body":{"components/GameComponent.html":{}}}],["timertxt",{"_index":250,"title":{},"body":{"components/GameComponent.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":708,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["top:10px",{"_index":1230,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["top:1px",{"_index":929,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["top:2px",{"_index":688,"title":{},"body":{"components/GameComponent.html":{}}}],["top:5px",{"_index":732,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["top:8px",{"_index":933,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["tr",{"_index":917,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["transition",{"_index":680,"title":{},"body":{"components/GameComponent.html":{}}}],["treba",{"_index":557,"title":{},"body":{"components/GameComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["tries",{"_index":322,"title":{},"body":{"components/GameComponent.html":{}}}],["trigger",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":157,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":605,"title":{},"body":{"components/GameComponent.html":{}}}],["true}).then",{"_index":446,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["truue",{"_index":789,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["try{clearinterval(this.interval);}catch",{"_index":581,"title":{},"body":{"components/GameComponent.html":{}}}],["tslib",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":353,"title":{},"body":{"components/GameComponent.html":{}}}],["type",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["u",{"_index":464,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["ucitavanju",{"_index":853,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ukloni",{"_index":900,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ulogovanog",{"_index":1199,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["umanji",{"_index":635,"title":{},"body":{"components/GameComponent.html":{}}}],["undefined",{"_index":362,"title":{},"body":{"components/GameComponent.html":{}}}],["unit",{"_index":1311,"title":{},"body":{"index.html":{}}}],["unselected",{"_index":303,"title":{},"body":{"components/GameComponent.html":{}}}],["unutar",{"_index":631,"title":{},"body":{"components/GameComponent.html":{}}}],["upamti",{"_index":494,"title":{},"body":{"components/GameComponent.html":{}}}],["update",{"_index":226,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{}}}],["updategame",{"_index":741,"title":{},"body":{"injectables/GameService.html":{}}}],["updategame(gameobj",{"_index":227,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["updategamemodalshow",{"_index":831,"title":{},"body":{"components/GameTabViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updategamemodalshow(false",{"_index":870,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["updategamemodalshow(true",{"_index":879,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["updates",{"_index":222,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["updatescoretableview",{"_index":1116,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["updating",{"_index":818,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["upredi",{"_index":534,"title":{},"body":{"components/GameComponent.html":{}}}],["uri",{"_index":942,"title":{},"body":{"components/IndexComponent.html":{}}}],["url",{"_index":158,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/IndexComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["use",{"_index":267,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{},"index.html":{}}}],["used",{"_index":145,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["user",{"_index":60,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user\").subscribe",{"_index":1058,"title":{},"body":{"components/LoginComponent.html":{}}}],["usera",{"_index":1067,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["useractionsbtnscomponent",{"_index":59,"title":{"components/UserActionsBtnsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["username:string",{"_index":1095,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["username:usr",{"_index":1185,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userobj",{"_index":1184,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["users",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{}}}],["userservice",{"_index":84,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":404,"title":{},"body":{"components/GameComponent.html":{}}}],["uspesno",{"_index":890,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["usr",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ut",{"_index":356,"title":{},"body":{"components/GameComponent.html":{}}}],["vales",{"_index":223,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["valid",{"_index":816,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["value",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":225,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["var",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["variable",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1330,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varijabli",{"_index":606,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["varijablu",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["version",{"_index":1290,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":664,"title":{},"body":{"components/GameComponent.html":{}}}],["via",{"_index":284,"title":{},"body":{"components/GameComponent.html":{},"components/UserActionsBtnsComponent.html":{},"index.html":{}}}],["view",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameTabViewComponent.html":{}}}],["view'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["view.component",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["view.component.css",{"_index":755,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.html",{"_index":756,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts",{"_index":754,"title":{},"body":{"components/GameTabViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["view.component.ts:117",{"_index":813,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:128",{"_index":801,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:140",{"_index":810,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:151",{"_index":780,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:158",{"_index":777,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:174",{"_index":791,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:186",{"_index":793,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:210",{"_index":781,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:24",{"_index":819,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:26",{"_index":822,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:28",{"_index":827,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:30",{"_index":815,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:32",{"_index":824,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:34",{"_index":774,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:57",{"_index":782,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:66",{"_index":785,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:80",{"_index":788,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:90",{"_index":805,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view/game",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameTabViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vizualnog",{"_index":413,"title":{},"body":{"components/GameComponent.html":{}}}],["void",{"_index":278,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["vraca",{"_index":194,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["vrati",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["vremena",{"_index":411,"title":{},"body":{"components/GameComponent.html":{}}}],["vucemo",{"_index":582,"title":{},"body":{"components/GameComponent.html":{}}}],["want",{"_index":812,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["webkit",{"_index":679,"title":{},"body":{"components/GameComponent.html":{}}}],["website",{"_index":943,"title":{},"body":{"components/IndexComponent.html":{}}}],["weight",{"_index":728,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["welcome",{"_index":944,"title":{},"body":{"components/IndexComponent.html":{}}}],["well",{"_index":820,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["white",{"_index":695,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["white{color:white",{"_index":721,"title":{},"body":{"components/GameComponent.html":{}}}],["width",{"_index":660,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["width:15",{"_index":1146,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["width:20",{"_index":1083,"title":{},"body":{"components/LoginComponent.html":{}}}],["width:50",{"_index":913,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["widthdiv",{"_index":718,"title":{},"body":{"components/GameComponent.html":{}}}],["within",{"_index":1189,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["yse",{"_index":355,"title":{},"body":{"components/GameComponent.html":{}}}],["za",{"_index":165,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["zadatog",{"_index":574,"title":{},"body":{"components/GameComponent.html":{}}}],["zapamti",{"_index":528,"title":{},"body":{"components/GameComponent.html":{}}}],["zapoceli",{"_index":653,"title":{},"body":{"components/GameComponent.html":{}}}],["zatim",{"_index":509,"title":{},"body":{"components/GameComponent.html":{}}}],["zato",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["zaustavi",{"_index":548,"title":{},"body":{"components/GameComponent.html":{}}}],["zauzeto",{"_index":1060,"title":{},"body":{"components/LoginComponent.html":{}}}],["zavisnosti",{"_index":604,"title":{},"body":{"components/GameComponent.html":{}}}],["zavrsena",{"_index":418,"title":{},"body":{"components/GameComponent.html":{}}}],["zdravo",{"_index":640,"title":{},"body":{"components/GameComponent.html":{}}}],["zero",{"_index":337,"title":{},"body":{"components/GameComponent.html":{}}}],["znaci",{"_index":556,"title":{},"body":{"components/GameComponent.html":{}}}],["znali",{"_index":1169,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["zone.js",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            empty constructor \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'game-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                        title of our application \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * Component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n/** main component of our app. It is empty */\nexport class AppComponent {\n  /** title of our application */\n  title = 'game-app';\n\n  /** empty constructor */\n  constructor() {\n   }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nGameTabViewComponent\n\nGameTabViewComponent\n\nAppModule -->\n\nGameTabViewComponent->AppModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nAppModule -->\n\nIndexComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nScoreTabComponent\n\nScoreTabComponent\n\nAppModule -->\n\nScoreTabComponent->AppModule\n\n\n\n\n\nUserActionsBtnsComponent\n\nUserActionsBtnsComponent\n\nAppModule -->\n\nUserActionsBtnsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGameService\n\nGameService\n\nAppModule -->\n\nGameService->AppModule\n\n\n\n\n\nScoreService\n\nScoreService\n\nAppModule -->\n\nScoreService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GameComponent\n                        \n                        \n                            GameTabViewComponent\n                        \n                        \n                            IndexComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ScoreTabComponent\n                        \n                        \n                            UserActionsBtnsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                        \n                            ScoreService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { GameComponent } from './components/game/game.component';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from './services/user.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ScoreService } from './services/score.service';\nimport { GameService } from './services/game.service';\nimport { ScoreTabComponent } from './components/game/score-tab/score-tab.component';\nimport { UserActionsBtnsComponent } from './components/game/user-actions-btns/user-actions-btns.component';\nimport { GameTabViewComponent } from './components/game-tab-view/game-tab-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IndexComponent,\n    LoginComponent,\n    GameComponent,\n    ScoreTabComponent,\n    UserActionsBtnsComponent,\n    GameTabViewComponent\n  ],\n  imports: [\n    HttpClientModule, \n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [UserService, ScoreService, GameService, ScoreTabComponent, GameComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GameTabViewComponent } from './components/game-tab-view/game-tab-view.component';\nimport { GameComponent } from './components/game/game.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n  {path : '', component: IndexComponent ,pathMatch: 'full' },\n  {path : 'login', component: LoginComponent},\n  {path : 'game', component: GameComponent},\n  {path : 'game-table-view', component: GameTabViewComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/game.service.ts\n        \n\n            \n                Description\n            \n            \n                game interface model \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Game data represents game data in the JSON format in our Game table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Game id represents game id in our Game table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Game name represents game name in our Game table in the database \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\n\n/** game interface model */\nexport interface Game { // izgled Game podataka\n    /** Game id represents game id in our Game table in the database */\n    id  : number,\n    /** Game name represents game name in our Game table in the database */\n    name: string,\n    /** Game data represents game data in the JSON format in our Game table in the database */\n    data: string,\n  }\n/**\n * Injectable GameService\n */\n@Injectable()\nexport class GameService {\n    /** Used to mark the game as ongoing or ended. */\n    private gameEndedFlag : boolean = false;\n    /** Used to mark if the game is currently active */\n    public gameActive :boolean = true;\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5301/api\"; // glavna URL adresa za nas API\n    /**\n     * constructor\n     * @param httpClient {HttpClient} Used to issue requests to our api calls.\n     */\n    constructor(private httpClient: HttpClient) {} // preko httpclijenta kontaktiramo server\n\n    /**\n     * Used to contact microservice API and obtain the random list on success.\n     * @returns Observable - random game object from the database, structure defiend in our Game interface\n     */\n    public getGame() : Observable   { \n        // observable - za asinhrone funkcije Promise itd\n        //https://angular.io/guide/observables\n        return this.httpClient\n                .get(`${this.apiURL}/game`); // vraca promise pa moramo subscribe na mestu gde pozivamo funkcije\n    }\n    /**\n     * This method is used to create new Game in the server database\n     * @param gameObj Object to send to the microservice\n     */\n    public pushGame(gameObj: any) : Observable   {\n        return this.httpClient\n        .post(`${this.apiURL}/game`, gameObj) // gameObj je JS objekat koje salje kao JSON\n    }\n    /** \n     * Sets the game ended flag\n     * @param flag {boolean} used as the new value for our gameEndedFlag attribute\n     */\n    public setGameEndedFlag(flag: boolean){\n        this.gameEndedFlag = flag;\n    }\n    /**\n     * Getter\n     * @returns Currently active gameEndedFlag\n     */\n    public getGameEndedFlag(){\n        return this.gameEndedFlag;\n    }\n\n    /** \n     * Updates the game with new vales\n     * @param gameObj {Game} contains the new Game Object values to update \n     * @returns Observable\n     */\n    public updateGame(gameObj: Game): Observable {\n        return this.httpClient.put(`${this.apiURL}/game`, gameObj);\n    }\n    /** \n     * Removes the game on successful microservice api call.\n     * @param id {number}\n     * @returns Observable\n     */\n    public removeGame(id: number): Observable {\n        return this.httpClient.delete(`${this.apiURL}/game/${id}`);\n    }\n    /**\n     * Used to contact microservice API and obtain the games list on success.\n     * @returns Observable - List of all games that can be found in our microservice database.\n     */\n    public getAllGames(): Observable {\n        return this.httpClient\n                .get(`${this.apiURL}/game/all`);\n    }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponent.html":{"url":"components/GameComponent.html","title":"component - GameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game/game.component.ts\n\n\n    \n        Description\n    \n    \n        Component - GameComponent \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game\n            \n\n            \n                styleUrls\n                ./game.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentActiveGameName\n                            \n                            \n                                flagSelectedItems\n                            \n                            \n                                    Public\n                                gameService\n                            \n                            \n                                interval\n                            \n                            \n                                numOfTries\n                            \n                            \n                                scoreNum\n                            \n                            \n                                serverData\n                            \n                            \n                                timerHeight\n                            \n                            \n                                timerTxt\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableClickOnItems\n                            \n                            \n                                gameEndedSendScoreResult\n                            \n                            \n                                isNumberOfTriesEqualToTen\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onColumnOneClick\n                            \n                            \n                                onColumnTwoClick\n                            \n                            \n                                shuffleArray\n                            \n                            \n                                startTheGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, gameService: GameService, router: Router, scoreService: ScoreService, scoreTabComponent: ScoreTabComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game/game.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor - reddirects user to the /login if user is not loggedin to our app.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to use the loggedin user data\n\n                                                        \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to send and receive data from our microservice API\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to change component page\n\n                                                        \n                                                \n                                                \n                                                        scoreService\n                                                  \n                                                        \n                                                                        ScoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to send and receive data from our microservice API\n\n                                                        \n                                                \n                                                \n                                                        scoreTabComponent\n                                                  \n                                                        \n                                                                        ScoreTabComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disableClickOnItems\n                        \n                        \n                    \n                \n            \n            \n                \ndisableClickOnItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:161\n                \n            \n\n\n            \n                \n                    Disasble pointer cursor - cursor change to pointer on hover on all column elements \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            gameEndedSendScoreResult\n                        \n                        \n                    \n                \n            \n            \n                \ngameEndedSendScoreResult()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:170\n                \n            \n\n\n            \n                \n                    When game has ended. Collects the input from the game abd sends the data to our microservice API via gameService.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNumberOfTriesEqualToTen\n                        \n                        \n                    \n                \n            \n            \n                \nisNumberOfTriesEqualToTen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:154\n                \n            \n\n\n            \n                \n                    Checks if numOfTries attribute is equal to ten.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:63\n                \n            \n\n\n            \n                \n                    Empty ngOnInit \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onColumnOneClick\n                        \n                        \n                    \n                \n            \n            \n                \nonColumnOneClick(item: string, pointerFlag: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:89\n                \n            \n\n\n            \n                \n                    Checks if game has ended, if it did end disable the click event.\nWhen we select one item from the column other items that were selected are set as unselected.\nSet clicked element as selected.\nSave that it is selected in our flagSelectedItems attribute.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Column Game data Item\n\n                                    \n                                \n                                \n                                    pointerFlag\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        if flag is true this column answer has not been marked as a correct match answer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onColumnTwoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonColumnTwoClick(item: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:115\n                \n            \n\n\n            \n                \n                    Check if element from the first column is selected. iF not return noothing which will exist the execution of this method.\nSet selected element as clicked.\nDo numOfTries + 1.\nIf elements from first and second column match add one to scoreNum attribute.\nSet both fields as not selected.\nCheck if number of tries is equal to 10, if it is end the game.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Column Game data Item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffleArray\n                        \n                        \n                    \n                \n            \n            \n                \nshuffleArray(array: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:71\n                \n            \n\n\n            \n                \n                    Used to shuffle the array by random chance.\nWe use this function to shuffle the both columns array that us being displayed to the end user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startTheGame\n                        \n                        \n                    \n                \n            \n            \n                \nstartTheGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:193\n                \n            \n\n\n            \n                \n                    Method that will initialize all the parameters when new game starts.\nIt is going to reset numOfTries and scoreNum to zero.\nSet game as active.\nGrab new random game data from our microservise API via GameService.\nShuffle array for both columns.\nSet the new timer to run.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentActiveGameName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:32\n                            \n                        \n\n                \n                    \n                        Contains the currect active game name. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagSelectedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { // sluzi za cuvanje selectovanih polja iz kolona radi lakse provere\n    one: \"\",\n    two: \"\"\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:34\n                            \n                        \n\n                \n                    \n                        We yse ut ti set the selected fields from both columns, makes it easier to check the matching pairs. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gameService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GameService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:50\n                            \n                        \n\n                \n                    \n                        to send and receive data from our microservice API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:39\n                            \n                        \n\n                \n                    \n                        Time interval that will run for our timer, undefined at the beginning \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numOfTries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:26\n                            \n                        \n\n                \n                    \n                        Number of how many tries has user used while mathing the game pairs. Logic is built in for the 10 tries to be max, when number 10 is reached the game will end. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreNum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:28\n                            \n                        \n\n                \n                    \n                        Number of correctly mathced game pairs. Number of correct answers by the user. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:30\n                            \n                        \n\n                \n                    \n                        List that will contains the game data obtained from the server. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:24\n                            \n                        \n\n                \n                    \n                        Represents the precent of how much time has left on the timer. We use it to draw and manipulate with the timer animation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Sekunde...\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:22\n                            \n                        \n\n                \n                    \n                        Represents the number of seconds that is shown above our timer while the game is active. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:49\n                            \n                        \n\n                \n                    \n                        to use the loggedin user data\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GameService } from 'src/app/services/game.service';\nimport { ScoreService } from 'src/app/services/score.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { ScoreTabComponent } from './score-tab/score-tab.component';\n/** JS function defined in the index.html file. Function that will show the modal to the end user with the text as input. */\ndeclare const sendMessageUserModal: any;\n\n/** Component - GameComponent */\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\n/**\n * This component allows the user to play our game.\n * It also uses to other components to function properly: app-score-tab and app-user-actions-btns\n */\nexport class GameComponent implements OnInit {\n  /** Represents the number of seconds that is shown above our timer while the game is active. */\n  timerTxt : string = \"Sekunde...\"; // prikaz koliko sekundi je ostalo\n  /** Represents the precent of how much time has left on the timer. We use it to draw and manipulate with the timer animation. */\n  timerHeight : number = 100; // procenat koliko vremena je ostalo, sluzi za istravanje timer-a vizualnog\n  /** Number of how many tries has user used while mathing the game pairs. Logic is built in for the 10 tries to be max, when number 10 is reached the game will end. */\n  numOfTries : number = 0; // broj pokusaja, kada je 10 igra = zavrsena\n  /** Number of correctly mathced game pairs. Number of correct answers by the user. */\n  scoreNum : number = 0; // broj tacnih\n  /** List that will contains the game data obtained from the server. */\n  serverData : any = []; // podaci dobijeni od servera\n  /** Contains the currect active game name. */\n  currentActiveGameName = \"\";\n  /** We yse ut ti set the selected fields from both columns, makes it easier to check the matching pairs. */\n  flagSelectedItems = { // sluzi za cuvanje selectovanih polja iz kolona radi lakse provere\n    one: \"\",\n    two: \"\"\n  }\n  /** Time interval that will run for our timer, undefined at the beginning */\n  interval : any = undefined;\n\n  /**\n   * Constructor - reddirects user to the /login if user is not loggedin to our app.\n   * @param userService {UserService} to use the loggedin user data\n   * @param gameService {GameService} to send and receive data from our microservice API\n   * @param router {Router} to change component page\n   * @param scoreService {ScoreService} to send and receive data from our microservice API\n   * @param scoreTabComponent {ScoreTabComponent}\n   */\n  constructor(public userService : UserService,\n     public gameService : GameService, // kontaktiranje APIja\n     private router:Router, // za promenu komponente kao strane\n     private scoreService: ScoreService, // kontaktira API\n     private scoreTabComponent : ScoreTabComponent) {\n    if(userService.getLoggedinUser().id === -1){\n      // ako nije logovan radi reddirect na /login stranu\n      // -1 smo stavili kao defaultni i za logout kada nema user-a logovanog\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n      this.router.navigate([\"/login\"]));\n    }\n    this.serverData = [];\n  }\n  /** Empty ngOnInit */\n  ngOnInit(): void {\n   \n  \n  } //ngOnInit end;\n  /**\n   * Used to shuffle the array by random chance.\n   * We use this function to shuffle the both columns array that us being displayed to the end user.\n   */\n  shuffleArray(array:Array) { // da rasporedi random elemente liste\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));         \n        var temp = array[i]; \n        array[i] = array[j]; \n        array[j] = temp; \n    }\n    return array;\n}\n\n/**\n * Checks if game has ended, if it did end disable the click event.\n * When we select one item from the column other items that were selected are set as unselected.\n * Set clicked element as selected.\n * Save that it is selected in our flagSelectedItems attribute.\n * @param item {string} Column Game data Item\n * @param pointerFlag {boolean} if flag is true this column answer has not been marked as a correct match answer\n */\n  onColumnOneClick(item:string, pointerFlag:boolean){\n    if(!pointerFlag){return;}\n    //(click)=\"onColumnOneClick(item.columnOne)\" u html fajlu\n    // za elemente prve kolone\n    if(this.gameService.getGameEndedFlag()){ // ako je igra zavrsena nema korisnik prava da igra na dalje\n      return;\n    }\n    this.serverData.dataOne.forEach((e:any) =>{ \n      // kada se 1 selektuje samo on moze da bude selektovan,\n      // stavi svaki da nije selektovan\n      e.selectedOne = false;\n    })\n    let foundItem = this.serverData.dataOne.find((elem:any) => { // nadju onaj koj je kliknut u nasoj listi\n      return elem.columnOne === item});\n    foundItem.selectedOne = true; // na kliknut elemenat stavi da je selektovan\n    this.flagSelectedItems.one = item; // upamti koji je selektovan\n  }\n/**\n * Check if element from the first column is selected. iF not return noothing which will exist the execution of this method.\n * Set selected element as clicked.\n * Do numOfTries + 1.\n * If elements from first and second column match add one to scoreNum attribute.\n * Set both fields as not selected.\n * Check if number of tries is equal to 10, if it is end the game.\n * @param item {string} Column Game data Item\n */\n  onColumnTwoClick(item:string){\n    // kada se klikne na elemenat druge kolone\n   \n    // proveri da li je selektovan neki iz prve kolone\n    let foundItem = this.serverData.dataOne.find((elem:any) => {\n      return elem.selectedOne === true\n    });\n    if(!foundItem){return;} // ako nije niko selektovan ne radi nista\n    // korisnik mora da izabere iz prve kolone zatim iz druge\n    this.serverData.dataTwo.forEach((e:any) =>{e.selectedTwo = false;})// stavi svaki da nije selektovan\n    foundItem = this.serverData.dataTwo.find((elem:any) => { \n      // nadji kliknut elemenat i selektuj ga\n      return elem.columnTwo === item});\n    if(foundItem.success){return;} // ako je polje markirano da je tacno izabrano, nezelimo da povecavamo broj pokusaja i da idemo dalje\n    foundItem.selectedTwo = true;\n    this.numOfTries++;\n    this.flagSelectedItems.two = item; // zapamti koji je selektovan\n    let isSuccess = this.serverData.data.find((elem:any) => {\n      // prodji kroz server listu i upredi ako postoji par izmendju selektovanih u prvoj i drugoj koloni\n      return elem.columnOne === this.flagSelectedItems.one  \n            && elem.columnTwo === this.flagSelectedItems.two\n    });\n    if(isSuccess){ // ako je tacan par\n      foundItem.success = true; // stavi ih da je par pronadjen\n      foundItem.pointer = false; // zaustavi da korisnik moze da klikce \n      this.scoreNum++; // povecaj SCORE\n    }\n    this.serverData.dataTwo.forEach((e:any)=>{\n      e.selectedOne = false;\n      e.selectedTwo = false;\n    }) // postavi svaki da nije selektovan\n    if(this.isNumberOfTriesEqualToTen()){\n      this.gameEndedSendScoreResult();\n    }\n  }\n/**\n * Checks if numOfTries attribute is equal to ten.\n * @returns {boolean}\n */\n  isNumberOfTriesEqualToTen():boolean{\n    // znaci da igra treba da bude gotova ako je ==10\n    if(this.numOfTries === 10){\n      return true;\n    } return false;\n  }\n  /** Disasble pointer cursor - cursor change to pointer on hover on all column elements */\n  disableClickOnItems():void{\n    // zaustavi klik animaciju\n    this.serverData.data.forEach((e:any)=>{\n      e.pointer = false;\n    });\n  }\n  /**\n   * When game has ended. Collects the input from the game abd sends the data to our microservice API via gameService.\n   */\n  gameEndedSendScoreResult(){\n    this.gameService.gameActive = true;\n    this.gameService.setGameEndedFlag(true); // igra je gotova\n    sendMessageUserModal(\"Igra je zavrsena!\")\n    this.disableClickOnItems();\n    this.scoreService.pushScore( // dodaj score na server\n      // server radi proveru i cuva samo najbolji score od zadatog user-a\n      this.scoreNum,\n      this.userService.getLoggedinUser().username\n    ).subscribe((data:any)=>{\n      console.log(data)\n      this.scoreTabComponent.updateScoreTableView();\n    });\n  }\n\n  /**\n   * Method that will initialize all the parameters when new game starts.\n   * It is going to reset numOfTries and scoreNum to zero.\n   * Set game as active.\n   * Grab new random game data from our microservise API via GameService.\n   * Shuffle array for both columns.\n   * Set the new timer to run.\n   */\n  startTheGame(){\n    this.gameService.setGameEndedFlag(false);\n    this.timerHeight = 100; // %\n    try{clearInterval(this.interval);}catch{};\n\n    this.numOfTries= 0; \n    this.scoreNum = 0; \n\n    // vucemo podatke sa servera\n    // random radimo za 2 nove liste kako bi redosled u obe kolone bio drugaciji, svaki prikaz kolone je prikaz iz druge liste\n    this.gameService.getGame().subscribe((data)=>{\n      this.currentActiveGameName = data.name;\n      this.serverData.data = JSON.parse(data.data);\n        this.serverData.data.forEach((e: any) => {\n          e.pointer = true;\n        // da moze da se klikne na elemenat\n        // [ngClass] u .html fajlu postavlja CSS imena u zavisnosti od true/false boolean varijabli\n      })\n      this.serverData.dataOne = this.shuffleArray(this.serverData.data);\n      this.serverData.dataTwo=[]\n      Object.keys(this.serverData.dataOne).forEach(key=>this.serverData.dataTwo[key]=this.serverData.dataOne[key]);\n      this.serverData.dataTwo = this.shuffleArray(this.serverData.dataTwo);\n    \n      //postavljamo nas timer ispod.....\n      //let timerInMinutes = 2;\n      //let timerInSeconds = timerInMinutes * 60000;\n      let timerInSeconds = 60000;\n      let howManySeconds = timerInSeconds/1000;\n      let decreasePerMin = 100/howManySeconds;\n      this.timerTxt = `${howManySeconds}`; // timerTxt se prikazuje u .html fajlu\n      this.interval = setInterval(() => { // stavljamo interval da ide na svakih 1s da se izvri funkcija unutar\n        if(this.gameService.getGameEndedFlag()){clearInterval(this.interval);} // ako je igra zavrsena prestaje sa intervalom\n        howManySeconds--; // umanji sekunde za 1s\n        this.timerTxt = `${howManySeconds}`;// timerTxt se prikazuje u .html fajlu\n        this.timerHeight -= decreasePerMin; // da smanji % prikaza timera graficki\n        if (this.timerHeight \n    \n\n    \n        \n\n    Zdravo {{this.userService.getLoggedinUser().username}}!\n\n    Spoite polja sa leve strane sa odgovarajucim poljima sa desne strane!\n\n    \n    \n    \n        \n        \n            \n            \n            \n\n            \n                Naziv Igre: {{this.currentActiveGameName}}\n            \n\n            \n\n                Broj pokusaja: {{numOfTries}}\n\n                Osvojeni poeni: {{scoreNum}}\n\n            \n\n            {{timerTxt}}\n            \n            \n            \n        \n        \n\n        \n            Kliknite na dugme Nova Igra kako bi zapoceli igru!\n        \n\n          \n            \n            \n                \n                    \n                        {{item.columnOne}}\n                    \n                \n            \n            \n                \n                \n            \n            \n                \n                    {{itemz.columnTwo}}\n                \n            \n            \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./game.component.css\n                \n                .row{\n    margin: 0 auto;\n    width: 80%;\n}\n.progress-bar-vertical {\n    width: 50px;\n    min-height: 100px;\n    display: flex;\n    align-items: flex-end;\n    margin-right: 20px;\n    margin-left:5%;\n    height:100%;\n    \n    background-color: red ;\n    }\n\n    .progress-bar-vertical .progress-bar {\n    width: 100%;\n    height: 0;\n    -webkit-transition: height 0.6s ease;\n    -o-transition: height 0.6s ease;\n    transition: height 0.6s ease;\n    height:200px; \n    }\n.list-group-item-action{\n    text-align: center;\n    margin-top:2px;\n    margin-bottom: 2px;\n    border-bottom: 2px solid #325DDA;\n    background-color: #3061ED;\n    color : white;\n}\n.list-group{\n    border: 2px solid white;\n}\n.list-group-item-success{\n    background-color: purple;\n}\n.list-group-item-secondary{\n    background-color:#B45F04;\n}\n.list-group-item:hover{background-color: white; color:black;}\n#numOfTriesDiv{\n    margin-right: 20px;\n    margin-left: 30px;\n    font-size: 20px;\n    color:#8A0808;\n    /*background-color: brown;*/\n    /*margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 5px;*/\n}\n.numStats {\n  font-size: 20px;\n  padding: 1px;\n}\n\n#pointsDiv{\n    width: 100%;\n}\n#scoreNumDiv{\n    /*background-color:forestgreen;*/\n    margin-left: 90px;\n    font-size: 20px;\n    color:#40FF00;\n    /*margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 5px;*/\n}\n\n.widthdiv{\n    width: 520px;\n}\n\n.margin-top-br{\n    margin-top: 5px;\n}\n.pointer {cursor: pointer;}\n.color-text-white{color:white}\n.top-margin{\n    margin-top: 20px;\n}\n#helloUsername{\n    color:white;\n    margin: 0px auto;\n    text-align: center;\n    font-size: 38px;\n}\n\n#obaveštenje {\n  color: white;\n  margin: 0px auto;\n  text-align: center;\n  font-size: 38px;\n}\n#timerSecondsLeft{\n    color: red;\n    font-weight: bold;\n    font-size: 40px;\n    margin-bottom: 10px;\n    margin-top:5px;\n}\n#gameName{\n    Color: white;\n    padding: 3px;\n    background-color: rgba(0, 0, 0, 0.2);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Zdravo {{this.userService.getLoggedinUser().username}}!    Spoite polja sa leve strane sa odgovarajucim poljima sa desne strane!                                                                                            Naziv Igre: {{this.currentActiveGameName}}                                        Broj pokusaja: {{numOfTries}}                Osvojeni poeni: {{scoreNum}}                        {{timerTxt}}                                                                        Kliknite na dugme Nova Igra kako bi zapoceli igru!                                                                                                      {{item.columnOne}}                                                                                                                                                        {{itemz.columnTwo}}                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/game.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable GameService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                            \n                                    Public\n                                gameActive\n                            \n                            \n                                    Private\n                                gameEndedFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllGames\n                            \n                            \n                                    Public\n                                getGame\n                            \n                            \n                                    Public\n                                getGameEndedFlag\n                            \n                            \n                                    Public\n                                pushGame\n                            \n                            \n                                    Public\n                                removeGame\n                            \n                            \n                                    Public\n                                setGameEndedFlag\n                            \n                            \n                                    Public\n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/game.service.ts:24\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to issue requests to our api calls.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllGames\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllGames()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:84\n                \n            \n\n\n            \n                \n                    Used to contact microservice API and obtain the games list on success.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable - List of all games that can be found in our microservice database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:35\n                \n            \n\n\n            \n                \n                    Used to contact microservice API and obtain the random list on success.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable - random game object from the database, structure defiend in our Game interface\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGameEndedFlag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGameEndedFlag()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:60\n                \n            \n\n\n            \n                \n                    Getter\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Currently active gameEndedFlag\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pushGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pushGame(gameObj: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:45\n                \n            \n\n\n            \n                \n                    This method is used to create new Game in the server database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gameObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to send to the microservice\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeGame(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:77\n                \n            \n\n\n            \n                \n                    Removes the game on successful microservice api call.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setGameEndedFlag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setGameEndedFlag(flag: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:53\n                \n            \n\n\n            \n                \n                    Sets the game ended flag\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    flag\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        used as the new value for our gameEndedFlag attribute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGame(gameObj: Game)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:69\n                \n            \n\n\n            \n                \n                    Updates the game with new vales\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gameObj\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contains the new Game Object values to update \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://localhost:5301/api\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/game.service.ts:24\n                            \n                        \n\n                \n                    \n                        URL to our microservice api. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gameActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/game.service.ts:22\n                            \n                        \n\n                \n                    \n                        Used to mark if the game is currently active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gameEndedFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/game.service.ts:20\n                            \n                        \n\n                \n                    \n                        Used to mark the game as ongoing or ended. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\n\n/** game interface model */\nexport interface Game { // izgled Game podataka\n    /** Game id represents game id in our Game table in the database */\n    id  : number,\n    /** Game name represents game name in our Game table in the database */\n    name: string,\n    /** Game data represents game data in the JSON format in our Game table in the database */\n    data: string,\n  }\n/**\n * Injectable GameService\n */\n@Injectable()\nexport class GameService {\n    /** Used to mark the game as ongoing or ended. */\n    private gameEndedFlag : boolean = false;\n    /** Used to mark if the game is currently active */\n    public gameActive :boolean = true;\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5301/api\"; // glavna URL adresa za nas API\n    /**\n     * constructor\n     * @param httpClient {HttpClient} Used to issue requests to our api calls.\n     */\n    constructor(private httpClient: HttpClient) {} // preko httpclijenta kontaktiramo server\n\n    /**\n     * Used to contact microservice API and obtain the random list on success.\n     * @returns Observable - random game object from the database, structure defiend in our Game interface\n     */\n    public getGame() : Observable   { \n        // observable - za asinhrone funkcije Promise itd\n        //https://angular.io/guide/observables\n        return this.httpClient\n                .get(`${this.apiURL}/game`); // vraca promise pa moramo subscribe na mestu gde pozivamo funkcije\n    }\n    /**\n     * This method is used to create new Game in the server database\n     * @param gameObj Object to send to the microservice\n     */\n    public pushGame(gameObj: any) : Observable   {\n        return this.httpClient\n        .post(`${this.apiURL}/game`, gameObj) // gameObj je JS objekat koje salje kao JSON\n    }\n    /** \n     * Sets the game ended flag\n     * @param flag {boolean} used as the new value for our gameEndedFlag attribute\n     */\n    public setGameEndedFlag(flag: boolean){\n        this.gameEndedFlag = flag;\n    }\n    /**\n     * Getter\n     * @returns Currently active gameEndedFlag\n     */\n    public getGameEndedFlag(){\n        return this.gameEndedFlag;\n    }\n\n    /** \n     * Updates the game with new vales\n     * @param gameObj {Game} contains the new Game Object values to update \n     * @returns Observable\n     */\n    public updateGame(gameObj: Game): Observable {\n        return this.httpClient.put(`${this.apiURL}/game`, gameObj);\n    }\n    /** \n     * Removes the game on successful microservice api call.\n     * @param id {number}\n     * @returns Observable\n     */\n    public removeGame(id: number): Observable {\n        return this.httpClient.delete(`${this.apiURL}/game/${id}`);\n    }\n    /**\n     * Used to contact microservice API and obtain the games list on success.\n     * @returns Observable - List of all games that can be found in our microservice database.\n     */\n    public getAllGames(): Observable {\n        return this.httpClient\n                .get(`${this.apiURL}/game/all`);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameTabViewComponent.html":{"url":"components/GameTabViewComponent.html","title":"component - GameTabViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GameTabViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game-tab-view/game-tab-view.component.ts\n\n\n    \n        Description\n    \n    \n        Component - GameTabViewComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-tab-view\n            \n\n            \n                styleUrls\n                ./game-tab-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game-tab-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formInputInvalid\n                            \n                            \n                                    Private\n                                gameTableList\n                            \n                            \n                                    Public\n                                inputGameData\n                            \n                            \n                                    Private\n                                inputIDClicked\n                            \n                            \n                                    Public\n                                inputNameGameData\n                            \n                            \n                                    Private\n                                isCreateModalActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIfFieldsNotEmpty\n                            \n                            \n                                getGameTableList\n                            \n                            \n                                getIsCreateModalActive\n                            \n                            \n                                initEmptyInputUpdateForm\n                            \n                            \n                                initMainDataTable\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCreateNewGame\n                            \n                            \n                                onCreateNewGameSubmit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onUpdateGameFormSubmit\n                            \n                            \n                                onUpdateOpenDialog\n                            \n                            \n                                onUpdatGameModalClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game-tab-view/game-tab-view.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor : if user is not admin, user will be reddirected to the /login component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkIfFieldsNotEmpty\n                        \n                        \n                    \n                \n            \n            \n                \ncheckIfFieldsNotEmpty()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:158\n                \n            \n\n\n            \n                \n                    Checks if all fields are filled by the end user in our Input Dialog.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGameTableList\n                        \n                        \n                    \n                \n            \n            \n                \ngetGameTableList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:151\n                \n            \n\n\n            \n                \n                    Getter\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        gameTableList attribute \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsCreateModalActive\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsCreateModalActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:210\n                \n            \n\n\n            \n                \n                    Getter\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        if out input dialog is active or not.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initEmptyInputUpdateForm\n                        \n                        \n                    \n                \n            \n            \n                \ninitEmptyInputUpdateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:57\n                \n            \n\n\n            \n                \n                    Empties out Input dialog form \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initMainDataTable\n                        \n                        \n                    \n                \n            \n            \n                \ninitMainDataTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:66\n                \n            \n\n\n            \n                \n                    This method will use gameService to get the data related to all the games in order to list them and show to the end user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:80\n                \n            \n\n\n            \n                \n                    sets gameEndedFlag attribute of GameService class to truue.\ncalls our local class method initMainDataTable.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCreateNewGame\n                        \n                        \n                    \n                \n            \n            \n                \nonCreateNewGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:174\n                \n            \n\n\n            \n                \n                    Empties out all form fields and opens out Input Dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCreateNewGameSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonCreateNewGameSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:186\n                \n            \n\n\n            \n                \n                    Handles the submit User data.\nChecks if fields are not empty, if they are returns nothing and stops the method execution\nif fields are not empty it will create the Game data structure and deligate that objecct to the GameService pushGame function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:128\n                \n            \n\n\n            \n                \n                    Deletes the row in the database that have data about one choosen game.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contains ID of the Game to delete from the database.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdateGameFormSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdateGameFormSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:90\n                \n            \n\n\n            \n                \n                    When user chooses and option to update the game this method is called.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdateOpenDialog\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdateOpenDialog(item: Game)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:140\n                \n            \n\n\n            \n                \n                    Sets the Input Dialog with chosen game values and starts the dialog.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contains the data about the GAME data that we want to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdatGameModalClose\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdatGameModalClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:117\n                \n            \n\n\n            \n                \n                    Used to reset all fields and to close the Input Dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formInputInvalid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:30\n                            \n                        \n\n                \n                    \n                        Contains if all fields are valid in our Input Dialog: when creating or updating our game. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gameTableList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:24\n                            \n                        \n\n                \n                    \n                        Contains game table data to list as well as data about the data fields which are hidden at the beginning.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputGameData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:26\n                            \n                        \n\n                \n                    \n                        Contains an array of Input fields eiither for updating the Game fields, or for creating new Game data fields. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputIDClicked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:32\n                            \n                        \n\n                \n                    \n                        when we want to update the Game Data, this field will contain ID of the GAME in our database. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputNameGameData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        Contains game input name for updating or when creating new Game \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isCreateModalActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        if Input Dialog is active : either for create or update Game operation. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Game, GameService } from 'src/app/services/game.service';\nimport { UserService } from 'src/app/services/user.service';\n/** JS function defined in the index.html file. Function that will initialize modal reference when called. */\ndeclare const initializeUpdateGameModalVar: any;\n/** JS function defined in the index.html file. Function that will show the modal to the end user. */\ndeclare const updateGameModalShow: any;\n/** JS function defined in the index.html file. Function that will show the modal to the end user with the text as input. */\ndeclare const sendMessageUserModal: any;\n/**\n * Component - GameTabViewComponent\n */\n@Component({\n  selector: 'app-game-tab-view',\n  templateUrl: './game-tab-view.component.html',\n  styleUrls: ['./game-tab-view.component.css']\n})\n/**\n * GameTabViewComponent - page that enables the admin to edit, delete and create new components\n */\nexport class GameTabViewComponent implements OnInit {\n  /**Contains game table data to list as well as data about the data fields which are hidden at the beginning.*/\n  private gameTableList : Array = [];\n  /** Contains an array of Input fields eiither for updating the Game fields, or for creating new Game data fields. */\n  public inputGameData : Array = [];\n  /** Contains game input name for updating or when creating new Game */\n  public inputNameGameData : string = \"\";\n  /**Contains if all fields are valid in our Input Dialog: when creating or updating our game. */\n  public formInputInvalid : boolean = false;\n  /** when we want to update the Game Data, this field will contain ID of the GAME in our database. */\n  private inputIDClicked: number = -1;\n  /** if Input Dialog is active : either for create or update Game operation. */\n  private isCreateModalActive : boolean = false;\n  /**\n   * Constructor : if user is not admin, user will be reddirected to the /login component.\n   * @param userService {UserService}\n   * @param router {Router}\n   * @param gameService {GameService}\n   */\n  constructor(\n    private userService : UserService,\n    private router: Router,\n    private gameService : GameService,\n  ) {\n    if(userService.getLoggedinUser().role != \"admin\"){\n      // korisnik mora da bude admin kako bi pristupio strani!\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=> \n      this.router.navigate([\"/login\"])); \n      console.log(\"not loggedin!\")\n    }\n    this.initEmptyInputUpdateForm(); \n    this.gameService.gameActive = false;\n   }\n\n    /** Empties out Input dialog form */\n   initEmptyInputUpdateForm(){\n     // postavlja sva polja za izmene na prazne stringove\n    this.inputGameData = [];\n    for(let i = 0; i {\n      this.gameTableList = e;\n      console.log(e)\n    },(err)=>{\n      console.log(err)\n      sendMessageUserModal(\"Doslo je do greske pri ucitavanju podataka...\")\n    })\n   }\n  /**\n   * sets gameEndedFlag attribute of GameService class to truue.\n   * calls our local class method initMainDataTable.\n   */\n  ngOnInit(): void {\n    this.gameService.setGameEndedFlag(true);\n    this.initMainDataTable();\n    \n    initializeUpdateGameModalVar();\n  }\n  /**\n   * When user chooses and option to update the game this method is called.\n   * \n   */\n  onUpdateGameFormSubmit():void{\n    if(!this.checkIfFieldsNotEmpty()){\n      this.formInputInvalid = true;\n      return;\n    } else{ this.formInputInvalid = false;}\n\n    let item = {\n      id: this.inputIDClicked,\n      name: this.inputNameGameData,\n      data: JSON.stringify(this.inputGameData)\n    }\n\n    this.gameService.updateGame(item).subscribe((e)=>{\n      this.onUpdatGameModalClose();\n      sendMessageUserModal(`igra je promenjena ${item.id}`);\n      this.initMainDataTable();\n    },(err)=>{\n      this.onUpdatGameModalClose();\n      sendMessageUserModal(`doslo je do greske kod menjanja igre ${item.id}`);\n      this.initEmptyInputUpdateForm();\n    });\n    \n  }\n\n  /**\n   * Used to reset all fields and to close the Input Dialog.\n   */\n  onUpdatGameModalClose():void{\n    updateGameModalShow(false);\n    this.inputGameData = [];\n    this.formInputInvalid = false;\n    this.initEmptyInputUpdateForm();\n  }\n\n  /**\n   * Deletes the row in the database that have data about one choosen game.\n   * @param id {number} contains ID of the Game to delete from the database.\n   */\n  onDelete(id:number):void{\n      console.log(id)\n      this.gameService.removeGame(id).subscribe(  (e) => { sendMessageUserModal(`igra je obrisana ${id}`); this.initMainDataTable(); }\n                                                  ,\n                                                  (err) => { sendMessageUserModal(`doslo je do greske prilikom brisanja igre ${id}`); }\n                                               );\n  }\n\n  /**\n   * Sets the Input Dialog with chosen game values and starts the dialog.\n   * @param {Game} item  contains the data about the GAME data that we want to update.\n   */\n  onUpdateOpenDialog(item:Game):void{\n    this.isCreateModalActive = false;\n    updateGameModalShow(true);\n    this.inputGameData = JSON.parse(item.data);\n    this.inputNameGameData = item.name;\n    this.inputIDClicked = item.id;\n  }\n  /**\n   * Getter\n   * @returns {Array} gameTableList attribute \n   */\n  getGameTableList(){\n    return this.gameTableList;\n  }\n  /**\n   * Checks if all fields are filled by the end user in our Input Dialog.\n   * @returns {boolean} value\n   */\n  checkIfFieldsNotEmpty():boolean{\n    let returnBool = true;\n    if(this.inputNameGameData.trim() === \"\"){\n      return false;\n    }\n    this.inputGameData.forEach((e)=>{\n      if (e.columnOne.trim() === \"\" || e.columnTwo.trim() === \"\"){\n        returnBool = false\n      }\n    });\n    return returnBool;\n  }\n\n  /**\n   * Empties out all form fields and opens out Input Dialog.\n   */\n  onCreateNewGame(){\n    this.initEmptyInputUpdateForm();\n    this.isCreateModalActive = true;\n    updateGameModalShow(true);\n    this.inputNameGameData = \"\";\n  }\n\n  /**\n   * Handles the submit User data.\n   * Checks if fields are not empty, if they are returns nothing and stops the method execution\n   * if fields are not empty it will create the Game data structure and deligate that objecct to the GameService pushGame function\n   */\n  onCreateNewGameSubmit(){\n    if(!this.checkIfFieldsNotEmpty()){\n      this.formInputInvalid = true;\n      return;\n    } else{ this.formInputInvalid = false;}\n    this.formInputInvalid = false;\n\n    let item = {\n      name: this.inputNameGameData,\n      data: JSON.stringify(this.inputGameData)\n    }\n    this.gameService.pushGame(item).subscribe((data)=>{\n      this.onUpdatGameModalClose();\n      sendMessageUserModal(\"Nova Igra Uspesno Napravljena\");\n      this.initMainDataTable();\n    }, (err)=>{\n      sendMessageUserModal(\"Doslo je do greske, igra nije mogla da se napravi\");\n    });\n\n  }\n  /**\n   * Getter\n   * @returns {boolean} if out input dialog is active or not.\n   */\n  getIsCreateModalActive():boolean{\n    return this.isCreateModalActive;\n  }\n\n}\n\n    \n\n    \n        \n    Napravi Nove Igre - Izmeni Igre - Izbriši Igre\n\n\n\n\n\n\n\n\n\n\n    Pocetna\n\n\n\n\n    Igra\n\n\n\n\n\n\n\nNapravi novu igru\n    \n\n    \n        \n            id\n            Naziv Igre\n             akcije \n        \n    \n    \n        \n            {{item.id}}\n            {{item.name}}\n            \n                Izmeni\n                Ukloni\n            \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n    Igra\n    \n    \n    \n      \n        \n        \n          1.\n          \n            \n            \n          \n\n          2.\n          \n            \n            \n          \n\n          3.\n          \n            \n            \n          \n\n          4.\n          \n            \n            \n          \n\n          5.\n          \n            \n            \n          \n\n          6.\n          \n            \n            \n          \n\n          7.\n          \n            \n            \n          \n\n          8.\n          \n            \n            \n          \n\n           -->\n          Izmeni Igre -->\n           -->\n\n          9.\n          \n            \n            \n          \n\n          10.\n          \n            \n            \n          \n        \n        Morate popuniti sva polja!\n        \n            UPDATE\n        \n        \n            CREATE\n        \n        \n            CLOSE\n        \n    \n    \n    \n    \n    \n    \n\n    \n\n    \n                \n                    ./game-tab-view.component.css\n                \n                h1{\n    color:#D8D8D8;\n}\n#datatablee{\n    width:50%;\n    color:#D8D8D8;\n    background-color:#0A1B2A;\n    opacity: 0.7;\n}\ntr{\n    border: 2px solid #CEE3F6;\n}\nth{\n    color:#F3F781;\n    width: 33.33%;\n    text-align: center;\n}\n\n#additionalLinksBtn{\n    margin-bottom:20px;\n}\n#additionalLinksBtn button{\n    background-color:#0A1B2A;\n    margin-right:10px;\n}\n#thScore{\n    cursor: pointer;\n}\ntd button{\n    margin-right:5px;\n    padding-top:1px;\n    padding-bottom: 1px;\n}\ntd{\n    text-align: center;\n}\n\n.text-orange-create{\n    color: orange;\n    background-color:#0A1B2A;\n    margin-left: 25%;\n    margin-bottom: 10px;\n}\n\n#formCreateGame button{\n    margin-top:8px;\n    margin-right: 5px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Napravi Nove Igre - Izmeni Igre - Izbriši Igre    Pocetna    IgraNapravi novu igru                            id            Naziv Igre             akcije                                     {{item.id}}            {{item.name}}                            Izmeni                Ukloni                                        Igra                                            1.                                                      2.                                                      3.                                                      4.                                                      5.                                                      6.                                                      7.                                                      8.                                                       -->          Izmeni Igre -->           -->          9.                                                      10.                                                            Morate popuniti sva polja!                    UPDATE                            CREATE                            CLOSE                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameTabViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndexComponent.html":{"url":"components/IndexComponent.html","title":"component - IndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/index/index.component.ts\n\n\n    \n        Description\n    \n    \n        Component IndexComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-index\n            \n\n            \n                styleUrls\n                ./index.component.css\n            \n\n\n\n            \n                templateUrl\n                ./index.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/index/index.component.ts:10\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/index/index.component.ts:20\n                \n            \n\n\n            \n                \n                    sets the GameService - gameActive attribute to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GameService } from 'src/app/services/game.service';\n/**  Component IndexComponent*/\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\n/** component that loads on the root URI param of the website URL */\nexport class IndexComponent implements OnInit {\n  /**\n   * Constructor\n   * @param gameService {GameService}\n   */\n  constructor( private gameService: GameService) { }\n\n  /** \n   * sets the GameService - gameActive attribute to false\n   */\n  ngOnInit(): void {\n    this.gameService.gameActive = false;\n  }\n\n}\n\n    \n\n    \n        \n     Welcome strana    \n\n\n\n     Igra Spojiti nazive sa leve strane sa odgovarajucim nazivima desne strane \n     Logujte se kako bi igrali Ili napravite novi nalog \n\n\n\n  \n    Igraj!\n  \n\n\n    \n\n    \n                \n                    ./index.component.css\n                \n                body{\n          background-color:#5882FA;\n          color: white;\n      }\n      h1 {\n        text-align: center; \n        display: inline-block;\n      }\n      .list-group a{\n          margin-top:5px;\n          margin-bottom:5px;\n      }\n      #additionalLinksBtn{\n        margin-bottom:20px;\n    }\n    #additionalLinksBtn button{\n        background-color:#0A1B2A;\n        margin-right:20px;\n        margin-bottom: 7px;\n        width: 130px;\n    }\ndiv p{\n  font-size: 20px;\n  color: white;\n  text-align: center;\n}    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Welcome strana         Igra Spojiti nazive sa leve strane sa odgovarajucim nazivima desne strane      Logujte se kako bi igrali Ili napravite novi nalog       Igraj!  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component - LoginComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eml\n                            \n                            \n                                pwd\n                            \n                            \n                                showUserLoginForm\n                            \n                            \n                                usr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onApiLoginOrRegisterActionResult\n                            \n                            \n                                onLogin\n                            \n                            \n                                onRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                            Checks if the UserService has data about the user, this means that user is logged. If the user is loggedin, the user will be redirected to the /game route.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:47\n                \n            \n\n\n            \n                \n                    Empty method, does not do anything. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApiLoginOrRegisterActionResult\n                        \n                        \n                    \n                \n            \n            \n                \nonApiLoginOrRegisterActionResult(res: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:92\n                \n            \n\n\n            \n                \n                    If the input param is an Object this function will set the active user in the UserService.\nIf the input param is text it will call the function that will trigger and open a dialog with a message to the end user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        represents the result that we should get from the server. It can be either Object type or text type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogin\n                        \n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:52\n                \n            \n\n\n            \n                \n                    This method is called when User clicks on the Login Button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRegister\n                        \n                        \n                    \n                \n            \n            \n                \nonRegister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:67\n                \n            \n\n\n            \n                \n                    This method is called when User clicks on the Register\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:24\n                            \n                        \n\n                \n                    \n                        We are binding eml to the email input field that is shown if users chooses the register option \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pwd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                        We are binding pwd to the password input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showUserLoginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        We are binding usr to the username input field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GameService } from 'src/app/services/game.service';\nimport { UserService } from 'src/app/services/user.service';\n/** JS function defined in the index.html file. Function that will show the modal to the end user with the text as input. */\ndeclare const sendMessageUserModal: any; // funkcija koja se nalazu u INDEX.HTML fajlu dole u script tagu\n// ovako je pozivamo i kazemo joj sta i gde da izvrsi\n\n/**\n * Component - LoginComponent\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n/** Class that is used for our login page. */\nexport class LoginComponent implements OnInit {\n  /** We are binding usr to the username input field */\n    usr: string = ''; // radimo binding sa value on input text field-a\n    /** We are binding pwd to the password input field */\n    pwd: string = '';// radimo binding sa value on input text field-a\n    /** We are binding eml to the email input field that is shown if users chooses the register option */\n    eml: string = '';\n    showUserLoginForm : boolean = true;\n  // binding nam omogucava da pristupom na varijablu dobijamo sta je u tekstualnim poljima u \"real time\"\n  /**\n   * Checks if the UserService has data about the user, this means that user is logged. If the user is loggedin, the user will be redirected to the /game route.\n   * @param {UserService} userService\n   * @param {Router} router \n   * @param {GameService} gameService \n   */\n  constructor(private userService : UserService, private router:Router, private gameService: GameService) {\n    //private userService : UserService - mozemo pristupiti userService varijabli kao i njenim metodama\n    //, private router:Router - pristupamo ruteru\n    if(userService.getLoggedinUser().id != -1){\n      // ako nije logovan radi reddirect na /login stranu\n      // -1 smo stavili kao defaultni i za logout kada nema user-a logovanog\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n      this.router.navigate([\"/game\"]));\n    }\n    else {\n      this.gameService.gameActive = false;\n    }\n   }\n  /** Empty method, does not do anything. */\n  ngOnInit(): void {\n  }\n/**\n * This method is called when User clicks on the Login Button\n */\n  onLogin(): void {\n    //subscribe - zato sto je sve asinhrono\n    // cekamo odgovor od servera kada server vrati dobar kod, npr 200 mi dobijene podatke dobijamo u data\n    // ako vrati neki error ili resurs nije mogo biti nadjen/nema odgovora od servera to ide u error\n\n      this.userService.loginUser(this.usr, this.pwd).subscribe((data) => {\n          console.log('[LOGIN USER RES]: ', data)\n          this.onApiLoginOrRegisterActionResult(data)\n      }, (err) => { this.onApiLoginOrRegisterActionResult(\"lozinka ili korisnicko ime netacno!\") });\n     \n }\n\n/**\n * This method is called when User clicks on the Register\n */\n    onRegister(): void {\n\n        if (this.usr == \"\")\n            this.onApiLoginOrRegisterActionResult(\"Unesite neki Username\");\n        \n        else if (this.pwd == \"\") \n            this.onApiLoginOrRegisterActionResult(\"Unesite neki Pasword\");\n\n        else if (this.eml == \"\")\n            this.onApiLoginOrRegisterActionResult(\"Unesite email adresu\");\n\n        else {\n            this.userService.createNewUser(this.usr, this.pwd, this.eml, \"user\").subscribe(\n                (data) => { this.onApiLoginOrRegisterActionResult(data) },\n                (err) => { this.onApiLoginOrRegisterActionResult(\"korisnicko ime je zauzeto!\") }\n            );\n        \n        }\n    \n    }\n/**\n * If the input param is an Object this function will set the active user in the UserService.\n * If the input param is text it will call the function that will trigger and open a dialog with a message to the end user.\n * @param res {any} represents the result that we should get from the server. It can be either Object type or text type\n */\n  onApiLoginOrRegisterActionResult(res:any){\n    if(res instanceof Object)\n    {\n      // proveravamo da li je res javascript objekat ako jeste postavljamo logovanog usera\n      this.userService.setActiveUser({           \n        id         : res.id,       \n        username   : res.username,    \n        email      : res.email,\n        role       : res.role,\n      });\n\n    //radimo reddirect na game komponentu this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n      this.router.navigate([\"/game\"]);//);\n    }\n    else {\n      sendMessageUserModal(res); // ako nije objekat salji da ispise sve preko modala\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Login\n  \n\n  \n    \n      Pocetna\n    \n  \n  \n    \n      \n        \n           Login\n        \n        \n           Register\n        \n      \n      \n        \n          \n\n            \n              Username\n              \n            \n      \n            \n              Password\n              \n            \n      \n            \n              Email\n              \n            \n           \n            \n              \n                Login\n              \n              \n                Register\n              \n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .logincompclass{\n    background-color:#5882FA;\n    color: white;\n}\n#registerBtn, #loginBtn {\n  \n  margin-top: 10px;\n  margin-left: 10px;\n}\n\n#additionalLinksBtn{\n  margin-bottom:20px;\n}\n#additionalLinksBtn button{\n  background-color:#0A1B2A;\n \n}\n.formSection{\n  width:20%;\n}\n.nav-link{\n  cursor: pointer;\n  color:white;\n}\n.active {\n  color:black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login              Pocetna                                     Login                           Register                                                                Username                                                          Password                                                          Email                                                                               Login                                            Register                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Score.html":{"url":"interfaces/Score.html","title":"interface - Score","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Score\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/score.service.ts\n        \n\n            \n                Description\n            \n            \n                Score interface representing the data \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        score\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Score id represents score id in our Score table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Score score represents score in our Score table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Score id represents score id in our Score table in the database \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\n\n/** Score interface representing the data */\nexport interface Score { // izgled score podataka\n    /** Score id represents score id in our Score table in the database */\n    id: number,\n    /** Score score represents score in our Score table in the database */\n    score: number,\n    /** Score id represents score id in our Score table in the database */\n    username: string\n  }\n\n@Injectable()\nexport class ScoreService {\n    /** Contains full score list that is in our microservice database */\n    private scoreList : Array = [];\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5201/api\";  // glavna URL adresa za nas API\n    /**\n     * constructor\n     * @param httpClient {HttpClient} Used to issue requests to our api calls.\n     */\n    constructor(private httpClient: HttpClient) {}\n\n    /**\n     * Used to contact microservice API and obtain the score list on success.\n     * @returns Observable that will return full list of scores found in the microservice database\n     */\n    public getScore() : Observable   {\n        return this.httpClient\n                .get(`${this.apiURL}/score`);\n    }\n    /**\n     * Sends score to add to the microservice backend database.\n     * @param score {number}\n     * @param username {string}\n     * @returns Observable\n     */\n    public pushScore(score: number, username:string) : Observable   {\n        let scoreObj = {\n            score : score,\n            username : username,\n        }\n        return this.httpClient\n        .post(`${this.apiURL}/score`, scoreObj)\n    }\n\n    /**\n     * Set method for our private class scoreList attribute\n     * @param inScoreList {Array}\n     */\n    public setScoreList( inScoreList : Array){\n        this.scoreList = inScoreList\n    }\n    /**\n     * Getter\n     * @returns private class scoreList attribute\n     */\n    public getScoreList(){\n        return this.scoreList;\n    }\n    \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScoreService.html":{"url":"injectables/ScoreService.html","title":"injectable - ScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/score.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                            \n                                    Private\n                                scoreList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getScore\n                            \n                            \n                                    Public\n                                getScoreList\n                            \n                            \n                                    Public\n                                pushScore\n                            \n                            \n                                    Public\n                                setScoreList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/score.service.ts:20\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to issue requests to our api calls.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/score.service.ts:31\n                \n            \n\n\n            \n                \n                    Used to contact microservice API and obtain the score list on success.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable that will return full list of scores found in the microservice database\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getScoreList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScoreList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/score.service.ts:61\n                \n            \n\n\n            \n                \n                    Getter\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        private class scoreList attribute\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pushScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pushScore(score: number, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/score.service.ts:41\n                \n            \n\n\n            \n                \n                    Sends score to add to the microservice backend database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setScoreList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setScoreList(inScoreList: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/score.service.ts:54\n                \n            \n\n\n            \n                \n                    Set method for our private class scoreList attribute\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inScoreList\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://localhost:5201/api\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/score.service.ts:20\n                            \n                        \n\n                \n                    \n                        URL to our microservice api. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scoreList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/score.service.ts:18\n                            \n                        \n\n                \n                    \n                        Contains full score list that is in our microservice database \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\n\n/** Score interface representing the data */\nexport interface Score { // izgled score podataka\n    /** Score id represents score id in our Score table in the database */\n    id: number,\n    /** Score score represents score in our Score table in the database */\n    score: number,\n    /** Score id represents score id in our Score table in the database */\n    username: string\n  }\n\n@Injectable()\nexport class ScoreService {\n    /** Contains full score list that is in our microservice database */\n    private scoreList : Array = [];\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5201/api\";  // glavna URL adresa za nas API\n    /**\n     * constructor\n     * @param httpClient {HttpClient} Used to issue requests to our api calls.\n     */\n    constructor(private httpClient: HttpClient) {}\n\n    /**\n     * Used to contact microservice API and obtain the score list on success.\n     * @returns Observable that will return full list of scores found in the microservice database\n     */\n    public getScore() : Observable   {\n        return this.httpClient\n                .get(`${this.apiURL}/score`);\n    }\n    /**\n     * Sends score to add to the microservice backend database.\n     * @param score {number}\n     * @param username {string}\n     * @returns Observable\n     */\n    public pushScore(score: number, username:string) : Observable   {\n        let scoreObj = {\n            score : score,\n            username : username,\n        }\n        return this.httpClient\n        .post(`${this.apiURL}/score`, scoreObj)\n    }\n\n    /**\n     * Set method for our private class scoreList attribute\n     * @param inScoreList {Array}\n     */\n    public setScoreList( inScoreList : Array){\n        this.scoreList = inScoreList\n    }\n    /**\n     * Getter\n     * @returns private class scoreList attribute\n     */\n    public getScoreList(){\n        return this.scoreList;\n    }\n    \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreTabComponent.html":{"url":"components/ScoreTabComponent.html","title":"component - ScoreTabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScoreTabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game/score-tab/score-tab.component.ts\n\n\n    \n        Description\n    \n    \n        Component - ScoreTabComponent \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-score-tab\n            \n\n            \n                styleUrls\n                ./score-tab.component.css\n            \n\n\n\n            \n                templateUrl\n                ./score-tab.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scoreList\n                            \n                            \n                                    Public\n                                scoreService\n                            \n                            \n                                scoreSortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onScoreSort\n                            \n                            \n                                updateScoreTableView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scoreService: ScoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game/score-tab/score-tab.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scoreService\n                                                  \n                                                        \n                                                                        ScoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/score-tab/score-tab.component.ts:22\n                \n            \n\n\n            \n                \n                    Calls the updateScoreTableView method \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScoreSort\n                        \n                        \n                    \n                \n            \n            \n                \nonScoreSort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/score-tab/score-tab.component.ts:34\n                \n            \n\n\n            \n                \n                    Used to sort our Score Table by the user choice ascending or descending order. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateScoreTableView\n                        \n                        \n                    \n                \n            \n            \n                \nupdateScoreTableView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/score-tab/score-tab.component.ts:27\n                \n            \n\n\n            \n                \n                    Get the Score list data from scoreService \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/score-tab/score-tab.component.ts:13\n                            \n                        \n\n                \n                    \n                        Contains an array of our Scores \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scoreService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ScoreService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/score-tab/score-tab.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreSortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"asc\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/score-tab/score-tab.component.ts:15\n                            \n                        \n\n                \n                    \n                        Keeps the type of order \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ScoreService, Score} from 'src/app/services/score.service';\n\n/** Component - ScoreTabComponent */\n@Component({\n  selector: 'app-score-tab',\n  templateUrl: './score-tab.component.html',\n  styleUrls: ['./score-tab.component.css']\n})\n/** Used to show the Score Table at the right top corner to the end user.*/\nexport class ScoreTabComponent implements OnInit {\n  /** Contains an array of our Scores */\n  scoreList : Array = [];\n  /** Keeps the type of order */\n  scoreSortOrder : string = \"asc\";\n  /**\n   * Constructor\n   * @param scoreService {ScoreService}\n   */\n  constructor(public scoreService : ScoreService) { }\n  /** Calls the updateScoreTableView method */\n  ngOnInit(): void {\n    this.updateScoreTableView();\n  }\n\n  /** Get the Score list data from scoreService */\n  updateScoreTableView(){\n    this.scoreService.getScore().subscribe((data)=>{\n      this.scoreService.setScoreList(data);\n      console.log(data)\n    })\n  }\n /** Used to sort our Score Table by the user choice ascending or descending order. */\n  onScoreSort(){\n    console.log(this.scoreSortOrder)\n    if(this.scoreSortOrder === \"asc\"){\n      this.scoreList = this.scoreService.getScoreList()\n        .sort((a:any, b:any) => parseFloat(a.score) - parseFloat(b.score));\n      this.scoreSortOrder  = \"desc\";\n    } else if(this.scoreSortOrder === \"desc\"){\n      this.scoreList = this.scoreService.getScoreList()\n        .sort((a:any, b:any) => parseFloat(b.score) - parseFloat(a.score));\n      this.scoreSortOrder  = \"asc\";\n    }\n    this.scoreService.setScoreList(this.scoreList);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            Username\n            Score\n        \n    \n    \n        \n            {{item.username}}\n            {{item.score}}\n        \n    \n\n\n    \n\n    \n                \n                    ./score-tab.component.css\n                \n                #datatablee{\n    width:15%;\n    margin-right: 35px;\n    margin-top: 5px;\n    font-family: 'Barlow Semi Condensed', sans-serif;\n    position: absolute;\n    right: 0;\n\n}\n#datatablee th, #datatablee td{\n    color:#F7FE2E;\n    font-weight: bold;\n    background-color: #045FB4;\n}\n#thScore{\n    cursor: pointer;\n    background-color:red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Username            Score                                    {{item.username}}            {{item.score}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScoreTabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                User interface representing the data \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        role\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User email represents user email in our User table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id represents user id in our User table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User role represents user role in our User table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User username represents user username in our User table in the database \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { GameService } from \"./game.service\";\n\n/** User interface representing the data */\nexport interface User {\n    /** User id represents user id in our User table in the database */\n    id         : number;\n    /** User username represents user username in our User table in the database */\n    username   : string;\n    /** User email represents user email in our User table in the database */\n    email      : string;\n    /** User role represents user role in our User table in the database */\n    role       : string;\n    \n} \n\n@Injectable()\nexport class UserService {\n    // glavna URL adresa za nas API\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5101\"; // glavna URL adresa za nas API\n    /**This class attribute contains all the necessary user data.\n     * It is used to mark if user is logged in our application later.\n     * If user is not logged it contains default set of data.\n     */\n    private activeUser: User = { \n        // cuvamo aktivnog usera - potrebni su nam podaci\n        //kako bi znali koji je user za slanje Scora,\n        //kao i da li da ima dozvolu da pravi nove igre    \n        id         : -1,       \n        username   : \"\",\n        email      : \"\",\n        role       : \"\"\n       \n    };\n    /**\n     * constructor\n     * @param httpClient {HttpClient}\n     * @param gameService  {GameService} we need it to mark in case user has loggedout while playing the game to set it to be inactive.\n     */\n    constructor(private httpClient: HttpClient, private gameService: GameService) {} // preko httpclijenta kontaktiramo server\n\n    /**\n     * Sends the data to login our user to the application\n     * @param usr {string} Username that user has entered in the input field in our Login component.\n     * @param pwd {string} Password that user has entered in the input field in our Login component.\n     * @returns Observable. If code is 200 it will return User object data.\n     */\n    public loginUser(usr:string, pwd:string) : Observable   {\n        let userObj = {\n            username:usr,\n            password:pwd\n        }\n        return this.httpClient\n        .post(`${this.apiURL}/login`, userObj);\n    }\n\n    /**\n     * Method that contacts our microservice end API to create a new user.\n     * @param usr {string} Username that user has entered in the input field in our Login component.\n     * @param pwd {string} Password that user has entered in the input field in our Login component.\n     * @param eml {string} Email that user has entered in the input field in our Login component.\n     * @param role {string} Within the application hard coded value is to be 'user' type.\n     * @returns Observable\n     */\n    public createNewUser(usr: string, pwd: string, eml: string, role: string ): Observable  {\n        let userObj = {\n            username: usr,\n            password: pwd,           \n            email   : eml,\n            role    : role\n        }\n        return this.httpClient.post(`${this.apiURL}/create`, userObj)\n    }\n    /**\n     * Sets default values for out activeUser atribut.\n     * sets gameActive attribute to false that can be found in the Game Service.\n     */\n    public logoutUser(){\n        this.activeUser = {           \n            id         : -1,       \n            username   : \"\",\n            email      : \"\",\n            role       : \"\"\n           \n        };\n        this.gameService.gameActive = false;\n    }\n    /**\n     * @returns activeUser attribute.\n     */\n    public getLoggedinUser(){\n        return this.activeUser; // vraca objekat ulogovanog user-a\n    }\n\n    /**\n     * Set method\n     * @param dataUser {User} new value that will be added to our activeUser attribute.\n     */\n    public setActiveUser(dataUser: User): void{\n        this.activeUser = dataUser; // postavlja aktivnog user-a\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserActionsBtnsComponent.html":{"url":"components/UserActionsBtnsComponent.html","title":"component - UserActionsBtnsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserActionsBtnsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game/user-actions-btns/user-actions-btns.component.ts\n\n\n    \n        Description\n    \n    \n        Component - UserActionsBtnsComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-actions-btns\n            \n\n            \n                styleUrls\n                ./user-actions-btns.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-actions-btns.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNewGame\n                            \n                            \n                                onUserLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, gameService: GameService, gameComponent: GameComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameComponent\n                                                  \n                                                        \n                                                                        GameComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:33\n                \n            \n\n\n            \n                \n                    Empty ngOnInit \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNewGame\n                        \n                        \n                    \n                \n            \n            \n                \nonNewGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:49\n                \n            \n\n\n            \n                \n                    New game will be started (via gameComponent) and game will be set to being active (gameService - attribute: gameActive ).\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUserLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonUserLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:40\n                \n            \n\n\n            \n                \n                    When user choose the logout option we will use method logoutUser from the UserService service class to log the user out.\nAfter that user will be reddirected to our login page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GameService } from 'src/app/services/game.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { GameComponent } from '../game.component';\n\n/** Component - UserActionsBtnsComponent*/\n@Component({\n  selector: 'app-user-actions-btns',\n  templateUrl: './user-actions-btns.component.html',\n  styleUrls: ['./user-actions-btns.component.css']\n})\n/**\n * Contains action buttons - mainly the navigation for the user.\n */\nexport class UserActionsBtnsComponent implements OnInit {\n  /**\n   * Constructor\n   * @param userService {UserService}\n   * @param router {Router}\n   * @param gameService {GameService}\n   * @param gameComponent {GameComponent}\n   */\n  constructor(\n    public userService : UserService,\n    private router:Router,\n    private gameService: GameService,\n    private gameComponent : GameComponent\n  ) {\n    \n  }\n  /** Empty ngOnInit */\n  ngOnInit(): void {\n  }\n\n  /**\n   * When user choose the logout option we will use method logoutUser from the UserService service class to log the user out.\n   * After that user will be reddirected to our login page.\n   */\n  onUserLogout():void{\n    this.userService.logoutUser();\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/login\"]));\n  }\n\n  /**\n   * New game will be started (via gameComponent) and game will be set to being active (gameService - attribute: gameActive ).\n   */\n  onNewGame(){\n    this.gameComponent.startTheGame();\n    this.gameService.gameActive = true;\n  }\n}\n\n    \n\n    \n        \n    Logout\n    \n            Napravi Novu Igru\n    \n\n   \n        Izmeni Igre\n    \n\n   \n        \n        \n        Nova Igra\n          \n\n\n\n\n    \n    \n    \n    Napravi Novu Igru\n    \n    \n    \n    \n        \n        \n            1.\n            \n                \n                \n            \n\n            2.\n            \n                \n                \n            \n\n            3.\n            \n                \n                \n            \n\n            4.\n            \n                \n                \n            \n\n            5.\n            \n                \n                \n            \n\n            6.\n            \n                \n                \n            \n\n            7.\n            \n                \n                \n            \n\n            8.\n            \n                \n                \n            \n\n            9.\n            \n                \n                \n            \n\n            10.\n            \n                \n                \n            \n        \n        Morate popuniti sva polja!\n        \n            SUBMIT\n        \n        \n            CLOSE\n        \n    \n    \n    \n    \n    \n    -->\n\n    \n\n    \n                \n                    ./user-actions-btns.component.css\n                \n                #ifadmin button{\n    margin-left: 35px;\n    margin-top: 5px;\n    display: block;\n    width: 180px;\n}\n\n#createGameInputElements h5{\n    margin-top:8px;\n}\n\n.a-btn-bgcolor{\n    background-color:#0A1B2A;\n}\n.modal{\n    color:black;\n}\n\nform button {\n    margin-top:10px;\n    margin-right:10px;\n}\n#ifadmin{\n    position: absolute;\n}\na{\n    text-decoration:none; \n    display: block;\n    width: 180px;\n}\n.edit-games-a{\n    opacity: 0.7;\n    color:white;\n}\n.edit-games-a:hover{\n    opacity: 1;\n    color:black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Logout                Napravi Novu Igru               Izmeni Igre                               Nova Igra                          Napravi Novu Igru                                            1.                                                                    2.                                                                    3.                                                                    4.                                                                    5.                                                                    6.                                                                    7.                                                                    8.                                                                    9.                                                                    10.                                                                        Morate popuniti sva polja!                    SUBMIT                            CLOSE                                -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserActionsBtnsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeUser\n                            \n                            \n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createNewUser\n                            \n                            \n                                    Public\n                                getLoggedinUser\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Public\n                                logoutUser\n                            \n                            \n                                    Public\n                                setActiveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:37\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                we need it to mark in case user has loggedout while playing the game to set it to be inactive.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createNewUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewUser(usr: string, pwd: string, eml: string, role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:68\n                \n            \n\n\n            \n                \n                    Method that contacts our microservice end API to create a new user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    usr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username that user has entered in the input field in our Login component.\n\n                                    \n                                \n                                \n                                    pwd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password that user has entered in the input field in our Login component.\n\n                                    \n                                \n                                \n                                    eml\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Email that user has entered in the input field in our Login component.\n\n                                    \n                                \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Within the application hard coded value is to be 'user' type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLoggedinUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggedinUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        activeUser attribute.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loginUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(usr: string, pwd: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:51\n                \n            \n\n\n            \n                \n                    Sends the data to login our user to the application\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    usr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username that user has entered in the input field in our Login component.\n\n                                    \n                                \n                                \n                                    pwd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password that user has entered in the input field in our Login component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable. If code is 200 it will return User object data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:81\n                \n            \n\n\n            \n                \n                    Sets default values for out activeUser atribut.\nsets gameActive attribute to false that can be found in the Game Service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setActiveUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveUser(dataUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:102\n                \n            \n\n\n            \n                \n                    Set method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dataUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new value that will be added to our activeUser attribute.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Default value : { \n        // cuvamo aktivnog usera - potrebni su nam podaci\n        //kako bi znali koji je user za slanje Scora,\n        //kao i da li da ima dozvolu da pravi nove igre    \n        id         : -1,       \n        username   : \"\",\n        email      : \"\",\n        role       : \"\"\n       \n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:28\n                            \n                        \n\n                \n                    \n                        This class attribute contains all the necessary user data.\nIt is used to mark if user is logged in our application later.\nIf user is not logged it contains default set of data.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://localhost:5101\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:23\n                            \n                        \n\n                \n                    \n                        URL to our microservice api. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { GameService } from \"./game.service\";\n\n/** User interface representing the data */\nexport interface User {\n    /** User id represents user id in our User table in the database */\n    id         : number;\n    /** User username represents user username in our User table in the database */\n    username   : string;\n    /** User email represents user email in our User table in the database */\n    email      : string;\n    /** User role represents user role in our User table in the database */\n    role       : string;\n    \n} \n\n@Injectable()\nexport class UserService {\n    // glavna URL adresa za nas API\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5101\"; // glavna URL adresa za nas API\n    /**This class attribute contains all the necessary user data.\n     * It is used to mark if user is logged in our application later.\n     * If user is not logged it contains default set of data.\n     */\n    private activeUser: User = { \n        // cuvamo aktivnog usera - potrebni su nam podaci\n        //kako bi znali koji je user za slanje Scora,\n        //kao i da li da ima dozvolu da pravi nove igre    \n        id         : -1,       \n        username   : \"\",\n        email      : \"\",\n        role       : \"\"\n       \n    };\n    /**\n     * constructor\n     * @param httpClient {HttpClient}\n     * @param gameService  {GameService} we need it to mark in case user has loggedout while playing the game to set it to be inactive.\n     */\n    constructor(private httpClient: HttpClient, private gameService: GameService) {} // preko httpclijenta kontaktiramo server\n\n    /**\n     * Sends the data to login our user to the application\n     * @param usr {string} Username that user has entered in the input field in our Login component.\n     * @param pwd {string} Password that user has entered in the input field in our Login component.\n     * @returns Observable. If code is 200 it will return User object data.\n     */\n    public loginUser(usr:string, pwd:string) : Observable   {\n        let userObj = {\n            username:usr,\n            password:pwd\n        }\n        return this.httpClient\n        .post(`${this.apiURL}/login`, userObj);\n    }\n\n    /**\n     * Method that contacts our microservice end API to create a new user.\n     * @param usr {string} Username that user has entered in the input field in our Login component.\n     * @param pwd {string} Password that user has entered in the input field in our Login component.\n     * @param eml {string} Email that user has entered in the input field in our Login component.\n     * @param role {string} Within the application hard coded value is to be 'user' type.\n     * @returns Observable\n     */\n    public createNewUser(usr: string, pwd: string, eml: string, role: string ): Observable  {\n        let userObj = {\n            username: usr,\n            password: pwd,           \n            email   : eml,\n            role    : role\n        }\n        return this.httpClient.post(`${this.apiURL}/create`, userObj)\n    }\n    /**\n     * Sets default values for out activeUser atribut.\n     * sets gameActive attribute to false that can be found in the Game Service.\n     */\n    public logoutUser(){\n        this.activeUser = {           \n            id         : -1,       \n            username   : \"\",\n            email      : \"\",\n            role       : \"\"\n           \n        };\n        this.gameService.gameActive = false;\n    }\n    /**\n     * @returns activeUser attribute.\n     */\n    public getLoggedinUser(){\n        return this.activeUser; // vraca objekat ulogovanog user-a\n    }\n\n    /**\n     * Set method\n     * @param dataUser {User} new value that will be added to our activeUser attribute.\n     */\n    public setActiveUser(dataUser: User): void{\n        this.activeUser = dataUser; // postavlja aktivnog user-a\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/game-tab-view/game-tab-view.component.ts\n            \n            component\n            GameTabViewComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/components/game-tab-view/game-tab-view.component.ts\n            \n            variable\n            initializeUpdateGameModalVar\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/game-tab-view/game-tab-view.component.ts\n            \n            variable\n            sendMessageUserModal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/game-tab-view/game-tab-view.component.ts\n            \n            variable\n            updateGameModalShow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/game/game.component.ts\n            \n            component\n            GameComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/components/game/game.component.ts\n            \n            variable\n            sendMessageUserModal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/game/score-tab/score-tab.component.ts\n            \n            component\n            ScoreTabComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/components/game/user-actions-btns/user-actions-btns.component.ts\n            \n            component\n            UserActionsBtnsComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/components/index/index.component.ts\n            \n            component\n            IndexComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            variable\n            sendMessageUserModal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/game.service.ts\n            \n            injectable\n            GameService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/services/game.service.ts\n            \n            interface\n            Game\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/score.service.ts\n            \n            injectable\n            ScoreService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/score.service.ts\n            \n            interface\n            Score\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            interface\n            User\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.5\n        \n            @angular/common : ~11.0.5\n        \n            @angular/compiler : ~11.0.5\n        \n            @angular/core : ~11.0.5\n        \n            @angular/forms : ~11.0.5\n        \n            @angular/platform-browser : ~11.0.5\n        \n            @angular/platform-browser-dynamic : ~11.0.5\n        \n            @angular/router : ~11.0.5\n        \n            bcryptjs : ^2.4.3\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGameApp\nThis project was generated with Angular CLI version 11.0.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nGameTabViewComponent\n\nGameTabViewComponent\n\nAppModule -->\n\nGameTabViewComponent->AppModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nAppModule -->\n\nIndexComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nScoreTabComponent\n\nScoreTabComponent\n\nAppModule -->\n\nScoreTabComponent->AppModule\n\n\n\n\n\nUserActionsBtnsComponent\n\nUserActionsBtnsComponent\n\nAppModule -->\n\nUserActionsBtnsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGameService\n\nGameService\n\nAppModule -->\n\nGameService->AppModule\n\n\n\n\n\nScoreService\n\nScoreService\n\nAppModule -->\n\nScoreService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            initializeUpdateGameModalVar   (src/.../game-tab-view.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            sendMessageUserModal   (src/.../game-tab-view.component.ts)\n                        \n                        \n                            sendMessageUserModal   (src/.../game.component.ts)\n                        \n                        \n                            sendMessageUserModal   (src/.../login.component.ts)\n                        \n                        \n                            updateGameModalShow   (src/.../game-tab-view.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n                \n                    \n                        context finds all tests. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n                \n                    \n                        Default require const \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n                \n                    \n                        default value set as production enviroment \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        default production enviroment set to false \n\n                    \n                \n\n            \n        \n\n    src/app/components/game-tab-view/game-tab-view.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initializeUpdateGameModalVar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS function defined in the index.html file. Function that will initialize modal reference when called. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessageUserModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS function defined in the index.html file. Function that will show the modal to the end user with the text as input. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGameModalShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS function defined in the index.html file. Function that will show the modal to the end user. \n\n                    \n                \n\n            \n        \n\n    src/app/components/game/game.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessageUserModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS function defined in the index.html file. Function that will show the modal to the end user with the text as input. \n\n                    \n                \n\n            \n        \n\n    src/app/components/login/login.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessageUserModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS function defined in the index.html file. Function that will show the modal to the end user with the text as input. \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
