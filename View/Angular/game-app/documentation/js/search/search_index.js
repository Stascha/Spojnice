var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.17,1,0.712]],["body/components/AppComponent.html",[0,0.331,1,1.329,2,1.691,3,0.546,4,0.459,5,1.55,6,1.55,7,1.55,8,1.55,9,0.378,10,3.069,11,0.737,12,1.55,13,2.313,14,1.854,15,4.637,16,1.903,17,5.018,18,1.903,19,4.637,20,0.546,21,1.036,22,5.372,23,0.979,24,1.332,25,4.637,26,3.769,27,2.146,28,0.546,29,0.047,30,0.959,31,1.084,32,0.959,33,0.848,34,3.198,35,0.546,36,0.459,37,3.776,38,3.069,39,0.546,40,0.546,41,1.223,42,1.903,43,1.903,44,1.55,45,2.148,46,1.55,47,1.036,48,1.55,49,0.843,50,1.55,51,0.843,52,0.959,53,1.55,54,0.843,55,1.55,56,0.843,57,1.55,58,0.959,59,0.959,60,1.55,61,0.959,62,0.959,63,1.084,64,1.55,65,1.55,66,1.55,67,0.03,68,0.037,69,0.03]],["title/modules/AppModule.html",[70,1.675,71,1.675]],["body/modules/AppModule.html",[1,1.435,3,0.494,4,0.416,9,0.342,14,1.108,29,0.048,35,0.827,36,0.416,39,0.494,40,0.494,41,1.108,49,1.211,51,1.191,52,1.107,54,1.191,56,1.191,58,1.376,61,1.354,63,1.252,67,0.028,68,0.035,69,0.028,70,2.044,71,3.491,72,1.792,73,2.044,74,3.899,75,3.899,76,3.899,77,2.358,78,2.78,79,2.78,80,2.78,81,2.78,82,2.78,83,2.795,84,1.041,85,1.945,86,1.532,87,3.543,88,2.78,89,1.792,90,3.42,91,3.543,92,4.358,93,2.78,94,2.358,95,3.543,96,3.42,97,3.42,98,2.78,99,2.78,100,2.78,101,4.358,102,2.78,103,3.42,104,4.358,105,1.404,106,3.42,107,3.42,108,3.42,109,2.044,110,2.78,111,3.42,112,2.044,113,3.42,114,2.78,115,1.792,116,2.78]],["title/modules/AppRoutingModule.html",[70,1.675,83,1.469]],["body/modules/AppRoutingModule.html",[0,0.325,3,0.589,4,0.495,9,0.408,29,0.048,33,0.82,35,0.805,36,0.495,39,0.589,40,0.589,49,1.084,51,1.084,52,1.232,54,1.084,56,1.084,67,0.033,68,0.039,69,0.033,72,2.134,77,2.808,83,2.543,91,3.31,95,3.945,98,3.31,99,3.31,100,3.31,114,3.31,115,2.134,116,3.31,117,4.071,118,4.071,119,3.098,120,4.853,121,1.885,122,1.885,123,5.368,124,4.071,125,2.808,126,1.671,127,1.485,128,3.31,129,4.071]],["title/interfaces/Game.html",[33,0.474,130,0.805]],["body/interfaces/Game.html",[3,0.416,4,0.35,9,0.288,11,0.561,20,0.416,21,0.868,23,0.561,28,0.637,29,0.048,30,1.32,32,0.73,33,0.983,35,0.637,36,0.35,39,0.562,40,0.416,47,1.181,67,0.023,68,0.031,69,0.023,84,0.759,105,1.18,127,1.853,130,1.356,131,1.718,132,1.983,133,3.161,134,1.712,135,1.954,136,2.353,137,3.582,138,3.161,139,2.48,140,1.798,141,1.266,142,2.283,143,2.53,144,1.18,145,1.718,146,1.18,147,2.406,148,2.324,149,2.337,150,3.161,151,0.73,152,3.039,153,1.938,154,0.931,155,3.161,156,2.682,157,1.518,158,1.331,159,1.18,160,1.596,161,1.853,162,1.853,163,1.331,164,2.337,165,1.331,166,1.331,167,0.987,168,1.18,169,1.102,170,1.718,171,1.718,172,1.718,173,1.18,174,1.507,175,1.718,176,1.718,177,1.596,178,1.8,179,2.324,180,2.682,181,2.04,182,2.038,183,1.102,184,1.809,185,2.337,186,2.337,187,2.337,188,2.337,189,3.161,190,3.161,191,2.337,192,2.337,193,1.853,194,2.04,195,2.337,196,1.718,197,2.337,198,2.337,199,1.983,200,1.048,201,2.337,202,1.983,203,1.983,204,1.18,205,1.507,206,2.185,207,4.009,208,2.337,209,2.337,210,2.337,211,0.931,212,1.18,213,1.331,214,1.983,215,1.718,216,1.331,217,1.718,218,2.633,219,1.18,220,2.337,221,3.161,222,1.507,223,2.337,224,2.337,225,2.337,226,1.18,227,1.718,228,2.337,229,2.337,230,2.337,231,2.337,232,2.337,233,2.337,234,2.337,235,2.337,236,2.682,237,1.331,238,2.337,239,2.337]],["title/components/GameComponent.html",[0,0.17,49,0.626]],["body/components/GameComponent.html",[0,0.193,1,0.281,2,0.682,3,0.16,4,0.135,5,0.455,6,0.455,7,0.455,8,0.455,9,0.187,11,0.557,12,0.455,13,1.653,14,1.388,16,0.768,18,0.768,20,0.16,21,0.418,23,0.216,24,1.4,27,0.866,28,0.66,29,0.048,30,1.023,31,1.111,32,0.982,33,0.622,35,0.5,36,0.135,38,1.521,39,0.16,40,0.16,41,0.359,42,1.42,43,1.874,44,0.455,45,1.511,46,0.455,47,0.772,48,0.455,49,0.772,50,0.455,51,0.248,52,0.475,53,0.455,54,0.248,55,0.455,56,0.248,57,0.455,58,1.058,59,0.878,60,0.455,61,0.281,62,0.724,63,0.537,64,0.768,65,0.455,66,0.455,67,0.009,68,0.015,69,0.009,84,0.918,85,1.469,86,1.231,109,0.662,110,0.901,121,0.513,122,0.513,126,0.455,134,0.924,140,1.261,146,1.588,151,0.617,153,1.42,154,1.192,157,0.916,159,1.653,161,1.342,162,1.519,167,1.323,168,0.455,169,0.864,177,0.997,180,1.29,181,1.476,182,0.581,183,0.9,184,0.455,193,1.411,200,1.794,211,1.764,212,0.455,214,2.385,215,1.118,216,1.124,218,1.118,240,0.764,241,0.866,242,1.124,243,2.429,244,1.871,245,2.429,246,3.188,247,3.459,248,4.389,249,4.028,250,2.429,251,2.429,252,3.682,253,0.606,254,2.429,255,2.853,256,2.429,257,1.704,258,1.871,259,1.871,260,1.871,261,2.853,262,0.662,263,2.2,264,1.871,265,1.871,266,1.521,267,2.199,268,1.118,269,1.521,270,3.246,271,2.199,272,1.705,273,2.539,274,1.521,275,0.924,276,0.924,277,2.429,278,1.451,279,2.199,280,3.188,281,2.778,282,1.974,283,1.871,284,1.108,285,1.871,286,1.813,287,1.671,288,1.118,289,1.871,290,3.869,291,1.871,292,1.057,293,1.108,294,1.865,295,2.315,296,2.989,297,1.871,298,1.521,299,1.871,300,2.772,301,1.813,302,2.075,303,1.871,304,1.108,305,2.668,306,2.515,307,2.111,308,1.495,309,1.871,310,3.386,311,1.108,312,1.108,313,2.429,314,1.108,315,3.682,316,1.871,317,2.853,318,1.871,319,3.459,320,2.853,321,2.429,322,4.873,323,2.183,324,1.871,325,2.429,326,5.038,327,2.429,328,1.675,329,2.32,330,1.476,331,1.871,332,1.871,333,1.871,334,3.771,335,2.853,336,1.871,337,1.871,338,1.871,339,1.108,340,1.108,341,3.869,342,1.929,343,2.853,344,4.639,345,3.682,346,3.459,347,1.704,348,1.705,349,1.871,350,3.459,351,1.871,352,0.866,353,1.871,354,1.871,355,1.871,356,3.459,357,2.853,358,1.108,359,1.495,360,1.108,361,1.671,362,2.853,363,2.853,364,1.871,365,3.459,366,1.871,367,1.871,368,2.853,369,1.521,370,1.871,371,1.108,372,0.981,373,1.118,374,1.521,375,1.871,376,1.968,377,1.871,378,1.871,379,3.091,380,2.2,381,2.32,382,1.521,383,1.521,384,1.871,385,1.871,386,1.521,387,1.871,388,2.199,389,1.871,390,1.29,391,1.871,392,1.871,393,1.871,394,1.871,395,1.521,396,2.853,397,1.108,398,1.968,399,1.521,400,1.871,401,1.871,402,1.871,403,1.871,404,1.108,405,2.853,406,1.871,407,1.871,408,2.32,409,2.429,410,2.592,411,1.871,412,1.871,413,1.108,414,1.871,415,1.871,416,1.871,417,1.521,418,1.108,419,1.871,420,1.871,421,2.853,422,1.871,423,1.521,424,1.108,425,2.429,426,1.871,427,1.108,428,1.871,429,1.321,430,1.675,431,1.521,432,1.521,433,1.974,434,2.592,435,1.108,436,1.871,437,1.871,438,1.871,439,1.871,440,1.871,441,1.871,442,1.871,443,2.429,444,2.429,445,1.108,446,1.521,447,1.871,448,1.871,449,1.871,450,1.871,451,1.871,452,1.871,453,1.108,454,0.581,455,0.901,456,0.662,457,0.581,458,0.581,459,0.581,460,0.901,461,1.118,462,2.111,463,0.662,464,0.662,465,0.581,466,0.901,467,0.764,468,1.108,469,0.764,470,1.108,471,0.901,472,1.108,473,1.108,474,0.764,475,2.592,476,0.901,477,0.901,478,1.108,479,1.108,480,0.901,481,1.108,482,1.108,483,0.901,484,0.901,485,1.521,486,1.108,487,0.662,488,0.662,489,0.662,490,0.764,491,1.108,492,1.118,493,1.108,494,1.108,495,2.429,496,1.108,497,1.108,498,1.108,499,1.871,500,1.871,501,1.871,502,1.108,503,1.108,504,1.108,505,1.108,506,1.495,507,1.108,508,1.108,509,1.108,510,1.871,511,1.974,512,2.853,513,2.853,514,1.108,515,1.871,516,2.429,517,1.871,518,1.108,519,1.108,520,1.108,521,2.429,522,1.108,523,1.108,524,1.871,525,1.108,526,2.853,527,1.871,528,1.108,529,1.108,530,1.521,531,1.108,532,0.901,533,1.108,534,1.108,535,1.108,536,0.901,537,0.901,538,1.108,539,1.108,540,1.871,541,1.871,542,1.108,543,1.108,544,1.108,545,1.108,546,1.871,547,1.108,548,0.901,549,1.108,550,1.108,551,1.108,552,1.108,553,1.108,554,1.108,555,1.871,556,1.871,557,1.108,558,1.108,559,1.108,560,1.108,561,1.108,562,0.901,563,1.108,564,1.108,565,2.429,566,1.108,567,1.108,568,1.108,569,1.108,570,0.901,571,1.108,572,1.108,573,1.108,574,0.901,575,1.108,576,1.108,577,1.871,578,1.108,579,2.429,580,1.108,581,1.108,582,1.108,583,1.108,584,0.901,585,1.871,586,1.108,587,1.108,588,1.108,589,1.108,590,1.108,591,1.871,592,0.455,593,0.901,594,1.108,595,1.108,596,1.108,597,1.108,598,1.108,599,1.108,600,1.108,601,1.108,602,2.429,603,1.108,604,0.901,605,1.108,606,1.108,607,2.429,608,1.108,609,1.108,610,0.901,611,0.764,612,0.662,613,1.273,614,1.124,615,1.108,616,1.108,617,1.871,618,1.108,619,2.429,620,1.108,621,1.108,622,1.108,623,1.108,624,1.108,625,1.108,626,1.108,627,1.108,628,1.108,629,0.901,630,1.108,631,1.108,632,1.871,633,1.108,634,1.108,635,0.901,636,1.108,637,1.871,638,1.871,639,1.871,640,2.853,641,1.108,642,1.871,643,1.108,644,1.871,645,1.108,646,1.108,647,1.108,648,0.901,649,1.108,650,1.871,651,0.901,652,1.108,653,1.108,654,1.108,655,1.108,656,1.108,657,1.108,658,1.108,659,1.108,660,1.108,661,1.871,662,1.871,663,1.521,664,1.521,665,1.521,666,1.521,667,1.871,668,1.521,669,1.871,670,1.521,671,1.871,672,1.871,673,1.871,674,1.108,675,2.315,676,2.429,677,1.905,678,0.901,679,2.429,680,2.429,681,1.871,682,1.108,683,1.108,684,3.188,685,1.108,686,0.764,687,1.871,688,1.968,689,1.108,690,1.968,691,2.811,692,1.108,693,1.108,694,1.704,695,1.983,696,1.871,697,1.108,698,2.429,699,2.429,700,2.429,701,1.108,702,2.592,703,0.901,704,1.495,705,1.675,706,1.108,707,1.675,708,1.974,709,1.521,710,1.521,711,1.108,712,1.108,713,2.199,714,1.108,715,1.108,716,1.108,717,1.108,718,0.764,719,1.108,720,1.705,721,1.108,722,2.539,723,2.811,724,1.108,725,1.108,726,2.853,727,2.067,728,1.451,729,1.108,730,1.521,731,0.901,732,1.108,733,1.108,734,1.108,735,1.108,736,1.108,737,1.108,738,1.108,739,1.108,740,1.108,741,1.108,742,0.764,743,1.871,744,1.871,745,1.108,746,1.108,747,0.901,748,0.901,749,1.108,750,0.764,751,0.901,752,1.108,753,1.108,754,1.108,755,1.108]],["title/injectables/GameService.html",[84,0.547,141,0.805]],["body/injectables/GameService.html",[3,0.351,4,0.296,9,0.243,11,0.906,20,0.351,21,0.773,23,0.787,24,1.522,28,0.733,29,0.048,30,1.115,31,1.158,32,1.178,33,0.973,35,0.583,36,0.296,39,0.5,40,0.351,47,1.133,67,0.02,68,0.028,69,0.02,84,0.857,105,0.998,127,1.47,130,1.261,132,1.677,133,1.976,134,1.305,135,1.692,136,1.866,137,2.814,138,1.976,139,2.39,140,1.692,141,1.261,142,2.348,143,2.59,144,0.998,145,1.453,146,0.998,147,2.516,148,2.624,149,2.814,150,3.57,151,1.023,152,3.423,153,2.119,154,1.121,155,3.57,156,3.029,157,1.625,158,1.866,159,1.421,160,1.654,161,1.951,162,1.932,163,1.866,164,2.814,165,1.125,166,1.125,167,0.879,168,0.998,169,1.037,170,2.068,171,2.068,172,2.068,173,0.998,174,1.274,175,1.453,176,1.453,177,1.654,178,2.033,179,2.624,180,3.029,181,2.233,182,2.302,183,1.195,184,1.98,185,2.814,186,2.814,187,3.57,188,1.976,189,2.814,190,2.814,191,1.976,192,1.976,193,1.759,194,1.866,195,1.976,196,1.453,197,1.976,198,1.976,199,1.677,200,0.886,201,1.976,202,1.677,203,1.677,204,1.421,205,1.814,206,2.348,207,4.035,208,2.814,209,2.814,210,1.976,211,0.787,212,0.998,213,1.125,214,1.677,215,1.453,216,1.125,217,2.068,218,2.774,219,1.421,220,2.814,221,2.814,222,1.814,223,3.57,224,2.814,225,2.814,226,1.421,227,2.068,228,2.814,229,2.814,230,1.976,231,2.814,232,2.814,233,2.814,234,2.814,235,1.976,236,3.029,237,1.602,238,3.57,239,1.976,253,1.121,275,1.503,276,1.503,292,0.698,756,1.453,757,2.814,758,3.461,759,3.461,760,3.461,761,1.677,762,3.461,763,2.431,764,2.431,765,2.431,766,2.431,767,2.431,768,2.431,769,2.431,770,2.431,771,2.431]],["title/components/GameTabViewComponent.html",[0,0.17,51,0.626]],["body/components/GameTabViewComponent.html",[0,0.22,1,0.36,2,0.836,3,0.205,4,0.172,5,0.582,6,0.582,7,0.582,8,0.582,9,0.142,11,0.564,12,0.582,13,1.813,14,1.43,16,0.941,18,0.941,20,0.205,21,0.512,23,0.447,24,1.474,27,1.061,28,0.638,29,0.048,30,0.582,31,1.12,32,0.99,33,0.799,35,0.48,36,0.172,39,0.205,40,0.205,41,0.459,42,0.941,43,0.941,44,0.582,45,1.362,46,0.582,47,0.917,48,0.582,49,0.316,50,0.582,51,0.917,52,1.429,53,0.582,54,0.316,55,0.582,56,0.316,57,0.582,58,0.36,59,0.36,60,0.582,61,0.36,62,0.36,63,0.407,64,0.582,65,0.582,66,0.582,67,0.011,68,0.018,69,0.011,84,0.952,86,1.228,115,2.709,121,0.656,122,1.337,126,0.941,128,1.864,134,0.743,135,1.692,140,1.329,146,2.183,151,1.201,152,1.581,153,1.755,154,1.532,157,1.268,159,1.601,167,1.337,169,0.814,183,1.103,193,1.422,200,1.753,204,0.582,205,0.742,211,1.469,212,1.185,213,1.061,222,1.739,241,1.061,242,1.337,253,0.743,257,1.536,262,0.847,263,2.639,268,1.37,270,2.69,271,0.977,272,2.331,273,1.992,275,0.935,276,0.935,282,1.864,286,0.742,287,0.742,292,1.303,294,2.148,295,2.393,296,3.015,300,2.331,301,2.831,302,1.687,305,2.289,306,2.356,307,2.479,308,1.202,310,1.864,323,1.202,328,1.581,329,1.152,330,1.687,334,2.698,342,1.513,347,1.536,348,2.555,359,1.91,361,2.044,369,1.152,372,1.739,373,0.847,376,2.69,379,0.977,380,1.983,383,1.864,388,2.832,398,3.445,399,2.698,408,4.23,417,1.864,429,2.1,430,2.832,431,3.17,454,0.742,456,0.847,457,1.513,458,1.513,459,1.513,462,1.513,463,0.847,464,1.726,465,0.742,467,0.977,469,0.977,487,0.847,488,0.847,489,0.847,490,0.977,506,1.513,537,1.152,548,1.864,574,1.152,592,0.582,593,1.152,611,1.581,612,2.178,613,0.742,614,0.656,675,1.901,677,0.847,688,1.581,690,0.977,694,1.337,695,0.656,704,1.513,705,1.581,707,1.581,708,1.152,709,1.152,710,1.152,720,0.847,728,0.847,730,1.864,731,1.152,750,0.977,757,1.864,772,3.565,773,0.977,774,2.888,775,2.293,776,2.888,777,3.645,778,2.888,779,2.888,780,2.888,781,2.888,782,2.888,783,3.319,784,2.888,785,3.319,786,3.645,787,3.319,788,3.319,789,2.293,790,2.888,791,2.293,792,2.888,793,2.293,794,3.319,795,1.581,796,1.581,797,1.581,798,1.417,799,5.131,800,3.17,801,4.06,802,4.537,803,2.698,804,1.417,805,1.417,806,2.293,807,3.688,808,3.319,809,2.711,810,1.417,811,3.319,812,1.417,813,1.417,814,1.417,815,1.417,816,1.417,817,2.293,818,1.864,819,2.289,820,1.417,821,2.293,822,2.293,823,1.417,824,3.319,825,2.293,826,2.293,827,2.293,828,2.293,829,2.293,830,2.293,831,2.293,832,2.293,833,1.417,834,1.417,835,3.645,836,2.293,837,3.319,838,2.293,839,1.417,840,1.864,841,2.293,842,1.417,843,1.417,844,2.293,845,2.293,846,3.772,847,1.417,848,2.293,849,1.864,850,1.37,851,1.417,852,2.293,853,4.106,854,1.417,855,2.293,856,1.417,857,1.864,858,2.293,859,2.293,860,1.417,861,1.864,862,1.417,863,2.293,864,2.293,865,2.293,866,1.152,867,1.581,868,0.977,869,1.417,870,1.417,871,1.417,872,1.417,873,1.152,874,1.417,875,0.977,876,3.319,877,1.417,878,1.417,879,1.417,880,2.888,881,1.417,882,2.293,883,2.293,884,1.417,885,2.698,886,1.152,887,2.293,888,3.319,889,1.417,890,1.417,891,3.319,892,1.417,893,2.293,894,3.9,895,2.293,896,3.319,897,2.293,898,1.417,899,2.888,900,2.293,901,1.417,902,3.645,903,2.293,904,1.152,905,1.417,906,1.417,907,1.417,908,1.417,909,1.417,910,1.417,911,1.417,912,1.417,913,1.417,914,1.417,915,2.888,916,2.293,917,1.417,918,2.888,919,1.417,920,2.888,921,1.417,922,1.417,923,1.417,924,1.417,925,1.417,926,1.417,927,1.417,928,1.417,929,1.417,930,3.319,931,1.417,932,3.475,933,2.293,934,1.864,935,2.293,936,2.293,937,1.864,938,1.864,939,2.293,940,2.293,941,1.864,942,2.293,943,2.293,944,2.293,945,2.293,946,2.293,947,1.864,948,1.152,949,2.293,950,1.152,951,1.417,952,1.726,953,1.152,954,1.152,955,1.417,956,1.417,957,1.152,958,1.417,959,1.417,960,1.581,961,0.977,962,1.726,963,1.152,964,1.152,965,1.864,966,1.417,967,1.417,968,2.293,969,1.417,970,1.417,971,1.152,972,1.417]],["title/components/IndexComponent.html",[0,0.17,54,0.626]],["body/components/IndexComponent.html",[0,0.31,1,0.818,2,1.529,3,0.466,4,0.392,5,1.323,6,1.323,7,1.323,8,1.323,9,0.323,11,0.629,12,1.323,13,2.249,14,1.775,16,1.722,18,1.722,20,0.674,23,0.819,24,1.205,27,1.941,28,0.466,29,0.047,33,0.545,35,0.606,36,0.392,39,0.466,40,0.466,41,1.044,42,1.722,43,1.722,44,1.323,45,2.027,46,1.323,47,1.042,48,1.323,49,0.72,50,1.323,51,0.72,52,0.818,53,1.323,54,1.173,55,1.323,56,0.72,57,1.323,58,0.818,59,0.818,60,1.323,61,0.818,62,0.818,63,0.925,64,1.323,65,1.323,66,1.323,67,0.026,68,0.034,69,0.026,84,1.079,151,0.818,154,1.51,158,1.941,160,1.323,169,0.72,181,1.491,183,0.72,200,1.7,211,1.044,241,1.941,242,2.158,253,1.358,257,2.286,271,2.222,275,1.044,276,1.044,292,1.205,294,1.941,295,2.286,296,2.506,308,2.198,342,2.198,386,2.619,395,3.409,429,1.491,454,1.689,462,2.589,466,2.619,475,4.015,592,1.323,613,2.198,614,1.941,663,3.409,664,3.409,666,3.409,675,2.37,677,1.925,686,2.222,688,2.892,691,2.619,694,1.941,695,1.941,702,2.619,704,2.198,705,2.892,707,2.222,713,2.892,722,2.222,723,2.619,751,2.619,809,2.506,873,2.619,948,2.619,952,1.925,960,2.892,961,2.222,962,1.925,973,2.619,974,4.663,975,4.194,976,3.222,977,3.222,978,3.222,979,3.222,980,3.222,981,3.222,982,3.222,983,3.222,984,3.222,985,3.222,986,4.194,987,4.194,988,4.194,989,4.194,990,4.194,991,4.194,992,4.194,993,4.194,994,4.194,995,3.222,996,2.619,997,3.222,998,2.619,999,3.222,1000,3.222,1001,3.222,1002,3.222,1003,3.222,1004,3.222]],["title/components/LoginComponent.html",[0,0.17,56,0.626]],["body/components/LoginComponent.html",[0,0.256,1,0.495,2,1.073,3,0.282,4,0.237,5,0.8,6,0.8,7,0.8,8,0.8,9,0.195,11,0.574,12,0.8,13,2.002,14,1.58,16,1.208,18,1.208,20,0.282,21,0.657,23,0.38,24,1.401,26,2.392,28,0.645,29,0.048,30,1.132,31,1.134,32,1.132,33,0.497,35,0.571,36,0.237,39,0.282,40,0.282,41,0.631,42,1.208,43,1.208,44,0.8,45,1.621,46,0.8,47,0.882,48,0.8,49,0.435,50,0.8,51,0.435,52,0.495,53,0.8,54,0.435,55,0.8,56,0.996,57,0.8,58,0.495,59,0.495,60,0.8,61,0.495,62,0.9,63,0.56,64,0.8,65,0.8,66,0.8,67,0.016,68,0.024,69,0.016,84,0.952,86,1.515,121,0.902,122,0.902,126,1.455,134,1.148,135,0.71,151,1.003,153,1.208,154,0.631,156,1.344,159,1.455,167,1.314,169,0.882,173,0.8,174,1.021,177,0.8,183,0.882,184,0.8,199,1.344,200,1.778,202,1.344,203,1.344,211,1.733,212,0.8,213,2.064,215,1.164,216,0.902,241,1.362,242,1.641,253,0.953,257,1.828,262,1.164,263,2.766,266,2.392,267,2.445,268,1.758,269,3.763,270,3.428,272,2.971,273,2.445,274,3.447,275,0.953,276,0.953,278,1.758,281,2.724,286,1.021,287,1.021,292,1.33,294,1.362,295,2.477,302,2.258,305,2.029,306,2.369,307,2.222,323,1.542,328,2.029,330,0.902,347,1.362,361,2.426,372,2.337,374,2.392,380,1.758,388,2.445,410,2.882,429,1.963,430,2.029,432,1.584,433,3.211,446,2.392,454,1.021,456,1.164,457,1.542,458,1.542,459,1.021,461,2.534,462,2.647,463,1.164,464,1.164,465,1.021,467,1.344,469,1.344,474,2.029,477,1.584,480,2.392,483,1.584,484,1.584,485,1.584,487,1.758,488,1.758,489,1.164,506,1.542,511,2.392,530,3.211,532,2.882,536,2.392,584,2.392,592,0.8,610,2.882,629,1.584,635,1.584,648,1.584,651,1.584,665,1.584,670,3.211,675,1.641,694,1.362,695,0.902,704,1.542,713,1.344,718,1.344,720,1.164,727,1.164,742,1.344,750,2.029,795,3.286,796,2.924,797,2.029,801,3.624,807,2.392,809,2.36,819,2.724,850,2.664,885,2.392,886,1.584,904,1.584,934,2.392,952,1.164,960,2.029,961,1.344,962,1.164,996,1.584,1005,1.344,1006,3.545,1007,2.942,1008,2.924,1009,2.924,1010,3.545,1011,2.924,1012,2.942,1013,3.95,1014,3.95,1015,2.942,1016,2.029,1017,2.942,1018,1.948,1019,1.948,1020,1.948,1021,3.95,1022,2.942,1023,2.942,1024,2.029,1025,3.95,1026,2.392,1027,2.942,1028,2.942,1029,2.942,1030,3.95,1031,2.942,1032,2.942,1033,1.948,1034,3.95,1035,1.948,1036,4.459,1037,1.948,1038,4.459,1039,2.664,1040,4.459,1041,2.942,1042,2.942,1043,2.942,1044,2.942,1045,1.948,1046,2.029,1047,1.948,1048,2.07,1049,1.948,1050,1.948,1051,1.948,1052,1.948,1053,1.948,1054,1.948,1055,2.942,1056,1.948,1057,2.942,1058,2.029,1059,1.948,1060,1.344,1061,1.948,1062,1.948,1063,2.942,1064,1.948,1065,1.948,1066,1.948,1067,1.948,1068,1.948,1069,1.948,1070,1.948,1071,1.948,1072,1.948,1073,2.942,1074,2.942,1075,1.948,1076,1.948,1077,1.948,1078,1.948,1079,1.948,1080,2.942,1081,1.948,1082,1.948,1083,1.344,1084,1.948,1085,2.942,1086,1.948,1087,1.948,1088,1.948,1089,1.948,1090,1.948,1091,1.948,1092,1.948,1093,2.942,1094,1.948,1095,2.882,1096,3.211,1097,1.948,1098,1.948,1099,3.545,1100,2.942,1101,1.948,1102,2.942,1103,1.948,1104,1.948,1105,1.948,1106,1.948,1107,1.948,1108,1.948,1109,1.948,1110,1.948,1111,1.948,1112,1.948,1113,1.948,1114,1.948,1115,1.948,1116,1.948,1117,1.948,1118,1.344,1119,1.948,1120,1.344,1121,1.948,1122,1.948,1123,1.948,1124,1.948,1125,1.948,1126,1.948,1127,2.942,1128,2.942,1129,2.942,1130,1.948,1131,1.948,1132,1.948,1133,1.948,1134,1.948,1135,1.948,1136,1.948]],["title/interfaces/Score.html",[59,0.712,130,0.805]],["body/interfaces/Score.html",[3,0.467,4,0.393,9,0.323,11,0.63,20,0.467,21,0.938,23,0.63,28,0.675,29,0.048,30,1.301,35,0.675,36,0.393,39,0.607,40,0.675,59,1.488,67,0.026,68,0.034,69,0.026,85,1.177,105,1.325,125,2.896,127,1.915,130,1.341,131,1.929,134,1.36,135,2.043,136,2.432,139,2.538,140,1.977,141,1.206,142,2.372,143,2.372,144,1.325,145,1.929,146,1.325,147,1.944,151,1.185,157,1.42,160,1.724,161,1.869,162,1.802,163,1.495,165,1.495,166,1.495,167,0.82,168,1.325,169,1.104,170,1.929,171,1.929,172,1.929,173,1.325,178,1.495,179,1.929,181,2.161,182,1.692,183,1.043,193,1.802,194,1.944,204,1.325,219,1.724,222,1.692,226,1.325,237,1.495,352,1.495,359,2.446,1048,2.803,1137,2.227,1138,2.51,1139,3.219,1140,2.625,1141,2.625,1142,2.625,1143,2.625,1144,1.929,1145,2.625,1146,2.625,1147,2.625,1148,2.625,1149,3.414,1150,2.625,1151,3.794,1152,2.625,1153,2.896,1154,2.625]],["title/injectables/ScoreService.html",[85,1.022,141,0.805]],["body/injectables/ScoreService.html",[3,0.424,4,0.357,9,0.293,11,0.572,20,0.424,21,0.88,23,0.869,24,1.5,28,0.718,29,0.048,30,1.298,31,1.132,32,1,35,0.643,36,0.357,39,0.57,40,0.718,47,0.994,59,1.461,67,0.024,68,0.032,69,0.024,85,1.437,105,1.203,125,3.282,127,1.623,130,1.132,134,0.949,135,1.81,136,2.06,139,2.49,140,1.864,141,1.132,142,2.458,143,2.49,144,1.203,145,1.752,146,1.203,147,2.203,151,1.326,157,1.586,160,1.827,161,1.982,162,1.905,163,2.06,165,1.357,166,1.357,167,0.744,168,1.203,169,1.063,170,2.354,171,2.354,172,2.354,173,1.203,178,1.824,179,2.354,181,2.366,182,2.065,183,1.167,193,1.81,194,1.824,204,1.617,219,1.953,222,2.065,226,1.617,237,1.824,253,1.276,275,1.441,276,1.441,292,0.842,352,1.824,359,2.679,756,1.752,761,2.022,1048,2.679,1137,2.022,1138,1.752,1139,3.602,1140,3.203,1141,3.203,1142,3.868,1143,2.383,1144,2.354,1145,3.203,1146,3.203,1147,3.203,1148,2.383,1149,3.203,1150,2.383,1151,3.868,1152,3.618,1153,2.717,1154,3.868,1155,3.94,1156,3.94,1157,2.931,1158,2.931,1159,2.931,1160,2.931,1161,2.931,1162,2.931]],["title/components/ScoreTabComponent.html",[0,0.17,58,0.712]],["body/components/ScoreTabComponent.html",[0,0.299,1,0.733,2,1.422,3,0.418,4,0.351,5,1.185,6,1.185,7,1.185,8,1.185,9,0.289,11,0.564,12,1.185,13,2.201,14,1.737,16,1.601,18,1.601,20,0.418,21,0.871,23,0.564,24,1.495,27,1.806,28,0.684,29,0.048,30,0.99,31,1.12,32,0.99,33,0.488,35,0.564,36,0.351,39,0.418,40,0.418,41,0.935,42,1.601,43,1.601,44,1.185,45,1.941,46,1.185,47,0.986,48,1.185,49,0.645,50,1.185,51,0.645,52,1.121,53,1.185,54,0.645,55,1.185,56,0.645,57,1.185,58,1.292,59,1.362,60,1.185,61,0.733,62,0.733,63,0.83,64,1.185,65,1.185,66,1.185,67,0.023,68,0.031,69,0.023,85,2.022,109,3.162,157,1.12,167,0.733,169,0.645,183,0.986,200,1.61,241,1.806,242,2.044,253,1.263,257,2.189,275,0.935,276,0.935,286,1.514,287,1.514,292,1.358,298,3.59,300,2.331,302,2.286,330,1.337,359,2.044,372,2.044,379,1.992,380,1.726,382,3.171,398,3.262,455,2.348,471,2.348,562,3.171,604,2.348,668,3.171,675,1.806,690,2.69,694,1.806,695,1.337,722,2.69,727,1.726,728,1.726,747,2.348,748,2.348,800,2.348,809,2.331,819,2.69,857,3.171,950,3.59,957,2.348,964,2.348,965,2.348,1095,3.171,1096,3.171,1139,3.046,1153,2.69,1163,4.302,1164,2.348,1165,4.417,1166,3.901,1167,4.417,1168,4.73,1169,5.09,1170,2.888,1171,3.901,1172,2.888,1173,2.888,1174,3.901,1175,4.417,1176,3.901,1177,3.901,1178,3.901,1179,3.901,1180,3.901,1181,3.901,1182,2.888,1183,3.901,1184,2.888,1185,3.901,1186,2.888,1187,4.73,1188,3.901,1189,3.901,1190,2.888,1191,2.888,1192,2.888,1193,2.888,1194,2.888,1195,2.888,1196,2.888,1197,3.901,1198,3.901,1199,3.901,1200,3.901,1201,3.901,1202,3.901,1203,3.901,1204,3.901,1205,2.888,1206,3.901,1207,3.901,1208,2.888,1209,2.348,1210,2.888,1211,2.888,1212,2.888,1213,2.888,1214,2.888,1215,2.888,1216,2.348,1217,2.348,1218,2.888,1219,2.888,1220,2.888]],["title/interfaces/User.html",[62,0.712,130,0.805]],["body/interfaces/User.html",[0,0.282,3,0.357,4,0.3,9,0.247,11,0.482,20,0.357,21,0.781,23,0.482,28,0.721,29,0.048,30,1.435,31,1.005,32,1.123,33,0.591,34,2.803,35,0.639,36,0.3,39,0.506,40,0.506,62,1.484,67,0.02,68,0.028,69,0.02,84,0.911,86,0.709,89,1.293,105,1.013,126,1.99,127,1.857,130,1.167,131,1.475,134,1.57,135,1.915,136,2.431,139,2.358,140,1.482,141,1.005,142,2.161,143,2.244,144,1.013,147,1.142,148,2.09,151,0.888,153,1.815,154,1.133,157,1.392,158,1.142,160,1.668,161,1.482,162,1.612,163,1.142,165,1.619,166,1.619,167,1.032,168,1.436,169,1.157,173,1.013,174,1.293,175,1.475,176,1.475,177,1.013,178,1.142,183,0.908,184,1.013,193,1.702,194,1.619,196,1.475,204,1.436,205,1.293,206,1.619,211,0.799,213,1.142,216,1.142,217,2.09,219,1.815,226,1.436,227,1.475,237,1.142,278,1.475,279,1.702,288,1.475,292,0.709,301,1.293,306,1.881,307,1.293,308,1.293,323,1.293,342,1.293,347,1.619,348,1.475,352,1.881,492,1.475,592,1.013,612,1.475,613,1.293,614,1.142,850,2.789,875,1.702,1008,2.803,1009,3.049,1011,2.803,1016,1.702,1024,2.412,1039,3.256,1046,2.803,1048,2.835,1058,3.219,1060,1.702,1083,1.702,1118,3.757,1120,3.343,1138,2.09,1144,1.475,1221,1.702,1222,4.064,1223,2.844,1224,2.844,1225,2.412,1226,3.303,1227,3.594,1228,2.844,1229,2.006,1230,2.006,1231,2.006,1232,2.006,1233,2.844,1234,2.006,1235,3.594,1236,2.006,1237,2.006,1238,2.006,1239,2.006,1240,2.006,1241,2.006,1242,2.006,1243,2.006,1244,2.844,1245,2.006,1246,2.006,1247,2.006,1248,2.006,1249,2.006,1250,3.794,1251,1.702,1252,2.006,1253,2.006,1254,3.594,1255,2.006,1256,2.006,1257,2.006,1258,2.006,1259,2.006,1260,2.006,1261,2.006,1262,2.006,1263,2.006,1264,2.006,1265,2.006,1266,1.702,1267,3.303,1268,2.006,1269,2.844,1270,2.006,1271,2.006,1272,2.006,1273,2.006,1274,2.006,1275,2.006]],["title/components/UserActionsBtnsComponent.html",[0,0.17,61,0.712]],["body/components/UserActionsBtnsComponent.html",[0,0.27,1,0.559,2,1.175,3,0.318,4,0.268,5,0.904,6,0.904,7,0.904,8,0.904,9,0.221,11,0.43,12,0.904,13,2.069,14,1.632,16,1.323,18,1.323,20,0.318,21,0.72,23,0.629,24,1.419,27,1.492,28,0.466,29,0.047,33,0.372,35,0.645,36,0.268,39,0.318,40,0.318,41,0.713,42,1.323,43,1.323,44,0.904,45,1.722,46,0.904,47,0.851,48,0.904,49,1.173,50,0.904,51,0.492,52,0.559,53,0.904,54,0.492,55,0.904,56,0.492,57,0.904,58,0.559,59,0.559,60,0.904,61,1.184,62,1.279,63,1.618,64,1.565,65,0.904,66,0.904,67,0.018,68,0.026,69,0.018,84,1.013,86,1.547,112,3.011,121,1.02,122,1.492,126,1.323,146,1.722,151,0.968,157,1.095,158,1.492,159,0.904,161,1.175,162,1.175,167,1.065,169,0.937,183,1.042,200,1.701,211,1.359,212,1.323,219,1.323,226,0.904,236,2.223,241,1.492,242,1.765,253,1.044,257,1.942,262,1.316,263,2.879,267,2.223,268,1.926,272,2.507,275,0.713,276,0.713,281,2.893,286,1.155,287,1.155,292,1.384,294,1.942,295,2.287,296,2.787,300,2.507,301,1.689,302,2.43,306,2.371,330,1.02,347,1.02,361,2.684,372,1.689,373,1.316,376,2.893,381,2.62,390,2.223,423,2.62,429,2.43,454,1.155,456,1.316,457,1.689,458,1.689,459,2.721,461,1.316,464,1.926,474,1.519,476,3.41,487,1.316,488,1.316,489,1.316,490,1.519,506,1.689,570,3.41,592,0.904,614,1.492,675,2.23,677,2.278,686,2.629,694,1.02,695,1.02,703,1.791,704,1.155,718,2.223,720,1.926,727,1.926,728,1.316,742,1.519,795,3.532,796,3.407,797,2.223,803,3.791,818,2.62,840,2.62,846,2.62,849,2.62,861,3.41,932,2.62,947,2.62,952,1.316,953,2.62,954,1.791,962,1.926,963,1.791,971,1.791,998,3.099,1026,2.62,1039,1.926,1209,2.62,1216,1.791,1217,1.791,1225,2.893,1266,2.223,1276,3.475,1277,1.519,1278,3.812,1279,3.224,1280,4.195,1281,4.195,1282,4.195,1283,4.195,1284,3.812,1285,2.203,1286,2.203,1287,3.224,1288,3.224,1289,3.812,1290,2.62,1291,2.629,1292,2.203,1293,3.224,1294,4.195,1295,2.203,1296,4.195,1297,4.195,1298,4.195,1299,4.195,1300,3.224,1301,3.224,1302,2.203,1303,3.224,1304,2.203,1305,3.224,1306,4.195,1307,3.224,1308,3.224,1309,3.224,1310,3.224,1311,3.224,1312,2.203,1313,3.224,1314,4.195,1315,3.224,1316,2.203,1317,2.203,1318,1.791,1319,2.223,1320,1.519,1321,2.203,1322,2.203,1323,2.203,1324,2.203,1325,2.203,1326,2.203,1327,2.203,1328,2.203,1329,3.224,1330,2.203,1331,3.224,1332,2.203,1333,3.224,1334,3.224,1335,3.224,1336,3.812,1337,2.203,1338,2.203,1339,3.224,1340,2.203,1341,2.203,1342,2.203,1343,2.203,1344,3.224,1345,2.203,1346,2.203,1347,2.203,1348,2.203,1349,2.203]],["title/injectables/UserService.html",[86,0.805,141,0.805]],["body/injectables/UserService.html",[0,0.306,3,0.304,4,0.256,9,0.21,11,0.8,20,0.304,21,0.695,23,0.724,24,1.43,28,0.705,29,0.048,30,1.43,31,1.317,32,1.205,33,0.693,34,3.162,35,0.593,36,0.256,39,0.45,40,0.536,47,0.916,62,1.475,67,0.017,68,0.025,69,0.017,84,0.971,86,0.894,89,1.631,105,0.862,126,2.135,127,1.495,130,0.894,134,1.612,135,1.672,136,2.027,139,1.898,140,0.766,141,0.894,142,2.256,143,2.378,144,0.862,147,1.441,148,2.45,151,1.041,153,0.862,154,1.201,157,1.564,158,1.441,160,1.683,161,1.672,162,1.672,163,1.716,165,1.441,166,1.441,167,1.041,168,1.278,169,1.112,173,0.862,174,1.101,175,1.255,176,1.255,177,0.862,178,1.441,183,1.112,184,1.278,193,1.672,194,1.441,196,1.255,204,1.683,205,1.631,206,1.898,211,1.008,213,0.972,216,1.441,217,2.45,219,2,226,1.683,227,1.86,237,1.441,253,1.008,275,1.328,276,1.328,278,1.255,279,2.147,288,1.86,292,1.065,301,1.631,306,2.122,307,1.631,308,1.631,323,1.631,342,1.101,347,1.716,348,1.86,352,2.122,492,1.86,592,0.862,612,1.86,613,1.631,614,1.441,756,1.255,761,1.449,850,3.026,875,2.147,1008,3.019,1009,3.361,1011,3.019,1016,2.147,1024,2.557,1039,3.026,1046,3.019,1048,2.693,1058,3.493,1060,2.147,1083,2.147,1118,3.586,1120,2.828,1138,1.255,1144,1.86,1221,1.449,1223,1.708,1224,1.708,1225,1.449,1226,3.014,1227,2.53,1228,1.708,1229,1.708,1230,1.708,1231,2.53,1232,2.53,1233,3.333,1234,2.53,1235,4.046,1236,2.53,1237,2.53,1238,2.53,1239,2.53,1240,2.53,1241,2.53,1242,2.53,1243,2.53,1244,3.014,1245,2.53,1246,2.53,1247,2.53,1248,2.53,1249,2.53,1250,4.117,1251,2.147,1252,1.708,1253,1.708,1254,3.333,1255,1.708,1256,1.708,1257,1.708,1258,2.53,1259,2.53,1260,2.53,1261,2.53,1262,2.53,1263,1.708,1264,1.708,1265,2.53,1266,2.828,1267,3.014,1268,3.333,1269,3.014,1270,2.53,1271,2.53,1272,2.53,1273,2.53,1274,3.333,1275,1.708,1350,3.113,1351,3.113,1352,3.113,1353,2.101,1354,2.101,1355,2.101,1356,2.101,1357,2.101,1358,2.101,1359,2.101,1360,2.101,1361,2.101,1362,2.101]],["title/coverage.html",[1363,3.107]],["body/coverage.html",[0,0.332,1,0.917,9,0.361,10,2.934,28,0.522,29,0.047,33,0.61,49,0.806,51,0.806,52,1.408,54,0.806,56,0.806,58,0.917,59,0.917,61,0.917,62,0.917,63,1.553,67,0.029,68,0.036,69,0.029,84,0.705,85,1.316,86,1.037,109,2.157,112,2.939,115,2.7,127,1.316,130,1.413,132,3.11,141,1.413,206,1.671,240,3.11,434,4.717,465,2.577,678,2.934,772,3.552,773,3.552,867,2.489,868,2.489,973,2.934,1005,3.11,1137,3.11,1163,2.934,1164,2.934,1221,3.11,1276,3.392,1277,3.392,1290,4.604,1319,2.489,1320,2.489,1363,2.934,1364,3.61,1365,3.61,1366,3.61,1367,4.509,1368,4.509,1369,5.664,1370,4.509,1371,4.509,1372,3.61,1373,3.61,1374,3.61,1375,3.61,1376,3.61,1377,4.509,1378,3.61,1379,3.61,1380,2.934,1381,3.666,1382,2.934,1383,3.666,1384,2.934,1385,2.934,1386,3.61]],["title/dependencies.html",[73,2.014,1387,2.343]],["body/dependencies.html",[29,0.047,36,0.526,67,0.035,68,0.04,69,0.035,73,2.585,93,4.088,94,3.468,102,3.516,121,2.002,144,1.775,1388,4.325,1389,4.656,1390,4.325,1391,4.325,1392,4.325,1393,4.325,1394,4.325,1395,4.325,1396,4.325,1397,4.325,1398,4.325,1399,4.325]],["title/index.html",[20,0.339,1400,2.343,1401,2.343]],["body/index.html",[0,0.312,4,0.489,14,1.302,29,0.039,47,0.898,67,0.032,68,0.039,69,0.032,89,2.106,177,1.977,206,1.86,218,2.402,288,2.402,390,3.321,492,3.194,1251,2.772,1291,2.772,1389,3.267,1402,4.019,1403,4.816,1404,4.019,1405,5.156,1406,5.156,1407,4.019,1408,4.019,1409,5.466,1410,5.61,1411,4.019,1412,4.019,1413,4.019,1414,4.019,1415,4.019,1416,4.019,1417,4.019,1418,4.019,1419,5.156,1420,5.156,1421,4.019,1422,5.466,1423,4.019,1424,4.019,1425,4.019,1426,4.019,1427,4.019,1428,3.267,1429,4.816,1430,4.816,1431,4.345,1432,4.019,1433,4.816,1434,4.019,1435,4.019,1436,4.019,1437,4.019,1438,5.156,1439,4.019,1440,4.019,1441,4.019,1442,2.772,1443,4.019,1444,4.019]],["title/modules.html",[72,2.003]],["body/modules.html",[29,0.041,67,0.036,68,0.041,69,0.036,71,2.697,72,2.365,83,2.365,94,3.112,1445,4.513,1446,4.513,1447,5.154,1448,4.513,1449,4.513]],["title/overview.html",[1442,2.636]],["body/overview.html",[1,1.422,2,1.454,29,0.047,41,1.292,49,1.148,51,1.148,54,1.148,56,1.148,58,1.305,61,1.305,67,0.032,68,0.039,69,0.032,70,2.383,71,3.518,72,2.09,73,2.383,74,3.242,75,3.242,76,3.242,77,2.75,78,3.242,79,3.242,80,3.242,81,3.242,82,3.242,83,2.693,84,1.003,85,1.874,86,1.476,87,3.896,88,3.242,89,2.09,119,2.383,131,2.383,611,2.75,756,2.383,937,3.896,938,3.242,941,3.242,1442,2.75]],["title/routes.html",[119,2.284]],["body/routes.html",[29,0.042,67,0.037,68,0.042,69,0.037,119,2.733]],["title/miscellaneous/variables.html",[1450,1.904,1451,2.74]],["body/miscellaneous/variables.html",[9,0.352,20,0.508,28,0.816,29,0.047,31,1.543,32,1.296,52,1.336,63,1.466,67,0.028,68,0.036,69,0.028,112,2.101,115,1.843,122,1.628,154,1.437,159,1.821,184,1.821,212,2.239,240,2.425,294,1.628,295,1.628,302,2.525,330,2.435,352,2.053,361,2.996,373,2.651,429,2.525,457,2.858,458,2.858,459,2.858,460,2.858,461,2.904,462,2.547,463,2.904,465,2.815,506,2.815,772,2.425,773,3.519,866,2.858,867,3.059,868,3.059,1005,2.425,1276,2.425,1277,3.351,1291,2.425,1318,2.858,1319,3.059,1320,3.059,1380,2.858,1381,4.148,1382,2.858,1383,2.858,1384,3.95,1385,3.95,1428,4.148,1431,2.858,1450,2.858,1451,2.858,1452,4.436,1453,3.516,1454,3.516,1455,4.436,1456,4.859,1457,3.516,1458,3.516,1459,3.516,1460,3.516,1461,3.516,1462,3.516,1463,4.436]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":379,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["0.10.2",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":755,"title":{},"body":{"components/GameComponent.html":{}}}],["0.6s",{"_index":699,"title":{},"body":{"components/GameComponent.html":{}}}],["0.7",{"_index":954,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["045fb4",{"_index":1219,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["0px",{"_index":743,"title":{},"body":{"components/GameComponent.html":{}}}],["1",{"_index":347,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["1/1",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":310,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["100",{"_index":434,"title":{},"body":{"components/GameComponent.html":{},"coverage.html":{}}}],["100/howmanyseconds",{"_index":643,"title":{},"body":{"components/GameComponent.html":{}}}],["100px",{"_index":685,"title":{},"body":{"components/GameComponent.html":{}}}],["10px",{"_index":750,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["11.0.5",{"_index":1389,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["12/12",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["130px",{"_index":1002,"title":{},"body":{"components/IndexComponent.html":{}}}],["180px",{"_index":1336,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["1px",{"_index":731,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["1s",{"_index":650,"title":{},"body":{"components/GameComponent.html":{}}}],["2",{"_index":611,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":726,"title":{},"body":{"components/GameComponent.html":{}}}],["20/20",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1083,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["20px",{"_index":691,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["25",{"_index":969,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["2px",{"_index":708,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["3",{"_index":937,"title":{},"body":{"components/GameTabViewComponent.html":{},"overview.html":{}}}],["3/3",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["3061ed",{"_index":712,"title":{},"body":{"components/GameComponent.html":{}}}],["30px",{"_index":721,"title":{},"body":{"components/GameComponent.html":{}}}],["325dda",{"_index":711,"title":{},"body":{"components/GameComponent.html":{}}}],["33.33",{"_index":959,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["35px",{"_index":1209,"title":{},"body":{"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["38px",{"_index":744,"title":{},"body":{"components/GameComponent.html":{}}}],["3px",{"_index":753,"title":{},"body":{"components/GameComponent.html":{}}}],["4",{"_index":938,"title":{},"body":{"components/GameTabViewComponent.html":{},"overview.html":{}}}],["4/4",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":749,"title":{},"body":{"components/GameComponent.html":{}}}],["5",{"_index":939,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["500px",{"_index":1349,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["50px",{"_index":682,"title":{},"body":{"components/GameComponent.html":{}}}],["520px",{"_index":738,"title":{},"body":{"components/GameComponent.html":{}}}],["5px",{"_index":728,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["6",{"_index":940,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["6.6.0",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":639,"title":{},"body":{"components/GameComponent.html":{}}}],["7",{"_index":941,"title":{},"body":{"components/GameTabViewComponent.html":{},"overview.html":{}}}],["7/7",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1001,"title":{},"body":{"components/IndexComponent.html":{}}}],["8",{"_index":942,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["8/10",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":678,"title":{},"body":{"components/GameComponent.html":{},"coverage.html":{}}}],["87",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":943,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["9/10",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["90px",{"_index":735,"title":{},"body":{"components/GameComponent.html":{}}}],["a:hover",{"_index":1345,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["absolute",{"_index":1217,"title":{},"body":{"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["action",{"_index":703,"title":{},"body":{"components/GameComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["actions",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["active",{"_index":156,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{}}}],["activeuser",{"_index":1235,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["actual_component",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["add",{"_index":1145,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["added",{"_index":1270,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["additionallinksbtn",{"_index":960,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["admin",{"_index":794,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["adminu",{"_index":870,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["adresa",{"_index":166,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["adresu",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["akcije",{"_index":935,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ako",{"_index":270,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["aktivan",{"_index":808,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["aktivna",{"_index":381,"title":{},"body":{"components/GameComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["aktivne",{"_index":401,"title":{},"body":{"components/GameComponent.html":{}}}],["aktivnog",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["align",{"_index":688,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{}}}],["angular",{"_index":1405,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"dependencies.html":{}}}],["animaciju",{"_index":589,"title":{},"body":{"components/GameComponent.html":{}}}],["answer",{"_index":335,"title":{},"body":{"components/GameComponent.html":{}}}],["api",{"_index":162,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["apija",{"_index":473,"title":{},"body":{"components/GameComponent.html":{}}}],["apiurl",{"_index":163,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["aplikacije",{"_index":1299,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"index.html":{}}}],["app.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["appmodule",{"_index":71,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":83,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":359,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{}}}],["array.length",{"_index":496,"title":{},"body":{"components/GameComponent.html":{}}}],["array[i",{"_index":500,"title":{},"body":{"components/GameComponent.html":{}}}],["array[j",{"_index":501,"title":{},"body":{"components/GameComponent.html":{}}}],["artifacts",{"_index":1423,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1187,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["asinhrone",{"_index":188,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["asinhrono",{"_index":1077,"title":{},"body":{"components/LoginComponent.html":{}}}],["atribut",{"_index":308,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["atributu",{"_index":333,"title":{},"body":{"components/GameComponent.html":{}}}],["attributa",{"_index":817,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["attribute",{"_index":219,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["auto",{"_index":676,"title":{},"body":{"components/GameComponent.html":{}}}],["automatically",{"_index":1415,"title":{},"body":{"index.html":{}}}],["available",{"_index":1449,"title":{},"body":{"modules.html":{}}}],["b:any",{"_index":1200,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["backend",{"_index":1146,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["background",{"_index":694,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["bar",{"_index":680,"title":{},"body":{"components/GameComponent.html":{}}}],["barlow",{"_index":1211,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["baze",{"_index":837,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["bazi",{"_index":861,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["bcryptjs",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["bez",{"_index":864,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["bgcolor",{"_index":1340,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["bi",{"_index":614,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["binding",{"_index":1057,"title":{},"body":{"components/LoginComponent.html":{}}}],["bio",{"_index":325,"title":{},"body":{"components/GameComponent.html":{}}}],["biti",{"_index":796,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["black",{"_index":1347,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["block",{"_index":998,"title":{},"body":{"components/IndexComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["body",{"_index":995,"title":{},"body":{"components/IndexComponent.html":{}}}],["bold",{"_index":748,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["boolean",{"_index":153,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":709,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["both",{"_index":353,"title":{},"body":{"components/GameComponent.html":{}}}],["bottom",{"_index":707,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{}}}],["bottom:20px",{"_index":961,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["bottom:5px",{"_index":999,"title":{},"body":{"components/IndexComponent.html":{}}}],["br",{"_index":739,"title":{},"body":{"components/GameComponent.html":{}}}],["brisanja",{"_index":913,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["brise",{"_index":835,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["broj",{"_index":344,"title":{},"body":{"components/GameComponent.html":{}}}],["brown",{"_index":725,"title":{},"body":{"components/GameComponent.html":{}}}],["browse",{"_index":1447,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1339,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["btns.component",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["btns.component.css",{"_index":1278,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.html",{"_index":1279,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts",{"_index":1277,"title":{},"body":{"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["btns.component.ts:21",{"_index":1285,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts:30",{"_index":1316,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts:38",{"_index":1286,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts:46",{"_index":1312,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts:55",{"_index":1292,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts:63",{"_index":1302,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts:71",{"_index":1295,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns.component.ts:79",{"_index":1304,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["btns/user",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bude",{"_index":329,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["build",{"_index":1422,"title":{},"body":{"index.html":{}}}],["button",{"_index":962,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["buttons",{"_index":1321,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["call",{"_index":233,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["called",{"_index":1318,"title":{},"body":{"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":172,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["case",{"_index":1246,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ce",{"_index":795,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["cee3f6",{"_index":956,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["cekamo",{"_index":1078,"title":{},"body":{"components/LoginComponent.html":{}}}],["center",{"_index":705,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{}}}],["change",{"_index":288,"title":{},"body":{"components/GameComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["changeemailnotifications",{"_index":1274,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["check",{"_index":1441,"title":{},"body":{"index.html":{}}}],["checkiffieldsnotempty",{"_index":782,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["checkiffieldsnotempty():boolean",{"_index":919,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["class",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1406,"title":{},"body":{"index.html":{}}}],["click)=\"oncolumnoneclick(item.columnone",{"_index":505,"title":{},"body":{"components/GameComponent.html":{}}}],["cluster_appmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1251,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["coded",{"_index":1261,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["color",{"_index":695,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["color:#0a1b2a",{"_index":952,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["color:#40ff00",{"_index":736,"title":{},"body":{"components/GameComponent.html":{}}}],["color:#5882fa",{"_index":996,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["color:#8a0808",{"_index":724,"title":{},"body":{"components/GameComponent.html":{}}}],["color:#b45f04",{"_index":716,"title":{},"body":{"components/GameComponent.html":{}}}],["color:#d8d8d8",{"_index":949,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["color:#f3f781",{"_index":958,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["color:#f7fe2e",{"_index":1218,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["color:black",{"_index":718,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["color:forestgreen",{"_index":734,"title":{},"body":{"components/GameComponent.html":{}}}],["color:red",{"_index":1220,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["color:white",{"_index":742,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["column",{"_index":290,"title":{},"body":{"components/GameComponent.html":{}}}],["command",{"_index":1443,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"overview.html":{}}}],["components/game",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/game/game.component",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/game/score",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["components/game/user",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["components/index/index.component",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["condensed",{"_index":1213,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["console.log(\"not",{"_index":874,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["console.log('[login",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(data",{"_index":604,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["console.log(e",{"_index":884,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["console.log(err",{"_index":886,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["console.log(id",{"_index":909,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["console.log(this.scoresortorder",{"_index":1196,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["console.log(userobj",{"_index":1263,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["const",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(gameservice",{"_index":976,"title":{},"body":{"components/IndexComponent.html":{}}}],["constructor(httpclient",{"_index":761,"title":{},"body":{"injectables/GameService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":173,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":471,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["constructor(scoreservice",{"_index":1170,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["constructor(userservice",{"_index":262,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["contact",{"_index":178,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["contacts",{"_index":1258,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["contains",{"_index":226,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["context",{"_index":1384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["correct",{"_index":337,"title":{},"body":{"components/GameComponent.html":{}}}],["coverage",{"_index":1363,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":205,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["creategameinputelements",{"_index":1337,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["createnewuser",{"_index":1350,"title":{},"body":{"injectables/UserService.html":{}}}],["createnewuser(usr",{"_index":1262,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["css",{"_index":625,"title":{},"body":{"components/GameComponent.html":{}}}],["currentactivegamename",{"_index":245,"title":{},"body":{"components/GameComponent.html":{}}}],["currently",{"_index":155,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["cursor",{"_index":287,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["cuva",{"_index":599,"title":{},"body":{"components/GameComponent.html":{}}}],["cuvamo",{"_index":1236,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["cuvanje",{"_index":406,"title":{},"body":{"components/GameComponent.html":{}}}],["da",{"_index":306,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["dalje",{"_index":317,"title":{},"body":{"components/GameComponent.html":{}}}],["data",{"_index":134,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["data.name",{"_index":620,"title":{},"body":{"components/GameComponent.html":{}}}],["database",{"_index":139,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["datatablee",{"_index":950,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["datauser",{"_index":1269,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["declarations",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":464,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["decoration:none",{"_index":1343,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["decreasepermin",{"_index":642,"title":{},"body":{"components/GameComponent.html":{}}}],["default",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultni",{"_index":483,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["defiend",{"_index":186,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["definisana",{"_index":457,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":73,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1204,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["desne",{"_index":666,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["desnom",{"_index":1191,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["dev",{"_index":1412,"title":{},"body":{"index.html":{}}}],["development",{"_index":1408,"title":{},"body":{"index.html":{}}}],["directive",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["directives",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1421,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1426,"title":{},"body":{"index.html":{}}}],["disableclickonitems",{"_index":254,"title":{},"body":{"components/GameComponent.html":{}}}],["disableclickonitems():void",{"_index":587,"title":{},"body":{"components/GameComponent.html":{}}}],["disasble",{"_index":285,"title":{},"body":{"components/GameComponent.html":{}}}],["display",{"_index":686,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["dist",{"_index":1425,"title":{},"body":{"index.html":{}}}],["div",{"_index":1003,"title":{},"body":{"components/IndexComponent.html":{}}}],["dobar",{"_index":1081,"title":{},"body":{"components/LoginComponent.html":{}}}],["dobijamo",{"_index":1063,"title":{},"body":{"components/LoginComponent.html":{}}}],["dobijanja",{"_index":1297,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["dobijanje",{"_index":280,"title":{},"body":{"components/GameComponent.html":{}}}],["dobijemo",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{}}}],["dobijen",{"_index":299,"title":{},"body":{"components/GameComponent.html":{}}}],["dobijene",{"_index":432,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["documentation",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["dodaj",{"_index":597,"title":{},"body":{"components/GameComponent.html":{}}}],["dok",{"_index":452,"title":{},"body":{"components/GameComponent.html":{}}}],["dole",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["dozvolu",{"_index":1242,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["drugaciji",{"_index":616,"title":{},"body":{"components/GameComponent.html":{}}}],["druge",{"_index":350,"title":{},"body":{"components/GameComponent.html":{}}}],["drugi",{"_index":514,"title":{},"body":{"components/GameComponent.html":{}}}],["drugoj",{"_index":569,"title":{},"body":{"components/GameComponent.html":{}}}],["dugme",{"_index":670,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["dynamic",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":883,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["e.columnone.trim",{"_index":923,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["e.columntwo.trim",{"_index":924,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["e.pointer",{"_index":591,"title":{},"body":{"components/GameComponent.html":{}}}],["e.selectedone",{"_index":515,"title":{},"body":{"components/GameComponent.html":{}}}],["e.selectedtwo",{"_index":541,"title":{},"body":{"components/GameComponent.html":{}}}],["e2e",{"_index":1435,"title":{},"body":{"index.html":{}}}],["ease",{"_index":700,"title":{},"body":{"components/GameComponent.html":{}}}],["edit",{"_index":1344,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["elem.columnone",{"_index":524,"title":{},"body":{"components/GameComponent.html":{}}}],["elem.columntwo",{"_index":546,"title":{},"body":{"components/GameComponent.html":{}}}],["elem.selectedone",{"_index":533,"title":{},"body":{"components/GameComponent.html":{}}}],["elemenat",{"_index":526,"title":{},"body":{"components/GameComponent.html":{}}}],["element",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["elemente",{"_index":365,"title":{},"body":{"components/GameComponent.html":{}}}],["elementi",{"_index":319,"title":{},"body":{"components/GameComponent.html":{}}}],["elements",{"_index":291,"title":{},"body":{"components/GameComponent.html":{}}}],["email",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["eml",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["empty",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["end",{"_index":492,"title":{},"body":{"components/GameComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["ended",{"_index":150,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["entered",{"_index":1250,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["enviroment",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":1381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":885,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["error",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{}}}],["execute",{"_index":1433,"title":{},"body":{"index.html":{}}}],["export",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["fajlu",{"_index":506,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":154,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1210,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["field",{"_index":1058,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["fields",{"_index":354,"title":{},"body":{"components/GameComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1417,"title":{},"body":{"index.html":{}}}],["finds",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flag",{"_index":218,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"index.html":{}}}],["flagselecteditems",{"_index":246,"title":{},"body":{"components/GameComponent.html":{}}}],["flex",{"_index":687,"title":{},"body":{"components/GameComponent.html":{}}}],["font",{"_index":722,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{},"components/ScoreTabComponent.html":{}}}],["for(let",{"_index":881,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["form",{"_index":1341,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["format",{"_index":138,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["formcreategame",{"_index":970,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["forminputinvalid",{"_index":776,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["formsection",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":237,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["founditem",{"_index":516,"title":{},"body":{"components/GameComponent.html":{}}}],["founditem.pointer",{"_index":576,"title":{},"body":{"components/GameComponent.html":{}}}],["founditem.selectedone",{"_index":525,"title":{},"body":{"components/GameComponent.html":{}}}],["founditem.selectedtwo",{"_index":554,"title":{},"body":{"components/GameComponent.html":{}}}],["founditem.success",{"_index":573,"title":{},"body":{"components/GameComponent.html":{}}}],["frontendu",{"_index":1309,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["full",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["function",{"_index":1272,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["funkcija",{"_index":361,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["funkcije",{"_index":189,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["funkciji",{"_index":832,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["funkciju",{"_index":1310,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["further",{"_index":1437,"title":{},"body":{"index.html":{}}}],["ga",{"_index":545,"title":{},"body":{"components/GameComponent.html":{}}}],["game",{"_index":33,"title":{"interfaces/Game.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["game'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["game.component",{"_index":1317,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["game.component.css",{"_index":243,"title":{},"body":{"components/GameComponent.html":{}}}],["game.component.html",{"_index":244,"title":{},"body":{"components/GameComponent.html":{}}}],["game.service",{"_index":1229,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["gameactive",{"_index":158,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/IndexComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["gameapp",{"_index":1402,"title":{},"body":{"index.html":{}}}],["gamecomponent",{"_index":49,"title":{"components/GameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameendedflag",{"_index":152,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{}}}],["gameendedsendscoreresult",{"_index":255,"title":{},"body":{"components/GameComponent.html":{}}}],["gamename",{"_index":752,"title":{},"body":{"components/GameComponent.html":{}}}],["gameobj",{"_index":207,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["games",{"_index":236,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/UserActionsBtnsComponent.html":{}}}],["gameservice",{"_index":84,"title":{"injectables/GameService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["gametablelist",{"_index":777,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["gametabviewcomponent",{"_index":51,"title":{"components/GameTabViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gde",{"_index":202,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{}}}],["generate",{"_index":1419,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1404,"title":{},"body":{"index.html":{}}}],["get(`${this.apiurl}/game",{"_index":195,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["get(`${this.apiurl}/game/all",{"_index":239,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["get(`${this.apiurl}/score",{"_index":1143,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["get(`https://localhost:5101/api/users/notification/change/${this.activeuser.notificationstoken}/${this.activeuser.notificationsactive",{"_index":1275,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getallgames",{"_index":238,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["getgame",{"_index":187,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["getgameendedflag",{"_index":223,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["getgametablelist",{"_index":783,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["getiscreatemodalactive",{"_index":784,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["getiscreatemodalactive():boolean",{"_index":931,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["getloggedinuser",{"_index":1268,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getscore",{"_index":1142,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["getscorelist",{"_index":1154,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["getter",{"_index":222,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["getting",{"_index":1400,"title":{"index.html":{}},"body":{}}],["glavna",{"_index":165,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["glavni",{"_index":983,"title":{},"body":{"components/IndexComponent.html":{}}}],["glavnoj",{"_index":981,"title":{},"body":{"components/IndexComponent.html":{}}}],["go",{"_index":1440,"title":{},"body":{"index.html":{}}}],["gornjem",{"_index":1190,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["gotova",{"_index":585,"title":{},"body":{"components/GameComponent.html":{}}}],["graficki",{"_index":660,"title":{},"body":{"components/GameComponent.html":{}}}],["graph",{"_index":1448,"title":{},"body":{"modules.html":{}}}],["greske",{"_index":888,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["group",{"_index":702,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["h1",{"_index":948,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{}}}],["h5",{"_index":1338,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["hard",{"_index":1260,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["height",{"_index":684,"title":{},"body":{"components/GameComponent.html":{}}}],["height:100",{"_index":693,"title":{},"body":{"components/GameComponent.html":{}}}],["height:200px",{"_index":701,"title":{},"body":{"components/GameComponent.html":{}}}],["hellousername",{"_index":741,"title":{},"body":{"components/GameComponent.html":{}}}],["help",{"_index":1438,"title":{},"body":{"index.html":{}}}],["hoce",{"_index":1313,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["hover",{"_index":289,"title":{},"body":{"components/GameComponent.html":{}}}],["howmanyseconds",{"_index":640,"title":{},"body":{"components/GameComponent.html":{}}}],["html",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["http://localhost:4200",{"_index":1414,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":142,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclijenta",{"_index":175,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["https://angular.io/guide/observables",{"_index":192,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["https://localhost:5101",{"_index":1231,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["https://localhost:5201/api",{"_index":1140,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["https://localhost:5301/api",{"_index":164,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["icon",{"_index":1348,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["id",{"_index":135,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ide",{"_index":648,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["idemo",{"_index":553,"title":{},"body":{"components/GameComponent.html":{}}}],["identifier",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["if(!founditem){return",{"_index":534,"title":{},"body":{"components/GameComponent.html":{}}}],["if(!pointerflag){return",{"_index":504,"title":{},"body":{"components/GameComponent.html":{}}}],["if(!this.checkiffieldsnotempty",{"_index":893,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["if(founditem.success){return",{"_index":547,"title":{},"body":{"components/GameComponent.html":{}}}],["if(issuccess",{"_index":571,"title":{},"body":{"components/GameComponent.html":{}}}],["if(res",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.gameservice.getgameendedflag",{"_index":507,"title":{},"body":{"components/GameComponent.html":{}}}],["if(this.gameservice.getgameendedflag()){clearinterval(this.interval",{"_index":653,"title":{},"body":{"components/GameComponent.html":{}}}],["if(this.inputnamegamedata.trim",{"_index":921,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["if(this.isnumberoftriesequaltoten",{"_index":581,"title":{},"body":{"components/GameComponent.html":{}}}],["if(this.numoftries",{"_index":586,"title":{},"body":{"components/GameComponent.html":{}}}],["if(this.scoresortorder",{"_index":1197,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["if(userservice.getloggedinuser().id",{"_index":477,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["if(userservice.getloggedinuser().role",{"_index":871,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ifadmin",{"_index":1335,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["igra",{"_index":296,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["igrac",{"_index":272,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["igraca",{"_index":267,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["igracev",{"_index":1177,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["igracima",{"_index":369,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["igracu",{"_index":461,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["igraj",{"_index":994,"title":{},"body":{"components/IndexComponent.html":{}}}],["igrali",{"_index":991,"title":{},"body":{"components/IndexComponent.html":{}}}],["igrama",{"_index":815,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["igranapravi",{"_index":972,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["igre",{"_index":301,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["igri",{"_index":431,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["igru",{"_index":380,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{}}}],["ih",{"_index":574,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["ili",{"_index":809,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{}}}],["ima",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ime",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{}}}],["imena",{"_index":626,"title":{},"body":{"components/GameComponent.html":{}}}],["implements",{"_index":241,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["import",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["inactive",{"_index":1249,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["index'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["index.component.css",{"_index":974,"title":{},"body":{"components/IndexComponent.html":{}}}],["index.component.html",{"_index":975,"title":{},"body":{"components/IndexComponent.html":{}}}],["index.html",{"_index":458,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["indexcomponent",{"_index":54,"title":{"components/IndexComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["informacija",{"_index":863,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["informaciju",{"_index":852,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["inicijalizuje",{"_index":373,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["initemptyinputupdateform",{"_index":785,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["initializesettingsmodalvar",{"_index":1319,"title":{},"body":{"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initializeupdategamemodalvar",{"_index":867,"title":{},"body":{"components/GameTabViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initmaindatatable",{"_index":786,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["injectable",{"_index":141,"title":{"injectables/GameService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":756,"title":{},"body":{"injectables/GameService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":997,"title":{},"body":{"components/IndexComponent.html":{}}}],["input",{"_index":850,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["inputgamedata",{"_index":778,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["inputidclicked",{"_index":779,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["inputnamegamedata",{"_index":780,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["inscorelist",{"_index":1151,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["instanceof",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{}}}],["interface",{"_index":130,"title":{"interfaces/Game.html":{},"interfaces/Score.html":{},"interfaces/User.html":{}},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":131,"title":{},"body":{"interfaces/Game.html":{},"interfaces/Score.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interval",{"_index":247,"title":{},"body":{"components/GameComponent.html":{}}}],["intervalom",{"_index":655,"title":{},"body":{"components/GameComponent.html":{}}}],["iscreatemodalactive",{"_index":781,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["iscrtavanje",{"_index":441,"title":{},"body":{"components/GameComponent.html":{}}}],["iskoristio",{"_index":422,"title":{},"body":{"components/GameComponent.html":{}}}],["isnumberoftriesequaltoten",{"_index":256,"title":{},"body":{"components/GameComponent.html":{}}}],["isnumberoftriesequaltoten():boolean",{"_index":583,"title":{},"body":{"components/GameComponent.html":{}}}],["ispise",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{}}}],["ispod",{"_index":636,"title":{},"body":{"components/GameComponent.html":{}}}],["isprazni",{"_index":811,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ispremesta",{"_index":391,"title":{},"body":{"components/GameComponent.html":{}}}],["issuccess",{"_index":558,"title":{},"body":{"components/GameComponent.html":{}}}],["issue",{"_index":170,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["itd",{"_index":191,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["item",{"_index":334,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["item.columnone",{"_index":672,"title":{},"body":{"components/GameComponent.html":{}}}],["item.id",{"_index":902,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["item.name",{"_index":918,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["item.score",{"_index":1207,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["item.username",{"_index":1206,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["item:hover{background",{"_index":717,"title":{},"body":{"components/GameComponent.html":{}}}],["items",{"_index":689,"title":{},"body":{"components/GameComponent.html":{}}}],["itemz.columntwo",{"_index":673,"title":{},"body":{"components/GameComponent.html":{}}}],["iz",{"_index":300,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["izabere",{"_index":538,"title":{},"body":{"components/GameComponent.html":{}}}],["izabrane",{"_index":845,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["izabrano",{"_index":550,"title":{},"body":{"components/GameComponent.html":{}}}],["izabranoj",{"_index":838,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["izabranu",{"_index":385,"title":{},"body":{"components/GameComponent.html":{}}}],["izabrao",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{}}}],["izbor",{"_index":1178,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["izbriši",{"_index":933,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["izgled",{"_index":145,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["izloguj",{"_index":1331,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["izloguje",{"_index":1314,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["izmendju",{"_index":566,"title":{},"body":{"components/GameComponent.html":{}}}],["izmene",{"_index":877,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["izmeni",{"_index":932,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["iznad",{"_index":450,"title":{},"body":{"components/GameComponent.html":{}}}],["izvrsavanje",{"_index":826,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["izvrsi",{"_index":651,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["j",{"_index":497,"title":{},"body":{"components/GameComponent.html":{}}}],["javascript",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{}}}],["je",{"_index":211,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["jedan",{"_index":346,"title":{},"body":{"components/GameComponent.html":{}}}],["jednak",{"_index":309,"title":{},"body":{"components/GameComponent.html":{}}}],["jeste",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{}}}],["joj",{"_index":1054,"title":{},"body":{"components/LoginComponent.html":{}}}],["js",{"_index":212,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":137,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["json.parse(data.data",{"_index":622,"title":{},"body":{"components/GameComponent.html":{}}}],["json.parse(item.data",{"_index":917,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["json.stringify(this.inputgamedata",{"_index":897,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["kad",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{}}}],["kada",{"_index":294,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["kako",{"_index":613,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["kao",{"_index":216,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["karma",{"_index":1434,"title":{},"body":{"index.html":{}}}],["kazemo",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{}}}],["klasa",{"_index":1056,"title":{},"body":{"components/LoginComponent.html":{}}}],["klase",{"_index":818,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["klik",{"_index":588,"title":{},"body":{"components/GameComponent.html":{}}}],["klikce",{"_index":578,"title":{},"body":{"components/GameComponent.html":{}}}],["klikne",{"_index":530,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["kliknite",{"_index":669,"title":{},"body":{"components/GameComponent.html":{}}}],["kliknut",{"_index":521,"title":{},"body":{"components/GameComponent.html":{}}}],["kliknuto",{"_index":331,"title":{},"body":{"components/GameComponent.html":{}}}],["kod",{"_index":904,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["koj",{"_index":520,"title":{},"body":{"components/GameComponent.html":{}}}],["koja",{"_index":429,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["koje",{"_index":214,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{}}}],["koji",{"_index":323,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["koliko",{"_index":438,"title":{},"body":{"components/GameComponent.html":{}}}],["kolona",{"_index":320,"title":{},"body":{"components/GameComponent.html":{}}}],["kolone",{"_index":322,"title":{},"body":{"components/GameComponent.html":{}}}],["koloni",{"_index":570,"title":{},"body":{"components/GameComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["komponenta",{"_index":466,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["komponente",{"_index":470,"title":{},"body":{"components/GameComponent.html":{}}}],["komponentu",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{}}}],["konstruktor",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["kontaktira",{"_index":476,"title":{},"body":{"components/GameComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["kontaktiramo",{"_index":176,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["kontaktiranje",{"_index":472,"title":{},"body":{"components/GameComponent.html":{}}}],["koriscenje",{"_index":277,"title":{},"body":{"components/GameComponent.html":{}}}],["korisnicko",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{}}}],["korisnickom",{"_index":1307,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["korisnik",{"_index":271,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{}}}],["korisnika",{"_index":266,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["korisniku",{"_index":460,"title":{},"body":{"components/GameComponent.html":{},"miscellaneous/variables.html":{}}}],["koristi",{"_index":469,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["kreira",{"_index":853,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["kreirace",{"_index":828,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["kreiraj",{"_index":946,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["kreiranje",{"_index":859,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["kroz",{"_index":561,"title":{},"body":{"components/GameComponent.html":{}}}],["lakse",{"_index":411,"title":{},"body":{"components/GameComponent.html":{}}}],["later",{"_index":1234,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["left",{"_index":720,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["left:5",{"_index":692,"title":{},"body":{"components/GameComponent.html":{}}}],["legend",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"overview.html":{}}}],["leve",{"_index":663,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["li",{"_index":307,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["link",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{}}}],["list",{"_index":181,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/IndexComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["lista",{"_index":428,"title":{},"body":{"components/GameComponent.html":{}}}],["liste",{"_index":495,"title":{},"body":{"components/GameComponent.html":{}}}],["listi",{"_index":523,"title":{},"body":{"components/GameComponent.html":{}}}],["listu",{"_index":562,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["literal",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logged",{"_index":1233,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["loggedin",{"_index":875,"title":{},"body":{"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["loggedout",{"_index":1247,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["login",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["login.component.css",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbtn",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompclass",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":56,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginuser",{"_index":1351,"title":{},"body":{"injectables/UserService.html":{}}}],["loginuser(usr",{"_index":1357,"title":{},"body":{"injectables/UserService.html":{}}}],["loginuser(usr:string",{"_index":1252,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["logout",{"_index":484,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["logoutuser",{"_index":1266,"title":{},"body":{"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["logovan",{"_index":478,"title":{},"body":{"components/GameComponent.html":{}}}],["logovanje",{"_index":269,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["logovanog",{"_index":486,"title":{},"body":{"components/GameComponent.html":{}}}],["logujte",{"_index":990,"title":{},"body":{"components/IndexComponent.html":{}}}],["lozinka",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["main",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["mainly",{"_index":1322,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["margin",{"_index":675,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["mark",{"_index":148,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["marked",{"_index":336,"title":{},"body":{"components/GameComponent.html":{}}}],["markirano",{"_index":549,"title":{},"body":{"components/GameComponent.html":{}}}],["match",{"_index":338,"title":{},"body":{"components/GameComponent.html":{}}}],["matching",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":498,"title":{},"body":{"components/GameComponent.html":{}}}],["menja",{"_index":846,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["menjanja",{"_index":905,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["menjanje",{"_index":858,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["mestu",{"_index":201,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["method",{"_index":204,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":253,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["metod",{"_index":372,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["metodama",{"_index":1070,"title":{},"body":{"components/LoginComponent.html":{}}}],["metode",{"_index":827,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["mi",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{}}}],["microservice",{"_index":161,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["microservise",{"_index":389,"title":{},"body":{"components/GameComponent.html":{}}}],["min",{"_index":683,"title":{},"body":{"components/GameComponent.html":{}}}],["miscellaneous",{"_index":1450,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":459,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["modala",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{}}}],["modalu",{"_index":1300,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["model",{"_index":133,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["module",{"_index":70,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":72,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mogla",{"_index":929,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["mogo",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["mora",{"_index":537,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["moramo",{"_index":198,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["morate",{"_index":944,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["more",{"_index":1439,"title":{},"body":{"index.html":{}}}],["moze",{"_index":511,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["mozemo",{"_index":1067,"title":{},"body":{"components/LoginComponent.html":{}}}],["na",{"_index":200,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["nacin",{"_index":363,"title":{},"body":{"components/GameComponent.html":{}}}],["nadjen/nema",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["nadji",{"_index":543,"title":{},"body":{"components/GameComponent.html":{}}}],["nadju",{"_index":518,"title":{},"body":{"components/GameComponent.html":{}}}],["najbolji",{"_index":600,"title":{},"body":{"components/GameComponent.html":{}}}],["nalog",{"_index":993,"title":{},"body":{"components/IndexComponent.html":{}}}],["nam",{"_index":1060,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["napravi",{"_index":930,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["napravite",{"_index":992,"title":{},"body":{"components/IndexComponent.html":{}}}],["napravljena",{"_index":928,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["nas",{"_index":168,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["nasoj",{"_index":522,"title":{},"body":{"components/GameComponent.html":{}}}],["nav",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigate",{"_index":1413,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1323,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["naziv",{"_index":399,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["nazive",{"_index":988,"title":{},"body":{"components/IndexComponent.html":{}}}],["nazivima",{"_index":989,"title":{},"body":{"components/IndexComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp",{"_index":1332,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["ne",{"_index":328,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["necessary",{"_index":1232,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["nedefinisan",{"_index":416,"title":{},"body":{"components/GameComponent.html":{}}}],["need",{"_index":1245,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["neki",{"_index":532,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["nema",{"_index":485,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["netacno",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{}}}],["new",{"_index":206,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["nezelimo",{"_index":551,"title":{},"body":{"components/GameComponent.html":{}}}],["ng",{"_index":1410,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":624,"title":{},"body":{"components/GameComponent.html":{}}}],["ngmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":257,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["ni",{"_index":535,"title":{},"body":{"components/GameComponent.html":{}}}],["nije",{"_index":273,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["nista",{"_index":536,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["nisu",{"_index":824,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["niz",{"_index":857,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["niza",{"_index":393,"title":{},"body":{"components/GameComponent.html":{}}}],["nizaova",{"_index":366,"title":{},"body":{"components/GameComponent.html":{}}}],["njene",{"_index":387,"title":{},"body":{"components/GameComponent.html":{}}}],["njenim",{"_index":1069,"title":{},"body":{"components/LoginComponent.html":{}}}],["notification",{"_index":1226,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["notifications",{"_index":1225,"title":{},"body":{"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["notificationsactive",{"_index":1222,"title":{},"body":{"interfaces/User.html":{}}}],["notificationsactive:boolean",{"_index":1230,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["notificationsactive:false",{"_index":1244,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["notificationsactive:res.notifications",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{}}}],["notificationstoken",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["notifikacija",{"_index":1298,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["notifikacije",{"_index":1306,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["nova",{"_index":376,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["nove",{"_index":612,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["novi",{"_index":395,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["novu",{"_index":383,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["npr",{"_index":1082,"title":{},"body":{"components/LoginComponent.html":{}}}],["number",{"_index":140,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["numoftries",{"_index":248,"title":{},"body":{"components/GameComponent.html":{}}}],["numoftriesdiv",{"_index":719,"title":{},"body":{"components/GameComponent.html":{}}}],["numstats",{"_index":729,"title":{},"body":{"components/GameComponent.html":{}}}],["o",{"_index":430,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["oba",{"_index":392,"title":{},"body":{"components/GameComponent.html":{}}}],["obadve",{"_index":367,"title":{},"body":{"components/GameComponent.html":{}}}],["obaveštenje",{"_index":745,"title":{},"body":{"components/GameComponent.html":{}}}],["obe",{"_index":409,"title":{},"body":{"components/GameComponent.html":{}}}],["object",{"_index":184,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.serverdata.dataone).foreach(key=>this.serverdata.datatwo[key]=this.serverdata.dataone[key",{"_index":633,"title":{},"body":{"components/GameComponent.html":{}}}],["objekat",{"_index":213,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["objektu",{"_index":1308,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["obrisana",{"_index":911,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["observable",{"_index":143,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["obtain",{"_index":179,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["obzira",{"_index":865,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["od",{"_index":281,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["odabere",{"_index":840,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["odgovarajuci",{"_index":351,"title":{},"body":{"components/GameComponent.html":{}}}],["odgovarajucim",{"_index":664,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["odgovarajucuih",{"_index":420,"title":{},"body":{"components/GameComponent.html":{}}}],["odgovor",{"_index":1079,"title":{},"body":{"components/LoginComponent.html":{}}}],["odgovora",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{}}}],["odnosu",{"_index":1176,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["odobri",{"_index":1334,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["omogucava",{"_index":467,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["onaj",{"_index":519,"title":{},"body":{"components/GameComponent.html":{}}}],["onapiloginorregisteractionresult",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["onapiloginorregisteractionresult(res",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["onapiloginorregisteractionresult(res:any",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{}}}],["oncolumnoneclick",{"_index":258,"title":{},"body":{"components/GameComponent.html":{}}}],["oncolumnoneclick(item",{"_index":312,"title":{},"body":{"components/GameComponent.html":{}}}],["oncolumnoneclick(item:string",{"_index":502,"title":{},"body":{"components/GameComponent.html":{}}}],["oncolumntwoclick",{"_index":259,"title":{},"body":{"components/GameComponent.html":{}}}],["oncolumntwoclick(item",{"_index":339,"title":{},"body":{"components/GameComponent.html":{}}}],["oncolumntwoclick(item:string",{"_index":529,"title":{},"body":{"components/GameComponent.html":{}}}],["oncreatenewgame",{"_index":787,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["oncreatenewgamesubmit",{"_index":788,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ondelete",{"_index":789,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ondelete(id",{"_index":833,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ondelete(id:number):void",{"_index":908,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["one",{"_index":402,"title":{},"body":{"components/GameComponent.html":{}}}],["onemogucava",{"_index":316,"title":{},"body":{"components/GameComponent.html":{}}}],["ongoing",{"_index":149,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["oninit",{"_index":242,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["onlogin",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{}}}],["onnewgame",{"_index":1280,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["onregister",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["onscoresort",{"_index":1168,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["onsettingsmodalclose",{"_index":1281,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["onsettingsmodalopen",{"_index":1282,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["onsettingsnotificationcheckboxchange",{"_index":1283,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["onupdategameformsubmit",{"_index":790,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdategameformsubmit():void",{"_index":892,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdateopendialog",{"_index":791,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdateopendialog(item",{"_index":842,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdateopendialog(item:game):void",{"_index":914,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdatgamemodalclose",{"_index":792,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onupdatgamemodalclose():void",{"_index":906,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["onuserlogout",{"_index":1284,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["onuserlogout():void",{"_index":1324,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["opacity",{"_index":953,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["opadajucem",{"_index":1180,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["opciju",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{}}}],["optional",{"_index":276,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["orange",{"_index":968,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ostalo",{"_index":440,"title":{},"body":{"components/GameComponent.html":{}}}],["osvojeni",{"_index":667,"title":{},"body":{"components/GameComponent.html":{}}}],["otvara",{"_index":1303,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["otvori",{"_index":982,"title":{},"body":{"components/IndexComponent.html":{}}}],["out",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{},"overview.html":{}}}],["ova",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{}}}],["ovako",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{}}}],["overview",{"_index":1442,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1004,"title":{},"body":{"components/IndexComponent.html":{}}}],["pa",{"_index":197,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["package",{"_index":1387,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":730,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["page",{"_index":1444,"title":{},"body":{"index.html":{}}}],["panel",{"_index":807,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["panela",{"_index":821,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["panelu",{"_index":800,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["par",{"_index":565,"title":{},"body":{"components/GameComponent.html":{}}}],["param",{"_index":169,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["parametar",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{}}}],["parameters",{"_index":275,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["parametre",{"_index":375,"title":{},"body":{"components/GameComponent.html":{}}}],["parova",{"_index":421,"title":{},"body":{"components/GameComponent.html":{}}}],["parsefloat(a.score",{"_index":1201,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["parsefloat(b.score",{"_index":1202,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["password",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["password:pwd",{"_index":1256,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["pasword",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{}}}],["path",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["playing",{"_index":1248,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["pocetku",{"_index":417,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["pocetna",{"_index":934,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["pocne",{"_index":377,"title":{},"body":{"components/GameComponent.html":{}}}],["podaci",{"_index":1239,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["podacima",{"_index":844,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["podatak",{"_index":806,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["podataka",{"_index":146,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/UserActionsBtnsComponent.html":{}}}],["podatke",{"_index":388,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["podesavanje",{"_index":1296,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["podešavanja",{"_index":1333,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["poeni",{"_index":668,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["pogadjanja",{"_index":419,"title":{},"body":{"components/GameComponent.html":{}}}],["pogodjenih",{"_index":426,"title":{},"body":{"components/GameComponent.html":{}}}],["pointer",{"_index":286,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["pointerflag",{"_index":313,"title":{},"body":{"components/GameComponent.html":{}}}],["pointerflag:boolean",{"_index":503,"title":{},"body":{"components/GameComponent.html":{}}}],["pointsdiv",{"_index":732,"title":{},"body":{"components/GameComponent.html":{}}}],["pokazuje",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{}}}],["pokusaja",{"_index":345,"title":{},"body":{"components/GameComponent.html":{}}}],["pokušaja",{"_index":356,"title":{},"body":{"components/GameComponent.html":{}}}],["polja",{"_index":408,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["polje",{"_index":548,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["poljem",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{}}}],["poljima",{"_index":665,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["popuniti",{"_index":945,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["popunjena",{"_index":802,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["poretku",{"_index":1181,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["porukom",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["position",{"_index":1216,"title":{},"body":{"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["posle",{"_index":423,"title":{},"body":{"components/GameComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["post(`${this.apiurl}/game",{"_index":210,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["post(`${this.apiurl}/login",{"_index":1257,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["post(`${this.apiurl}/score",{"_index":1150,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["postavi",{"_index":327,"title":{},"body":{"components/GameComponent.html":{}}}],["postaviti",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["postavlja",{"_index":342,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["postavljamo",{"_index":635,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["postavljena",{"_index":1294,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["postoji",{"_index":564,"title":{},"body":{"components/GameComponent.html":{}}}],["potrebni",{"_index":1238,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["povecaj",{"_index":580,"title":{},"body":{"components/GameComponent.html":{}}}],["povecava",{"_index":343,"title":{},"body":{"components/GameComponent.html":{}}}],["povecavamo",{"_index":552,"title":{},"body":{"components/GameComponent.html":{}}}],["povezivanje",{"_index":1059,"title":{},"body":{"components/LoginComponent.html":{}}}],["povezuje",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{}}}],["poziva",{"_index":819,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{}}}],["pozivamo",{"_index":203,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{}}}],["pozove",{"_index":866,"title":{},"body":{"components/GameTabViewComponent.html":{},"miscellaneous/variables.html":{}}}],["pozvati",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["prava",{"_index":508,"title":{},"body":{"components/GameComponent.html":{}}}],["pravi",{"_index":1243,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["prazan",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["prazne",{"_index":878,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["predstavlja",{"_index":446,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["predstavllja",{"_index":436,"title":{},"body":{"components/GameComponent.html":{}}}],["preko",{"_index":174,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["premesta",{"_index":364,"title":{},"body":{"components/GameComponent.html":{}}}],["preostalih",{"_index":447,"title":{},"body":{"components/GameComponent.html":{}}}],["prestaje",{"_index":654,"title":{},"body":{"components/GameComponent.html":{}}}],["pri",{"_index":889,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["prikaz",{"_index":617,"title":{},"body":{"components/GameComponent.html":{}}}],["prikaza",{"_index":658,"title":{},"body":{"components/GameComponent.html":{}}}],["prikazane",{"_index":449,"title":{},"body":{"components/GameComponent.html":{}}}],["prikazani",{"_index":855,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["prikazati",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["prikaze",{"_index":822,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["prikazuje",{"_index":330,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["prikazuju",{"_index":368,"title":{},"body":{"components/GameComponent.html":{}}}],["prilikom",{"_index":912,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["pristupamo",{"_index":1071,"title":{},"body":{"components/LoginComponent.html":{}}}],["pristupio",{"_index":872,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["pristupiti",{"_index":1068,"title":{},"body":{"components/LoginComponent.html":{}}}],["pristupom",{"_index":1061,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":151,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["procenat",{"_index":437,"title":{},"body":{"components/GameComponent.html":{}}}],["prod",{"_index":1427,"title":{},"body":{"index.html":{}}}],["prodji",{"_index":560,"title":{},"body":{"components/GameComponent.html":{}}}],["production",{"_index":1428,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":679,"title":{},"body":{"components/GameComponent.html":{}}}],["project",{"_index":1403,"title":{},"body":{"index.html":{}}}],["promeni",{"_index":841,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["promenila",{"_index":1311,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["promenjana",{"_index":1301,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["promenjena",{"_index":901,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["promenjljivu",{"_index":1062,"title":{},"body":{"components/LoginComponent.html":{}}}],["promenu",{"_index":282,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["promise",{"_index":190,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["pronadjen",{"_index":575,"title":{},"body":{"components/GameComponent.html":{}}}],["properties",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["prosledice",{"_index":830,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["protractor",{"_index":1436,"title":{},"body":{"index.html":{}}}],["proverava",{"_index":305,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["proveravamo",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{}}}],["provere",{"_index":412,"title":{},"body":{"components/GameComponent.html":{}}}],["proveri",{"_index":531,"title":{},"body":{"components/GameComponent.html":{}}}],["proveru",{"_index":598,"title":{},"body":{"components/GameComponent.html":{}}}],["providers",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["prva",{"_index":979,"title":{},"body":{"components/IndexComponent.html":{}}}],["prve",{"_index":341,"title":{},"body":{"components/GameComponent.html":{}}}],["prvoj",{"_index":568,"title":{},"body":{"components/GameComponent.html":{}}}],["public",{"_index":157,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["purple",{"_index":714,"title":{},"body":{"components/GameComponent.html":{}}}],["pushgame",{"_index":757,"title":{},"body":{"injectables/GameService.html":{},"components/GameTabViewComponent.html":{}}}],["pushgame(gameobj",{"_index":209,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["pushscore",{"_index":1155,"title":{},"body":{"injectables/ScoreService.html":{}}}],["pushscore(score",{"_index":1147,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["putem",{"_index":303,"title":{},"body":{"components/GameComponent.html":{}}}],["pwd",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["pwd:string",{"_index":1253,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["radi",{"_index":410,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["radimo",{"_index":610,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["random",{"_index":180,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{}}}],["rasporedi",{"_index":494,"title":{},"body":{"components/GameComponent.html":{}}}],["rastucem",{"_index":1179,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["realnom",{"_index":1065,"title":{},"body":{"components/LoginComponent.html":{}}}],["receive",{"_index":1224,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["red",{"_index":696,"title":{},"body":{"components/GameComponent.html":{}}}],["reddirect",{"_index":479,"title":{},"body":{"components/GameComponent.html":{}}}],["redirect",{"_index":1073,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirektovan",{"_index":797,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["redirektuje",{"_index":265,"title":{},"body":{"components/GameComponent.html":{}}}],["redosled",{"_index":615,"title":{},"body":{"components/GameComponent.html":{}}}],["reference",{"_index":1291,"title":{},"body":{"components/UserActionsBtnsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["registerbtn",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{}}}],["registracija",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{}}}],["registraciju",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["registruj",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["reload",{"_index":1416,"title":{},"body":{"index.html":{}}}],["removegame",{"_index":758,"title":{},"body":{"injectables/GameService.html":{}}}],["removegame(id",{"_index":234,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["removes",{"_index":231,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["representing",{"_index":1138,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["represents",{"_index":136,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["request",{"_index":1228,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["requests",{"_index":171,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["require",{"_index":1385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.email",{"_index":1117,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.id",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.notificationtoken",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.role",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.username",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{}}}],["reset",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetuje",{"_index":848,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["result",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resurs",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["return",{"_index":193,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["returnbool",{"_index":920,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["returns",{"_index":183,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["rezultat",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgba(0",{"_index":754,"title":{},"body":{"components/GameComponent.html":{}}}],["right",{"_index":690,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["right:10px",{"_index":963,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["right:20px",{"_index":1000,"title":{},"body":{"components/IndexComponent.html":{}}}],["right:5px",{"_index":966,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["role",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["router",{"_index":263,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["router:router",{"_index":474,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["routermodule",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":119,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":674,"title":{},"body":{"components/GameComponent.html":{}}}],["run",{"_index":1409,"title":{},"body":{"index.html":{}}}],["running",{"_index":1429,"title":{},"body":{"index.html":{}}}],["ruteru",{"_index":1072,"title":{},"body":{"components/LoginComponent.html":{}}}],["rxjs",{"_index":144,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["sa",{"_index":462,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["sacuva",{"_index":332,"title":{},"body":{"components/GameComponent.html":{}}}],["sadrzi",{"_index":398,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["sajta",{"_index":985,"title":{},"body":{"components/IndexComponent.html":{}}}],["salje",{"_index":215,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{}}}],["samo",{"_index":510,"title":{},"body":{"components/GameComponent.html":{}}}],["sans",{"_index":1214,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["scaffolding",{"_index":1418,"title":{},"body":{"index.html":{}}}],["scora",{"_index":1241,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["score",{"_index":59,"title":{"interfaces/Score.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{}}}],["scorelist",{"_index":1139,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{}}}],["scorenum",{"_index":249,"title":{},"body":{"components/GameComponent.html":{}}}],["scorenumdiv",{"_index":733,"title":{},"body":{"components/GameComponent.html":{}}}],["scoreobj",{"_index":1149,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["scores",{"_index":1141,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["scoreservice",{"_index":85,"title":{"injectables/ScoreService.html":{}},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scoresortorder",{"_index":1167,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["scoretabcomponent",{"_index":58,"title":{"components/ScoreTabComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["script",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{}}}],["se",{"_index":295,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["secondary",{"_index":715,"title":{},"body":{"components/GameComponent.html":{}}}],["secondary{background",{"_index":1346,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["sekunde",{"_index":444,"title":{},"body":{"components/GameComponent.html":{}}}],["sekundi",{"_index":448,"title":{},"body":{"components/GameComponent.html":{}}}],["selected",{"_index":355,"title":{},"body":{"components/GameComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["selectovanih",{"_index":407,"title":{},"body":{"components/GameComponent.html":{}}}],["selektovan",{"_index":326,"title":{},"body":{"components/GameComponent.html":{}}}],["selektovani",{"_index":349,"title":{},"body":{"components/GameComponent.html":{}}}],["selektovanih",{"_index":567,"title":{},"body":{"components/GameComponent.html":{}}}],["selektuj",{"_index":544,"title":{},"body":{"components/GameComponent.html":{}}}],["selektuje",{"_index":321,"title":{},"body":{"components/GameComponent.html":{}}}],["selektuju",{"_index":318,"title":{},"body":{"components/GameComponent.html":{}}}],["semi",{"_index":1212,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["send",{"_index":208,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["sendmessageusermodal",{"_index":465,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sendmessageusermodal(\"doslo",{"_index":887,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["sendmessageusermodal(\"igra",{"_index":594,"title":{},"body":{"components/GameComponent.html":{}}}],["sendmessageusermodal(\"nova",{"_index":926,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["sendmessageusermodal(`doslo",{"_index":903,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["sendmessageusermodal(`igra",{"_index":900,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["sendmessageusermodal(res",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{}}}],["sends",{"_index":1144,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["serif",{"_index":1215,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["serve",{"_index":1411,"title":{},"body":{"index.html":{}}}],["server",{"_index":177,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["servera",{"_index":433,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["serverdata",{"_index":250,"title":{},"body":{"components/GameComponent.html":{}}}],["service",{"_index":1265,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["services/game.service",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["services/score.service",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["services/user.service",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":352,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["setactiveuser",{"_index":1352,"title":{},"body":{"injectables/UserService.html":{}}}],["setactiveuser(datauser",{"_index":1271,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["setgameendedflag",{"_index":759,"title":{},"body":{"injectables/GameService.html":{}}}],["setgameendedflag(flag",{"_index":220,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["setinterval",{"_index":646,"title":{},"body":{"components/GameComponent.html":{}}}],["sets",{"_index":217,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["setscorelist",{"_index":1152,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["setscorelist(inscorelist",{"_index":1160,"title":{},"body":{"injectables/ScoreService.html":{}}}],["setting",{"_index":1287,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["settings",{"_index":1289,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["settingsmodalshow",{"_index":1320,"title":{},"body":{"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsmodalshow(false",{"_index":1328,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["settingsmodalshow(true",{"_index":1327,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["showuserloginform",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["shufflearray",{"_index":260,"title":{},"body":{"components/GameComponent.html":{}}}],["shufflearray(array",{"_index":358,"title":{},"body":{"components/GameComponent.html":{}}}],["shufflearray(array:array",{"_index":493,"title":{},"body":{"components/GameComponent.html":{}}}],["size",{"_index":723,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["skiplocationchange",{"_index":488,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["skor",{"_index":298,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["skoreva",{"_index":1185,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["skorova",{"_index":1183,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["slanje",{"_index":279,"title":{},"body":{"components/GameComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["slucajan",{"_index":362,"title":{},"body":{"components/GameComponent.html":{}}}],["slucjno",{"_index":384,"title":{},"body":{"components/GameComponent.html":{}}}],["sluzi",{"_index":405,"title":{},"body":{"components/GameComponent.html":{}}}],["smanji",{"_index":657,"title":{},"body":{"components/GameComponent.html":{}}}],["smo",{"_index":481,"title":{},"body":{"components/GameComponent.html":{}}}],["solid",{"_index":710,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["sort((a:any",{"_index":1199,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["sortira",{"_index":1174,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["sortiranja",{"_index":1189,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spec\\.ts",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spoite",{"_index":662,"title":{},"body":{"components/GameComponent.html":{}}}],["spojiti",{"_index":987,"title":{},"body":{"components/IndexComponent.html":{}}}],["spojnice",{"_index":986,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game.component.ts",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.ts",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/game",{"_index":772,"title":{},"body":{"components/GameTabViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/game/game.component.ts",{"_index":240,"title":{},"body":{"components/GameComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/game/game.component.ts:115",{"_index":340,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:152",{"_index":304,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:159",{"_index":284,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:168",{"_index":293,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:191",{"_index":371,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:22",{"_index":445,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:24",{"_index":435,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:27",{"_index":418,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:29",{"_index":424,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:31",{"_index":427,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:33",{"_index":397,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:35",{"_index":404,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:40",{"_index":264,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:50",{"_index":453,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:51",{"_index":413,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:64",{"_index":311,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:71",{"_index":360,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/game.component.ts:89",{"_index":314,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/components/game/score",{"_index":1163,"title":{},"body":{"components/ScoreTabComponent.html":{},"coverage.html":{}}}],["src/app/components/game/user",{"_index":1276,"title":{},"body":{"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/index/index.component.ts",{"_index":973,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["src/app/components/index/index.component.ts:14",{"_index":977,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:24",{"_index":978,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/login/login.component.ts:101",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:26",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:53",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:58",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:73",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/services/game.service",{"_index":454,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["src/app/services/game.service.ts",{"_index":132,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["src/app/services/game.service.ts:20",{"_index":771,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:22",{"_index":770,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:24",{"_index":762,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:35",{"_index":764,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:45",{"_index":766,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:53",{"_index":768,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:60",{"_index":765,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:69",{"_index":769,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:77",{"_index":767,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:84",{"_index":763,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/score.service",{"_index":455,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["src/app/services/score.service.ts",{"_index":1137,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["src/app/services/score.service.ts:18",{"_index":1162,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:20",{"_index":1156,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:31",{"_index":1157,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:41",{"_index":1159,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:54",{"_index":1161,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:61",{"_index":1158,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/user.service",{"_index":456,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":1221,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:102",{"_index":1356,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:110",{"_index":1360,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:118",{"_index":1354,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":1362,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:32",{"_index":1361,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:42",{"_index":1353,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:56",{"_index":1358,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:73",{"_index":1355,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:87",{"_index":1359,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1380,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sta",{"_index":1055,"title":{},"body":{"components/LoginComponent.html":{}}}],["started",{"_index":1401,"title":{"index.html":{}},"body":{}}],["startthegame",{"_index":261,"title":{},"body":{"components/GameComponent.html":{}}}],["startuje",{"_index":394,"title":{},"body":{"components/GameComponent.html":{}}}],["state",{"_index":1273,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["statements",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["stavi",{"_index":512,"title":{},"body":{"components/GameComponent.html":{}}}],["stavili",{"_index":482,"title":{},"body":{"components/GameComponent.html":{}}}],["stavljamo",{"_index":647,"title":{},"body":{"components/GameComponent.html":{}}}],["sto",{"_index":1076,"title":{},"body":{"components/LoginComponent.html":{}}}],["stored",{"_index":1424,"title":{},"body":{"index.html":{}}}],["strane",{"_index":475,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["strani",{"_index":873,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{}}}],["stranica",{"_index":869,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["stranice",{"_index":283,"title":{},"body":{"components/GameComponent.html":{}}}],["stranicu",{"_index":268,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["stranu",{"_index":480,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["string",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["stringove",{"_index":879,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["structure",{"_index":185,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["strukturu",{"_index":829,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["su",{"_index":348,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["subscribe",{"_index":199,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{}}}],["subscribe((data:any",{"_index":603,"title":{},"body":{"components/GameComponent.html":{}}}],["success",{"_index":182,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["successful",{"_index":232,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["support",{"_index":1445,"title":{},"body":{"modules.html":{}}}],["sva",{"_index":799,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["svaki",{"_index":513,"title":{},"body":{"components/GameComponent.html":{}}}],["svakih",{"_index":649,"title":{},"body":{"components/GameComponent.html":{}}}],["sve",{"_index":374,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["svg",{"_index":1446,"title":{},"body":{"modules.html":{}}}],["svim",{"_index":814,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["tab",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tab'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["tab.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{}}}],["tab.component.css",{"_index":1165,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.html",{"_index":1166,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts",{"_index":1164,"title":{},"body":{"components/ScoreTabComponent.html":{},"coverage.html":{}}}],["tab.component.ts:13",{"_index":1184,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts:16",{"_index":1171,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts:22",{"_index":1186,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts:25",{"_index":1172,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts:30",{"_index":1182,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab.component.ts:37",{"_index":1173,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["tab/score",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{},"components/ScoreTabComponent.html":{},"coverage.html":{}}}],["tabelu",{"_index":1175,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["table",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["tacan",{"_index":572,"title":{},"body":{"components/GameComponent.html":{}}}],["tacno",{"_index":425,"title":{},"body":{"components/GameComponent.html":{}}}],["tada",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["tagu",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{}}}],["taj",{"_index":831,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["tajmer",{"_index":396,"title":{},"body":{"components/GameComponent.html":{}}}],["tajmera",{"_index":451,"title":{},"body":{"components/GameComponent.html":{}}}],["takodje",{"_index":468,"title":{},"body":{"components/GameComponent.html":{}}}],["td",{"_index":965,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["tekst",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["tekstom",{"_index":463,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["tekstualnim",{"_index":1064,"title":{},"body":{"components/LoginComponent.html":{}}}],["tells",{"_index":1223,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["temp",{"_index":499,"title":{},"body":{"components/GameComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["test",{"_index":1432,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1431,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":704,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["th",{"_index":957,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["this.activeuser",{"_index":1267,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.currentactivegamename",{"_index":619,"title":{},"body":{"components/GameComponent.html":{}}}],["this.disableclickonitems",{"_index":595,"title":{},"body":{"components/GameComponent.html":{}}}],["this.eml",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.flagselecteditems.one",{"_index":527,"title":{},"body":{"components/GameComponent.html":{}}}],["this.flagselecteditems.two",{"_index":556,"title":{},"body":{"components/GameComponent.html":{}}}],["this.forminputinvalid",{"_index":894,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.gamecomponent.startthegame",{"_index":1326,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["this.gameendedflag",{"_index":221,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["this.gameendedsendscoreresult",{"_index":582,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gameservice.gameactive",{"_index":592,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["this.gameservice.getgame().subscribe((data",{"_index":618,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gameservice.pushgame(item).subscribe((data",{"_index":925,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.gameservice.removegame(id).subscribe",{"_index":910,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.gameservice.setgameendedflag(false",{"_index":606,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gameservice.setgameendedflag(true",{"_index":593,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{}}}],["this.gameservice.updategame(item).subscribe((e",{"_index":898,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.gametablelist",{"_index":882,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.httpclient",{"_index":194,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.httpclient.delete(`${this.apiurl}/game/${id",{"_index":235,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["this.httpclient.post(`${this.apiurl}/create",{"_index":1264,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.httpclient.put(`${this.apiurl}/game",{"_index":230,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["this.initemptyinputupdateform",{"_index":876,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.initmaindatatable",{"_index":891,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.inputgamedata",{"_index":880,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.inputgamedata.foreach((e",{"_index":922,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.inputidclicked",{"_index":895,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.inputnamegamedata",{"_index":896,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.interval",{"_index":645,"title":{},"body":{"components/GameComponent.html":{}}}],["this.iscreatemodalactive",{"_index":915,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.numoftries",{"_index":555,"title":{},"body":{"components/GameComponent.html":{}}}],["this.onapiloginorregisteractionresult(\"korisnicko",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onapiloginorregisteractionresult(\"lozinka",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onapiloginorregisteractionresult(\"unesite",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onapiloginorregisteractionresult(data",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onupdatgamemodalclose",{"_index":899,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["this.pwd",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.pwd).subscribe((data",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([\"/game",{"_index":1074,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([\"/login",{"_index":490,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["this.router.navigatebyurl",{"_index":487,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["this.scorelist",{"_index":1153,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{}}}],["this.scorenum",{"_index":579,"title":{},"body":{"components/GameComponent.html":{}}}],["this.scoreservice.getscore().subscribe((data",{"_index":1194,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.scoreservice.getscorelist",{"_index":1198,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.scoreservice.pushscore",{"_index":596,"title":{},"body":{"components/GameComponent.html":{}}}],["this.scoreservice.setscorelist(data",{"_index":1195,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.scoreservice.setscorelist(this.scorelist",{"_index":1205,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.scoresortorder",{"_index":1203,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.scoretabcomponent.updatescoretableview",{"_index":605,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata",{"_index":491,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.data",{"_index":621,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.data.find((elem:any",{"_index":559,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.data.foreach((e",{"_index":623,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.data.foreach((e:any",{"_index":590,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.dataone",{"_index":630,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.dataone.find((elem:any",{"_index":517,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.dataone.foreach((e:any",{"_index":509,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.datatwo",{"_index":632,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.datatwo.find((elem:any",{"_index":542,"title":{},"body":{"components/GameComponent.html":{}}}],["this.serverdata.datatwo.foreach((e:any",{"_index":540,"title":{},"body":{"components/GameComponent.html":{}}}],["this.shufflearray(this.serverdata.data",{"_index":631,"title":{},"body":{"components/GameComponent.html":{}}}],["this.shufflearray(this.serverdata.datatwo",{"_index":634,"title":{},"body":{"components/GameComponent.html":{}}}],["this.timerheight",{"_index":607,"title":{},"body":{"components/GameComponent.html":{}}}],["this.timertxt",{"_index":644,"title":{},"body":{"components/GameComponent.html":{}}}],["this.updatescoretableview",{"_index":1193,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["this.userservice.changeemailnotifications().subscribe",{"_index":1330,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["this.userservice.createnewuser(this.usr",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getloggedinuser().notificationsactive",{"_index":1329,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["this.userservice.getloggedinuser().username",{"_index":602,"title":{},"body":{"components/GameComponent.html":{}}}],["this.userservice.loginuser(this.usr",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.logoutuser",{"_index":1325,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["this.userservice.setactiveuser",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usr",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{}}}],["thscore",{"_index":964,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/ScoreTabComponent.html":{}}}],["timer",{"_index":443,"title":{},"body":{"components/GameComponent.html":{}}}],["timera",{"_index":659,"title":{},"body":{"components/GameComponent.html":{}}}],["timerheight",{"_index":251,"title":{},"body":{"components/GameComponent.html":{}}}],["timerinminutes",{"_index":637,"title":{},"body":{"components/GameComponent.html":{}}}],["timerinseconds",{"_index":638,"title":{},"body":{"components/GameComponent.html":{}}}],["timerinseconds/1000",{"_index":641,"title":{},"body":{"components/GameComponent.html":{}}}],["timersecondsleft",{"_index":746,"title":{},"body":{"components/GameComponent.html":{}}}],["timertxt",{"_index":252,"title":{},"body":{"components/GameComponent.html":{}}}],["tip",{"_index":1188,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["tj",{"_index":386,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["toga",{"_index":1315,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["token",{"_index":1227,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["tokom",{"_index":370,"title":{},"body":{"components/GameComponent.html":{}}}],["top",{"_index":727,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["top:10px",{"_index":1342,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["top:1px",{"_index":967,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["top:2px",{"_index":706,"title":{},"body":{"components/GameComponent.html":{}}}],["top:5px",{"_index":751,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{}}}],["top:8px",{"_index":971,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["tr",{"_index":955,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["transition",{"_index":698,"title":{},"body":{"components/GameComponent.html":{}}}],["treba",{"_index":584,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["trenutno",{"_index":400,"title":{},"body":{"components/GameComponent.html":{}}}],["trenutnu",{"_index":1305,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["true",{"_index":159,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":628,"title":{},"body":{"components/GameComponent.html":{}}}],["true}).then",{"_index":489,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["try{clearinterval(this.interval);}catch",{"_index":608,"title":{},"body":{"components/GameComponent.html":{}}}],["tslib",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":403,"title":{},"body":{"components/GameComponent.html":{}}}],["type",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["u",{"_index":302,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"miscellaneous/variables.html":{}}}],["ucitava",{"_index":980,"title":{},"body":{"components/IndexComponent.html":{}}}],["ucitavanju",{"_index":890,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["uglu",{"_index":1192,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["ukloni",{"_index":936,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["ulogovan",{"_index":274,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["ulogovanog",{"_index":278,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["uloguj",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{}}}],["umanji",{"_index":656,"title":{},"body":{"components/GameComponent.html":{}}}],["undefined",{"_index":414,"title":{},"body":{"components/GameComponent.html":{}}}],["unit",{"_index":1430,"title":{},"body":{"index.html":{}}}],["unos",{"_index":801,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{}}}],["unutar",{"_index":652,"title":{},"body":{"components/GameComponent.html":{}}}],["up",{"_index":1288,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["upamti",{"_index":528,"title":{},"body":{"components/GameComponent.html":{}}}],["update",{"_index":228,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["updategame",{"_index":760,"title":{},"body":{"injectables/GameService.html":{}}}],["updategame(gameobj",{"_index":229,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["updategamemodalshow",{"_index":868,"title":{},"body":{"components/GameTabViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updategamemodalshow(false",{"_index":907,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["updategamemodalshow(true",{"_index":916,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["updates",{"_index":224,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["updatescoretableview",{"_index":1169,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["upredi",{"_index":563,"title":{},"body":{"components/GameComponent.html":{}}}],["url",{"_index":160,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"components/IndexComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["use",{"_index":1420,"title":{},"body":{"index.html":{}}}],["used",{"_index":147,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["user",{"_index":62,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user\").subscribe",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["usera",{"_index":1237,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["useractionsbtnscomponent",{"_index":61,"title":{"components/UserActionsBtnsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["username:string",{"_index":1148,"title":{},"body":{"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["username:usr",{"_index":1255,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userobj",{"_index":1254,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":86,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uspesno",{"_index":927,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["usr",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["uzima",{"_index":382,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["uzme",{"_index":813,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["vales",{"_index":225,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{}}}],["value",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":227,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["var",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["variable",{"_index":1290,"title":{},"body":{"components/UserActionsBtnsComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1451,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varijabli",{"_index":629,"title":{},"body":{"components/GameComponent.html":{},"components/LoginComponent.html":{}}}],["vec",{"_index":324,"title":{},"body":{"components/GameComponent.html":{}}}],["version",{"_index":1407,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":681,"title":{},"body":{"components/GameComponent.html":{}}}],["via",{"_index":390,"title":{},"body":{"components/GameComponent.html":{},"components/UserActionsBtnsComponent.html":{},"index.html":{}}}],["view",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameTabViewComponent.html":{}}}],["view'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ScoreTabComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["view.component",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["view.component.css",{"_index":774,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.html",{"_index":775,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts",{"_index":773,"title":{},"body":{"components/GameTabViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["view.component.ts:116",{"_index":847,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:127",{"_index":834,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:139",{"_index":843,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:150",{"_index":804,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:157",{"_index":798,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:173",{"_index":820,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:185",{"_index":823,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:209",{"_index":805,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:24",{"_index":854,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:26",{"_index":856,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:28",{"_index":862,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:30",{"_index":851,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:32",{"_index":860,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:34",{"_index":793,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:57",{"_index":810,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:66",{"_index":812,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:80",{"_index":816,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view.component.ts:89",{"_index":839,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["view/game",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameTabViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vizualnog",{"_index":442,"title":{},"body":{"components/GameComponent.html":{}}}],["void",{"_index":292,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["vraca",{"_index":196,"title":{},"body":{"interfaces/Game.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["vrati",{"_index":1080,"title":{},"body":{"components/LoginComponent.html":{}}}],["vrednost",{"_index":803,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["vrednosti",{"_index":378,"title":{},"body":{"components/GameComponent.html":{}}}],["vremena",{"_index":439,"title":{},"body":{"components/GameComponent.html":{}}}],["vremenski",{"_index":415,"title":{},"body":{"components/GameComponent.html":{}}}],["vremenu",{"_index":1066,"title":{},"body":{"components/LoginComponent.html":{}}}],["vrstu",{"_index":836,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["vucemo",{"_index":609,"title":{},"body":{"components/GameComponent.html":{}}}],["web",{"_index":984,"title":{},"body":{"components/IndexComponent.html":{}}}],["webkit",{"_index":697,"title":{},"body":{"components/GameComponent.html":{}}}],["weight",{"_index":747,"title":{},"body":{"components/GameComponent.html":{},"components/ScoreTabComponent.html":{}}}],["white",{"_index":713,"title":{},"body":{"components/GameComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["white{color:white",{"_index":740,"title":{},"body":{"components/GameComponent.html":{}}}],["width",{"_index":677,"title":{},"body":{"components/GameComponent.html":{},"components/GameTabViewComponent.html":{},"components/IndexComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["width:15",{"_index":1208,"title":{},"body":{"components/ScoreTabComponent.html":{}}}],["width:20",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{}}}],["width:50",{"_index":951,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["widthdiv",{"_index":737,"title":{},"body":{"components/GameComponent.html":{}}}],["within",{"_index":1259,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["za",{"_index":167,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/GameTabViewComponent.html":{},"components/LoginComponent.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"components/ScoreTabComponent.html":{},"interfaces/User.html":{},"components/UserActionsBtnsComponent.html":{},"injectables/UserService.html":{}}}],["zadatog",{"_index":601,"title":{},"body":{"components/GameComponent.html":{}}}],["zapamti",{"_index":557,"title":{},"body":{"components/GameComponent.html":{}}}],["zapoceli",{"_index":671,"title":{},"body":{"components/GameComponent.html":{}}}],["zapoceta",{"_index":1293,"title":{},"body":{"components/UserActionsBtnsComponent.html":{}}}],["zatim",{"_index":539,"title":{},"body":{"components/GameComponent.html":{}}}],["zato",{"_index":1075,"title":{},"body":{"components/LoginComponent.html":{}}}],["zatvara",{"_index":849,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["zatvori",{"_index":947,"title":{},"body":{"components/GameTabViewComponent.html":{},"components/UserActionsBtnsComponent.html":{}}}],["zaustavi",{"_index":577,"title":{},"body":{"components/GameComponent.html":{}}}],["zaustavlja",{"_index":825,"title":{},"body":{"components/GameTabViewComponent.html":{}}}],["zauzeto",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["zavisnosti",{"_index":627,"title":{},"body":{"components/GameComponent.html":{}}}],["zavrsava",{"_index":357,"title":{},"body":{"components/GameComponent.html":{}}}],["zavrsena",{"_index":315,"title":{},"body":{"components/GameComponent.html":{}}}],["zavrsi",{"_index":297,"title":{},"body":{"components/GameComponent.html":{}}}],["zdravo",{"_index":661,"title":{},"body":{"components/GameComponent.html":{}}}],["znali",{"_index":1240,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["znači",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["zone.js",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            Prazan konstruktor \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'game-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                        title of our application \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * Component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n/** main component of our app. It is empty */\nexport class AppComponent {\n  /** title of our application */\n  title = 'game-app';\n\n  /** Prazan konstruktor */\n  constructor() {\n   }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nGameTabViewComponent\n\nGameTabViewComponent\n\nAppModule -->\n\nGameTabViewComponent->AppModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nAppModule -->\n\nIndexComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nScoreTabComponent\n\nScoreTabComponent\n\nAppModule -->\n\nScoreTabComponent->AppModule\n\n\n\n\n\nUserActionsBtnsComponent\n\nUserActionsBtnsComponent\n\nAppModule -->\n\nUserActionsBtnsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGameService\n\nGameService\n\nAppModule -->\n\nGameService->AppModule\n\n\n\n\n\nScoreService\n\nScoreService\n\nAppModule -->\n\nScoreService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GameComponent\n                        \n                        \n                            GameTabViewComponent\n                        \n                        \n                            IndexComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ScoreTabComponent\n                        \n                        \n                            UserActionsBtnsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                        \n                            ScoreService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { GameComponent } from './components/game/game.component';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from './services/user.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ScoreService } from './services/score.service';\nimport { GameService } from './services/game.service';\nimport { ScoreTabComponent } from './components/game/score-tab/score-tab.component';\nimport { UserActionsBtnsComponent } from './components/game/user-actions-btns/user-actions-btns.component';\nimport { GameTabViewComponent } from './components/game-tab-view/game-tab-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IndexComponent,\n    LoginComponent,\n    GameComponent,\n    ScoreTabComponent,\n    UserActionsBtnsComponent,\n    GameTabViewComponent\n  ],\n  imports: [\n    HttpClientModule, \n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [UserService, ScoreService, GameService, ScoreTabComponent, GameComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GameTabViewComponent } from './components/game-tab-view/game-tab-view.component';\nimport { GameComponent } from './components/game/game.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n  {path : '', component: IndexComponent ,pathMatch: 'full' },\n  {path : 'login', component: LoginComponent},\n  {path : 'game', component: GameComponent},\n  {path : 'game-table-view', component: GameTabViewComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/game.service.ts\n        \n\n            \n                Description\n            \n            \n                game interface model \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Game data represents game data in the JSON format in our Game table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Game id represents game id in our Game table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Game name represents game name in our Game table in the database \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\n\n/** game interface model */\nexport interface Game { // izgled Game podataka\n    /** Game id represents game id in our Game table in the database */\n    id  : number,\n    /** Game name represents game name in our Game table in the database */\n    name: string,\n    /** Game data represents game data in the JSON format in our Game table in the database */\n    data: string,\n  }\n/**\n * Injectable GameService\n */\n@Injectable()\nexport class GameService {\n    /** Used to mark the game as ongoing or ended. */\n    private gameEndedFlag : boolean = false;\n    /** Used to mark if the game is currently active */\n    public gameActive :boolean = true;\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5301/api\"; // glavna URL adresa za nas API\n    /**\n     * constructor\n     * @param httpClient {HttpClient} Used to issue requests to our api calls.\n     */\n    constructor(private httpClient: HttpClient) {} // preko httpclijenta kontaktiramo server\n\n    /**\n     * Used to contact microservice API and obtain the random list on success.\n     * @returns Observable - random game object from the database, structure defiend in our Game interface\n     */\n    public getGame() : Observable   { \n        // observable - za asinhrone funkcije Promise itd\n        //https://angular.io/guide/observables\n        return this.httpClient\n                .get(`${this.apiURL}/game`); // vraca promise pa moramo subscribe na mestu gde pozivamo funkcije\n    }\n    /**\n     * This method is used to create new Game in the server database\n     * @param gameObj Object to send to the microservice\n     */\n    public pushGame(gameObj: any) : Observable   {\n        return this.httpClient\n        .post(`${this.apiURL}/game`, gameObj) // gameObj je JS objekat koje salje kao JSON\n    }\n    /** \n     * Sets the game ended flag\n     * @param flag {boolean} used as the new value for our gameEndedFlag attribute\n     */\n    public setGameEndedFlag(flag: boolean){\n        this.gameEndedFlag = flag;\n    }\n    /**\n     * Getter\n     * @returns Currently active gameEndedFlag\n     */\n    public getGameEndedFlag(){\n        return this.gameEndedFlag;\n    }\n\n    /** \n     * Updates the game with new vales\n     * @param gameObj {Game} contains the new Game Object values to update \n     * @returns Observable\n     */\n    public updateGame(gameObj: Game): Observable {\n        return this.httpClient.put(`${this.apiURL}/game`, gameObj);\n    }\n    /** \n     * Removes the game on successful microservice api call.\n     * @param id {number}\n     * @returns Observable\n     */\n    public removeGame(id: number): Observable {\n        return this.httpClient.delete(`${this.apiURL}/game/${id}`);\n    }\n    /**\n     * Used to contact microservice API and obtain the games list on success.\n     * @returns Observable - List of all games that can be found in our microservice database.\n     */\n    public getAllGames(): Observable {\n        return this.httpClient\n                .get(`${this.apiURL}/game/all`);\n    }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponent.html":{"url":"components/GameComponent.html","title":"component - GameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game/game.component.ts\n\n\n    \n        Description\n    \n    \n        Component - GameComponent \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game\n            \n\n            \n                styleUrls\n                ./game.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentActiveGameName\n                            \n                            \n                                flagSelectedItems\n                            \n                            \n                                    Public\n                                gameService\n                            \n                            \n                                interval\n                            \n                            \n                                numOfTries\n                            \n                            \n                                scoreNum\n                            \n                            \n                                serverData\n                            \n                            \n                                timerHeight\n                            \n                            \n                                timerTxt\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableClickOnItems\n                            \n                            \n                                gameEndedSendScoreResult\n                            \n                            \n                                isNumberOfTriesEqualToTen\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onColumnOneClick\n                            \n                            \n                                onColumnTwoClick\n                            \n                            \n                                shuffleArray\n                            \n                            \n                                startTheGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, gameService: GameService, router: Router, scoreService: ScoreService, scoreTabComponent: ScoreTabComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game/game.component.ts:40\n                            \n                        \n\n                \n                    \n                            Konstruktor - redirektuje korisnika - igraca na stranicu za logovanje ako korisnik - igrac nije ulogovan.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                za koriscenje podataka ulogovanog igraca\n\n                                                        \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                za slanje i dobijanje podataka od microservice API\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                za promenu stranice \n\n                                                        \n                                                \n                                                \n                                                        scoreService\n                                                  \n                                                        \n                                                                        ScoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                za slanje i dobijanje podataka od microservice API\n\n                                                        \n                                                \n                                                \n                                                        scoreTabComponent\n                                                  \n                                                        \n                                                                        ScoreTabComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disableClickOnItems\n                        \n                        \n                    \n                \n            \n            \n                \ndisableClickOnItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:159\n                \n            \n\n\n            \n                \n                    Disasble pointer cursor - cursor change to pointer on hover on all column elements \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            gameEndedSendScoreResult\n                        \n                        \n                    \n                \n            \n            \n                \ngameEndedSendScoreResult()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:168\n                \n            \n\n\n            \n                \n                    Kada se igra zavrsi. Salje skor dobijen iz igre u microservice API putem gameService.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNumberOfTriesEqualToTen\n                        \n                        \n                    \n                \n            \n            \n                \nisNumberOfTriesEqualToTen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:152\n                \n            \n\n\n            \n                \n                    Proverava da li numOfTries atribut jednak 10.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:64\n                \n            \n\n\n            \n                \n                    Empty ngOnInit \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onColumnOneClick\n                        \n                        \n                    \n                \n            \n            \n                \nonColumnOneClick(item: string, pointerFlag: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:89\n                \n            \n\n\n            \n                \n                    Proverava da li je igra zavrsena, ako je igra zavrsena onemogucava da se dalje selektuju elementi kolona.\nKada se selektuje element kolone, element koji je vec bio selektovan se postavi da ne bude selektovan.\nPrikazuje da je element kolone na koji je kliknuto selektovan.\nSacuva da je selektovan u flagSelectedItems atributu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Column Game data Item\n\n                                    \n                                \n                                \n                                    pointerFlag\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        if flag is true this column answer has not been marked as a correct match answer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onColumnTwoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonColumnTwoClick(item: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:115\n                \n            \n\n\n            \n                \n                    Proverava da li je element iz prve kolone selektovan. \nPostavlja selektovan element da je selektovan.\nPovecava broj pokusaja za jedan numOfTries + 1.\nAko su selektovani elementi iz prve i druge kolone odgovarajuci povecava za jedan scoreNum atribut.\nSet both fields as not selected.\nProverava da li je broj pokušaja 10, ako je broj pokusaja 10 igra se zavrsava.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Column Game data Item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffleArray\n                        \n                        \n                    \n                \n            \n            \n                \nshuffleArray(array: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:71\n                \n            \n\n\n            \n                \n                    Funkcija na slucajan nacin premesta elemente nizaova za obadve kolone koje se prikazuju igracima tokom igre.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startTheGame\n                        \n                        \n                    \n                \n            \n            \n                \nstartTheGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/game.component.ts:191\n                \n            \n\n\n            \n                \n                    Metod koji inicijalizuje sve parametre kada nova igra pocne.\nPostavlja vrednosti numOfTries i scoreNum na 0.\nPostavlja igru da je aktivna.\nUzima novu slucjno izabranu igru tj njene podatke iz microservise API via GameService.\nIspremesta elemente oba niza, koji se prikazuju kao elementi kolona, na slucajan nacin.\nStartuje novi tajmer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentActiveGameName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:33\n                            \n                        \n\n                \n                    \n                        Sadrzi naziv trenutno aktivne igre. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagSelectedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    one: \"\",\n    two: \"\"\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:35\n                            \n                        \n\n                \n                    \n                        Sluzi za cuvanje selectovanih polja iz obe kolone radi lakse provere \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gameService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GameService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:51\n                            \n                        \n\n                \n                    \n                        za slanje i dobijanje podataka od microservice API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:40\n                            \n                        \n\n                \n                    \n                        Vremenski interval za tajmer, nedefinisan na pocetku \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numOfTries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:27\n                            \n                        \n\n                \n                    \n                        Broj pokušaja pogadjanja odgovarajucuih parova koje je igrac iskoristio.\nPosle 10 pokušaja igra se zavrsava. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreNum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:29\n                            \n                        \n\n                \n                    \n                        Broj tacno pogodjenih parova. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:31\n                            \n                        \n\n                \n                    \n                        Lista koja sadrzi podatke o igri dobijene od servera. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:24\n                            \n                        \n\n                \n                    \n                        Predstavllja procenat koliko vremena je ostalo, sluzi za iscrtavanje vizualnog timer-a\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Sekunde...\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:22\n                            \n                        \n\n                \n                    \n                        Predstavlja broj preostalih sekundi koje su prikazane iznad tajmera dok je igra aktivna \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/game.component.ts:50\n                            \n                        \n\n                \n                    \n                        za koriscenje podataka ulogovanog igraca\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GameService } from 'src/app/services/game.service';\nimport { ScoreService } from 'src/app/services/score.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { ScoreTabComponent } from './score-tab/score-tab.component';\n/** JS funkcija definisana u index.html file. Funkcija koja prikazuje modal korisniku - igracu sa tekstom. */\ndeclare const sendMessageUserModal: any;\n\n/** Component - GameComponent */\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\n/**\n * Komponenta koja omogucava igracu da igra igru.\n * Takodje koristi i druge komponente : app-score-tab i app-user-actions-btns\n */\nexport class GameComponent implements OnInit {\n  /** Predstavlja broj preostalih sekundi koje su prikazane iznad tajmera dok je igra aktivna */\n  timerTxt : string = \"Sekunde...\"; \n  /** Predstavllja procenat koliko vremena je ostalo, sluzi za iscrtavanje vizualnog timer-a*/\n    timerHeight: number = 100; \n  /** Broj pokušaja pogadjanja odgovarajucuih parova koje je igrac iskoristio.\n   * Posle 10 pokušaja igra se zavrsava. */\n  numOfTries : number = 0; \n  /** Broj tacno pogodjenih parova. */\n  scoreNum : number = 0;\n  /**Lista koja sadrzi podatke o igri dobijene od servera. */\n  serverData : any = []; \n  /** Sadrzi naziv trenutno aktivne igre. */\n  currentActiveGameName = \"\";\n  /** Sluzi za cuvanje selectovanih polja iz obe kolone radi lakse provere */\n  flagSelectedItems = {\n    one: \"\",\n    two: \"\"\n  }\n  /** Vremenski interval za tajmer, nedefinisan na pocetku */\n  interval : any = undefined;\n\n  /**\n   * Konstruktor - redirektuje korisnika - igraca na stranicu za logovanje ako korisnik - igrac nije ulogovan.\n   * @param userService {UserService} za koriscenje podataka ulogovanog igraca\n   * @param gameService {GameService} za slanje i dobijanje podataka od microservice API\n   * @param router {Router} za promenu stranice \n   * @param scoreService {ScoreService} za slanje i dobijanje podataka od microservice API\n   * @param scoreTabComponent {ScoreTabComponent}\n   */\n  constructor(public userService : UserService,\n     public gameService : GameService, // kontaktiranje APIja\n     private router:Router, // za promenu strane\n     private scoreService: ScoreService, // kontaktira API\n     private scoreTabComponent : ScoreTabComponent) {\n    if(userService.getLoggedinUser().id === -1){\n      // ako nije logovan radi reddirect na /login stranu\n      // -1 smo stavili kao defaultni i za logout kada nema user-a logovanog\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n      this.router.navigate([\"/login\"]));\n    }\n    this.serverData = [];\n  }\n  /** Empty ngOnInit */\n  ngOnInit(): void {\n   \n  \n  } //ngOnInit end;\n  /**\n   * Funkcija na slucajan nacin premesta elemente nizaova za obadve kolone koje se prikazuju igracima tokom igre.\n  */\n  shuffleArray(array:Array) { // da rasporedi random elemente liste\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));         \n        var temp = array[i]; \n        array[i] = array[j]; \n        array[j] = temp; \n    }\n    return array;\n}\n\n/**\n * Proverava da li je igra zavrsena, ako je igra zavrsena onemogucava da se dalje selektuju elementi kolona.\n * Kada se selektuje element kolone, element koji je vec bio selektovan se postavi da ne bude selektovan.\n * Prikazuje da je element kolone na koji je kliknuto selektovan.\n * Sacuva da je selektovan u flagSelectedItems atributu.\n * @param item {string} Column Game data Item\n * @param pointerFlag {boolean} if flag is true this column answer has not been marked as a correct match answer\n */\n  onColumnOneClick(item:string, pointerFlag:boolean){\n    if(!pointerFlag){return;}\n    //(click)=\"onColumnOneClick(item.columnOne)\" u html fajlu\n    // za elemente prve kolone\n    if(this.gameService.getGameEndedFlag()){ // ako je igra zavrsena nema korisnik prava da igra dalje\n      return;\n    }\n    this.serverData.dataOne.forEach((e:any) =>{ \n      // kada se jedan element  selektuje samo on moze da bude selektovan,\n      // stavi svaki drugi da nije selektovan\n      e.selectedOne = false;\n    })\n    let foundItem = this.serverData.dataOne.find((elem:any) => { // nadju onaj koj je kliknut u nasoj listi\n      return elem.columnOne === item});\n    foundItem.selectedOne = true; // na kliknut elemenat stavi da je selektovan\n    this.flagSelectedItems.one = item; // upamti koji je selektovan\n  }\n/**\n * Proverava da li je element iz prve kolone selektovan. \n * Postavlja selektovan element da je selektovan.\n * Povecava broj pokusaja za jedan numOfTries + 1.\n * Ako su selektovani elementi iz prve i druge kolone odgovarajuci povecava za jedan scoreNum atribut.\n * Set both fields as not selected.\n * Proverava da li je broj pokušaja 10, ako je broj pokusaja 10 igra se zavrsava.\n * @param item {string} Column Game data Item\n */\n  onColumnTwoClick(item:string){\n    // kada se klikne na elemenat druge kolone\n    // proveri da li je selektovan neki iz prve kolone\n    let foundItem = this.serverData.dataOne.find((elem:any) => {\n      return elem.selectedOne === true\n    });\n    if(!foundItem){return;} // ako nije selektovan ni jedan element iz prve kolone ne radi nista\n    // korisnik mora da izabere iz prve kolone zatim iz druge\n    this.serverData.dataTwo.forEach((e:any) =>{e.selectedTwo = false;})// stavi svaki da nije selektovan\n    foundItem = this.serverData.dataTwo.find((elem:any) => { \n      // nadji kliknut elemenat i selektuj ga\n      return elem.columnTwo === item});\n    if(foundItem.success){return;} // ako je polje markirano da je tacno izabrano, nezelimo da povecavamo broj pokusaja i da idemo dalje\n    foundItem.selectedTwo = true;\n    this.numOfTries++;\n    this.flagSelectedItems.two = item; // zapamti koji je selektovan\n    let isSuccess = this.serverData.data.find((elem:any) => {\n      // prodji kroz server listu i upredi ako postoji par izmendju selektovanih u prvoj i drugoj koloni\n      return elem.columnOne === this.flagSelectedItems.one && elem.columnTwo === this.flagSelectedItems.two\n    });\n    if(isSuccess){ // ako je tacan par\n      foundItem.success = true; // stavi ih da je par pronadjen\n      foundItem.pointer = false; // zaustavi da korisnik moze da klikce \n      this.scoreNum++; // povecaj SCORE\n    }\n    this.serverData.dataTwo.forEach((e:any)=>{\n      e.selectedOne = false;\n      e.selectedTwo = false;\n    }) // postavi svaki da nije selektovan\n    if(this.isNumberOfTriesEqualToTen()){\n      this.gameEndedSendScoreResult();\n    }\n  }\n/**\n * Proverava da li numOfTries atribut jednak 10.\n * @returns {boolean}\n */\n  isNumberOfTriesEqualToTen():boolean{\n    // Igra treba da bude gotova ako je numOfTries === 10\n    if(this.numOfTries === 10){\n      return true;\n    } return false;\n  }\n  /** Disasble pointer cursor - cursor change to pointer on hover on all column elements */\n  disableClickOnItems():void{\n    // zaustavi klik animaciju\n    this.serverData.data.forEach((e:any)=>{\n      e.pointer = false;\n    });\n  }\n  /**\n   * Kada se igra zavrsi. Salje skor dobijen iz igre u microservice API putem gameService.\n   */\n  gameEndedSendScoreResult(){\n    this.gameService.gameActive = true;\n    this.gameService.setGameEndedFlag(true); // igra je gotova\n    sendMessageUserModal(\"Igra je zavrsena!\")\n    this.disableClickOnItems();\n      this.scoreService.pushScore( // dodaj score na server\n        // server radi proveru i cuva samo najbolji score od zadatog user-a\n      this.scoreNum,\n      this.userService.getLoggedinUser().username\n    ).subscribe((data:any)=>{\n      console.log(data)\n      this.scoreTabComponent.updateScoreTableView();\n    });\n  }\n\n  /**\n   * Metod koji inicijalizuje sve parametre kada nova igra pocne.\n   * Postavlja vrednosti numOfTries i scoreNum na 0.\n   * Postavlja igru da je aktivna.\n   * Uzima novu slucjno izabranu igru tj njene podatke iz microservise API via GameService.\n   * Ispremesta elemente oba niza, koji se prikazuju kao elementi kolona, na slucajan nacin.\n   * Startuje novi tajmer.\n   */\n  startTheGame(){\n    this.gameService.setGameEndedFlag(false);\n    this.timerHeight = 100; // %\n    try{clearInterval(this.interval);}catch{};\n\n    this.numOfTries= 0; \n    this.scoreNum = 0; \n\n    // vucemo podatke sa servera\n    // random radimo za 2 nove liste kako bi redosled u obe kolone bio drugaciji, svaki prikaz kolone je prikaz iz druge liste\n    this.gameService.getGame().subscribe((data)=>{\n      this.currentActiveGameName = data.name;\n      this.serverData.data = JSON.parse(data.data);\n        this.serverData.data.forEach((e: any) => {\n          e.pointer = true;\n        // da moze da se klikne na elemenat\n        // [ngClass] u .html fajlu postavlja CSS imena u zavisnosti od true/false boolean varijabli\n      })\n      this.serverData.dataOne = this.shuffleArray(this.serverData.data);\n      this.serverData.dataTwo=[]\n      Object.keys(this.serverData.dataOne).forEach(key=>this.serverData.dataTwo[key]=this.serverData.dataOne[key]);\n      this.serverData.dataTwo = this.shuffleArray(this.serverData.dataTwo);\n    \n      //postavljamo nas timer ispod.....\n      //let timerInMinutes = 1;\n      //let timerInSeconds = timerInMinutes * 60000;\n      let timerInSeconds = 60000;\n      let howManySeconds = timerInSeconds/1000;\n      let decreasePerMin = 100/howManySeconds;\n      this.timerTxt = `${howManySeconds}`; // timerTxt se prikazuje u .html fajlu\n      this.interval = setInterval(() => { // stavljamo interval da ide na svakih 1s da se izvrsi funkcija unutar\n        if(this.gameService.getGameEndedFlag()){clearInterval(this.interval);} // ako je igra zavrsena prestaje sa intervalom\n        howManySeconds--; // umanji sekunde za 1s\n        this.timerTxt = `${howManySeconds}`;// timerTxt se prikazuje u .html fajlu\n        this.timerHeight -= decreasePerMin; // da smanji % prikaza timera graficki\n        if (this.timerHeight \n    \n\n    \n        \n\n    Zdravo {{this.userService.getLoggedinUser().username}}!\n\n    Spoite polja sa leve strane sa odgovarajucim poljima sa desne strane!\n\n    \n    \n    \n        \n        \n            \n            \n              \n              \n\n        \n              \n                {{this.currentActiveGameName}}\n              \n        \n\n              \n\n                Broj pokusaja: {{numOfTries}}\n\n                Osvojeni poeni: {{scoreNum}}\n\n              \n\n              {{timerTxt}}\n            \n            \n            \n        \n        \n\n        \n            Kliknite na dugme Nova Igra kako bi zapoceli igru!\n        \n\n          \n            \n            \n                \n                    \n                        {{item.columnOne}}\n                    \n                \n            \n            \n                \n                \n            \n            \n                \n                    {{itemz.columnTwo}}\n                \n            \n            \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./game.component.css\n                \n                .row{\n    margin: 0 auto;\n    width: 80%;\n}\n.progress-bar-vertical {\n    width: 50px;\n    min-height: 100px;\n    display: flex;\n    align-items: flex-end;\n    margin-right: 20px;\n    margin-left:5%;\n    height:100%;\n    \n    background-color: red ;\n    }\n\n    .progress-bar-vertical .progress-bar {\n    width: 100%;\n    height: 0;\n    -webkit-transition: height 0.6s ease;\n    -o-transition: height 0.6s ease;\n    transition: height 0.6s ease;\n    height:200px; \n    }\n.list-group-item-action{\n    text-align: center;\n    margin-top:2px;\n    margin-bottom: 2px;\n    border-bottom: 2px solid #325DDA;\n    background-color: #3061ED;\n    color : white;\n}\n.list-group{\n    border: 2px solid white;\n}\n.list-group-item-success{\n    background-color: purple;\n}\n.list-group-item-secondary{\n    background-color:#B45F04;\n}\n.list-group-item:hover{background-color: white; color:black;}\n#numOfTriesDiv{\n    margin-right: 20px;\n    margin-left: 30px;\n    font-size: 20px;\n    color:#8A0808;\n    /*background-color: brown;*/\n    /*margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 5px;*/\n}\n.numStats {\n  font-size: 20px;\n  padding: 1px;\n}\n\n#pointsDiv{\n    width: 100%;\n}\n#scoreNumDiv{\n    /*background-color:forestgreen;*/\n    margin-left: 90px;\n    font-size: 20px;\n    color:#40FF00;\n    /*margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 5px;*/\n}\n\n.widthdiv{\n    width: 520px;\n}\n\n.margin-top-br{\n    margin-top: 5px;\n}\n.pointer {cursor: pointer;}\n.color-text-white{color:white}\n.top-margin{\n    margin-top: 20px;\n}\n#helloUsername{\n    color:white;\n    margin: 0px auto;\n    text-align: center;\n    font-size: 38px;\n}\n\n#obaveštenje {\n  color: white;\n  margin: 0px auto;\n  text-align: center;\n  font-size: 38px;\n}\n#timerSecondsLeft{\n    color: red;\n    font-weight: bold;\n    font-size: 40px;\n    margin-bottom: 10px;\n    margin-top:5px;\n}\n#gameName{\n    Color: white;\n    padding: 3px;\n    background-color: rgba(0, 0, 0, 0.2);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Zdravo {{this.userService.getLoggedinUser().username}}!    Spoite polja sa leve strane sa odgovarajucim poljima sa desne strane!                                                                                                                      {{this.currentActiveGameName}}                                                    Broj pokusaja: {{numOfTries}}                Osvojeni poeni: {{scoreNum}}                            {{timerTxt}}                                                                        Kliknite na dugme Nova Igra kako bi zapoceli igru!                                                                                                      {{item.columnOne}}                                                                                                                                                        {{itemz.columnTwo}}                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/game.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable GameService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                            \n                                    Public\n                                gameActive\n                            \n                            \n                                    Private\n                                gameEndedFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllGames\n                            \n                            \n                                    Public\n                                getGame\n                            \n                            \n                                    Public\n                                getGameEndedFlag\n                            \n                            \n                                    Public\n                                pushGame\n                            \n                            \n                                    Public\n                                removeGame\n                            \n                            \n                                    Public\n                                setGameEndedFlag\n                            \n                            \n                                    Public\n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/game.service.ts:24\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to issue requests to our api calls.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllGames\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllGames()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:84\n                \n            \n\n\n            \n                \n                    Used to contact microservice API and obtain the games list on success.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable - List of all games that can be found in our microservice database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:35\n                \n            \n\n\n            \n                \n                    Used to contact microservice API and obtain the random list on success.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable - random game object from the database, structure defiend in our Game interface\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGameEndedFlag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGameEndedFlag()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:60\n                \n            \n\n\n            \n                \n                    Getter\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Currently active gameEndedFlag\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pushGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pushGame(gameObj: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:45\n                \n            \n\n\n            \n                \n                    This method is used to create new Game in the server database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gameObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to send to the microservice\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeGame(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:77\n                \n            \n\n\n            \n                \n                    Removes the game on successful microservice api call.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setGameEndedFlag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setGameEndedFlag(flag: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:53\n                \n            \n\n\n            \n                \n                    Sets the game ended flag\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    flag\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        used as the new value for our gameEndedFlag attribute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGame(gameObj: Game)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:69\n                \n            \n\n\n            \n                \n                    Updates the game with new vales\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gameObj\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contains the new Game Object values to update \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://localhost:5301/api\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/game.service.ts:24\n                            \n                        \n\n                \n                    \n                        URL to our microservice api. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gameActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/game.service.ts:22\n                            \n                        \n\n                \n                    \n                        Used to mark if the game is currently active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gameEndedFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/game.service.ts:20\n                            \n                        \n\n                \n                    \n                        Used to mark the game as ongoing or ended. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\n\n/** game interface model */\nexport interface Game { // izgled Game podataka\n    /** Game id represents game id in our Game table in the database */\n    id  : number,\n    /** Game name represents game name in our Game table in the database */\n    name: string,\n    /** Game data represents game data in the JSON format in our Game table in the database */\n    data: string,\n  }\n/**\n * Injectable GameService\n */\n@Injectable()\nexport class GameService {\n    /** Used to mark the game as ongoing or ended. */\n    private gameEndedFlag : boolean = false;\n    /** Used to mark if the game is currently active */\n    public gameActive :boolean = true;\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5301/api\"; // glavna URL adresa za nas API\n    /**\n     * constructor\n     * @param httpClient {HttpClient} Used to issue requests to our api calls.\n     */\n    constructor(private httpClient: HttpClient) {} // preko httpclijenta kontaktiramo server\n\n    /**\n     * Used to contact microservice API and obtain the random list on success.\n     * @returns Observable - random game object from the database, structure defiend in our Game interface\n     */\n    public getGame() : Observable   { \n        // observable - za asinhrone funkcije Promise itd\n        //https://angular.io/guide/observables\n        return this.httpClient\n                .get(`${this.apiURL}/game`); // vraca promise pa moramo subscribe na mestu gde pozivamo funkcije\n    }\n    /**\n     * This method is used to create new Game in the server database\n     * @param gameObj Object to send to the microservice\n     */\n    public pushGame(gameObj: any) : Observable   {\n        return this.httpClient\n        .post(`${this.apiURL}/game`, gameObj) // gameObj je JS objekat koje salje kao JSON\n    }\n    /** \n     * Sets the game ended flag\n     * @param flag {boolean} used as the new value for our gameEndedFlag attribute\n     */\n    public setGameEndedFlag(flag: boolean){\n        this.gameEndedFlag = flag;\n    }\n    /**\n     * Getter\n     * @returns Currently active gameEndedFlag\n     */\n    public getGameEndedFlag(){\n        return this.gameEndedFlag;\n    }\n\n    /** \n     * Updates the game with new vales\n     * @param gameObj {Game} contains the new Game Object values to update \n     * @returns Observable\n     */\n    public updateGame(gameObj: Game): Observable {\n        return this.httpClient.put(`${this.apiURL}/game`, gameObj);\n    }\n    /** \n     * Removes the game on successful microservice api call.\n     * @param id {number}\n     * @returns Observable\n     */\n    public removeGame(id: number): Observable {\n        return this.httpClient.delete(`${this.apiURL}/game/${id}`);\n    }\n    /**\n     * Used to contact microservice API and obtain the games list on success.\n     * @returns Observable - List of all games that can be found in our microservice database.\n     */\n    public getAllGames(): Observable {\n        return this.httpClient\n                .get(`${this.apiURL}/game/all`);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameTabViewComponent.html":{"url":"components/GameTabViewComponent.html","title":"component - GameTabViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GameTabViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game-tab-view/game-tab-view.component.ts\n\n\n    \n        Description\n    \n    \n        Component - GameTabViewComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-tab-view\n            \n\n            \n                styleUrls\n                ./game-tab-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game-tab-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formInputInvalid\n                            \n                            \n                                    Private\n                                gameTableList\n                            \n                            \n                                    Public\n                                inputGameData\n                            \n                            \n                                    Private\n                                inputIDClicked\n                            \n                            \n                                    Public\n                                inputNameGameData\n                            \n                            \n                                    Private\n                                isCreateModalActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIfFieldsNotEmpty\n                            \n                            \n                                getGameTableList\n                            \n                            \n                                getIsCreateModalActive\n                            \n                            \n                                initEmptyInputUpdateForm\n                            \n                            \n                                initMainDataTable\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCreateNewGame\n                            \n                            \n                                onCreateNewGameSubmit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onUpdateGameFormSubmit\n                            \n                            \n                                onUpdateOpenDialog\n                            \n                            \n                                onUpdatGameModalClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game-tab-view/game-tab-view.component.ts:34\n                            \n                        \n\n                \n                    \n                            Konstruktor : ako igrac nije admin, igrac ce biti redirektovan na login stranicu.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkIfFieldsNotEmpty\n                        \n                        \n                    \n                \n            \n            \n                \ncheckIfFieldsNotEmpty()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:157\n                \n            \n\n\n            \n                \n                    Proverava da li su sva polja na panelu za unos podataka popunjena.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        vrednost\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGameTableList\n                        \n                        \n                    \n                \n            \n            \n                \ngetGameTableList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:150\n                \n            \n\n\n            \n                \n                    Getter\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        gameTableList atribut \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsCreateModalActive\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsCreateModalActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:209\n                \n            \n\n\n            \n                \n                    Getter\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        podatak da li je panel za unos podataka aktivan ili ne.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initEmptyInputUpdateForm\n                        \n                        \n                    \n                \n            \n            \n                \ninitEmptyInputUpdateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:57\n                \n            \n\n\n            \n                \n                    Isprazni sva polja na panelu za unos podataka \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initMainDataTable\n                        \n                        \n                    \n                \n            \n            \n                \ninitMainDataTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:66\n                \n            \n\n\n            \n                \n                    Method koristi gameService da uzme podatke o svim igrama i prikazuje ih igracima \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:80\n                \n            \n\n\n            \n                \n                    Postavlja vrednost gameEndedFlag attributa iz GameService klase na true.\npoziva metod initMainDataTable.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCreateNewGame\n                        \n                        \n                    \n                \n            \n            \n                \nonCreateNewGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:173\n                \n            \n\n\n            \n                \n                    Isprazni sva polja panela za unos podataka i prikaze panel za unos podataka.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCreateNewGameSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonCreateNewGameSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:185\n                \n            \n\n\n            \n                \n                    Proverava da li su sva polja popunjena.\nAko nisu sva polja popunjena zaustavlja izvrsavanje metode. \nAko su sva polja popunjena kreirace strukturu podataka igre i prosledice taj objekat GameService pushGame funkciji\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:127\n                \n            \n\n\n            \n                \n                    Brise vrstu iz baze podataka koja sadrzi podatke o izabranoj igri. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Sadrzi id igre koja se brise iz baze podataka.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdateGameFormSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdateGameFormSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:89\n                \n            \n\n\n            \n                \n                    Metod se poziva kada igrac odabere da promeni igru.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdateOpenDialog\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdateOpenDialog(item: Game)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:139\n                \n            \n\n\n            \n                \n                    Prikazuje panel sa podacima izabrane igre.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Sadrzi podatke o igri koja se menja.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdatGameModalClose\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdatGameModalClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:116\n                \n            \n\n\n            \n                \n                    Resetuje sva polja i zatvara Input panel za promenu igre.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formInputInvalid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:30\n                            \n                        \n\n                \n                    \n                        Sadrzi informaciju da li su sva polja popunjena na panelu za unos podataka, kada se menja ili kreira nova igra. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gameTableList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:24\n                            \n                        \n\n                \n                    \n                        Sadrzi podatke o igri koji nisu prikazani na pocetku.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputGameData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:26\n                            \n                        \n\n                \n                    \n                        Sadrzi niz polja za unos podataka za menjanje igre ili za kreiranje nove igre. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputIDClicked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:32\n                            \n                        \n\n                \n                    \n                        Kada se menja igra, to polje sadrzi ID igre u bazi podataka. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputNameGameData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        Sadrzi naziv igre kada se menja igra ili kada se kreira nova igra \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isCreateModalActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game-tab-view/game-tab-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        Informacija da li je panel za unos podataka aktivan bez obzira da li se menja igra ili se kreira nova igra. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Game, GameService } from 'src/app/services/game.service';\nimport { UserService } from 'src/app/services/user.service';\n/** JS funkcija definisana u index.html fajlu. Funkcija koja inicijalizuje modal kada se pozove. */\ndeclare const initializeUpdateGameModalVar: any;\n/** JS funkcija definisana u index.html fajlu. Funkcija koja prikazuje modal. */\ndeclare const updateGameModalShow: any;\n/** JS funkcija definisana u index.html fajlu. Funkcija koja prikazuje modal sa tekstom. */\ndeclare const sendMessageUserModal: any;\n/**\n * Component - GameTabViewComponent\n */\n@Component({\n  selector: 'app-game-tab-view',\n  templateUrl: './game-tab-view.component.html',\n  styleUrls: ['./game-tab-view.component.css']\n})\n/**\n * GameTabViewComponent - stranica koja omogucava adminu da menja, brise i kreira nove igre\n */\nexport class GameTabViewComponent implements OnInit {\n  /** Sadrzi podatke o igri koji nisu prikazani na pocetku.*/\n  private gameTableList : Array = [];\n  /** Sadrzi niz polja za unos podataka za menjanje igre ili za kreiranje nove igre. */\n  public inputGameData : Array = [];\n  /** Sadrzi naziv igre kada se menja igra ili kada se kreira nova igra */\n  public inputNameGameData : string = \"\";\n  /**Sadrzi informaciju da li su sva polja popunjena na panelu za unos podataka, kada se menja ili kreira nova igra. */\n  public formInputInvalid : boolean = false;\n  /** Kada se menja igra, to polje sadrzi ID igre u bazi podataka. */\n  private inputIDClicked: number = -1;\n  /** Informacija da li je panel za unos podataka aktivan bez obzira da li se menja igra ili se kreira nova igra. */\n  private isCreateModalActive : boolean = false;\n  /**\n   * Konstruktor : ako igrac nije admin, igrac ce biti redirektovan na login stranicu.\n   * @param userService {UserService}\n   * @param router {Router}\n   * @param gameService {GameService}\n   */\n  constructor(\n    private userService : UserService,\n    private router: Router,\n    private gameService : GameService,\n  ) {\n    if(userService.getLoggedinUser().role != \"admin\"){\n      // korisnik mora da bude admin kako bi pristupio strani!\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=> \n      this.router.navigate([\"/login\"])); \n      console.log(\"not loggedin!\")\n    }\n    this.initEmptyInputUpdateForm(); \n    this.gameService.gameActive = false;\n   }\n\n    /** Isprazni sva polja na panelu za unos podataka */\n   initEmptyInputUpdateForm(){\n     // postavlja sva polja za izmene na prazne stringove\n    this.inputGameData = [];\n    for(let i = 0; i {\n      this.gameTableList = e;\n      console.log(e)\n    },(err)=>{\n      console.log(err)\n      sendMessageUserModal(\"Doslo je do greske pri ucitavanju podataka...\")\n    })\n   }\n  /**\n   * Postavlja vrednost gameEndedFlag attributa iz GameService klase na true.\n   * poziva metod initMainDataTable.\n   */\n  ngOnInit(): void {\n    this.gameService.setGameEndedFlag(true);\n    this.initMainDataTable();\n    \n    initializeUpdateGameModalVar();\n  }\n  /**\n   * Metod se poziva kada igrac odabere da promeni igru.\n   */\n  onUpdateGameFormSubmit():void{\n    if(!this.checkIfFieldsNotEmpty()){\n      this.formInputInvalid = true;\n      return;\n    } else{ this.formInputInvalid = false;}\n\n    let item = {\n      id: this.inputIDClicked,\n      name: this.inputNameGameData,\n      data: JSON.stringify(this.inputGameData)\n    }\n\n    this.gameService.updateGame(item).subscribe((e)=>{\n      this.onUpdatGameModalClose();\n      sendMessageUserModal(`igra je promenjena ${item.id}`);\n      this.initMainDataTable();\n    },(err)=>{\n      this.onUpdatGameModalClose();\n      sendMessageUserModal(`doslo je do greske kod menjanja igre ${item.id}`);\n      this.initEmptyInputUpdateForm();\n    });\n    \n  }\n\n  /**\n   * Resetuje sva polja i zatvara Input panel za promenu igre.\n   */\n  onUpdatGameModalClose():void{\n    updateGameModalShow(false);\n    this.inputGameData = [];\n    this.formInputInvalid = false;\n    this.initEmptyInputUpdateForm();\n  }\n\n  /**\n   * Brise vrstu iz baze podataka koja sadrzi podatke o izabranoj igri. \n   * @param id {number} Sadrzi id igre koja se brise iz baze podataka.\n   */\n  onDelete(id:number):void{\n      console.log(id)\n      this.gameService.removeGame(id).subscribe(  (e) => { sendMessageUserModal(`igra je obrisana ${id}`); this.initMainDataTable(); }\n                                                  ,\n                                                  (err) => { sendMessageUserModal(`doslo je do greske prilikom brisanja igre ${id}`); }\n                                               );\n  }\n\n  /**\n   * Prikazuje panel sa podacima izabrane igre.\n   * @param {Game} item  Sadrzi podatke o igri koja se menja.\n   */\n  onUpdateOpenDialog(item:Game):void{\n    this.isCreateModalActive = false;\n    updateGameModalShow(true);\n    this.inputGameData = JSON.parse(item.data);\n    this.inputNameGameData = item.name;\n    this.inputIDClicked = item.id;\n  }\n  /**\n   * Getter\n   * @returns {Array} gameTableList atribut \n   */\n  getGameTableList(){\n    return this.gameTableList;\n  }\n  /**\n   * Proverava da li su sva polja na panelu za unos podataka popunjena.\n   * @returns {boolean} vrednost\n   */\n  checkIfFieldsNotEmpty():boolean{\n    let returnBool = true;\n    if(this.inputNameGameData.trim() === \"\"){\n      return false;\n    }\n    this.inputGameData.forEach((e)=>{\n      if (e.columnOne.trim() === \"\" || e.columnTwo.trim() === \"\"){\n        returnBool = false\n      }\n    });\n    return returnBool;\n  }\n\n  /**\n   * Isprazni sva polja panela za unos podataka i prikaze panel za unos podataka.\n   */\n  onCreateNewGame(){\n    this.initEmptyInputUpdateForm();\n    this.isCreateModalActive = true;\n    updateGameModalShow(true);\n    this.inputNameGameData = \"\";\n  }\n\n  /**\n   * Proverava da li su sva polja popunjena.\n   * Ako nisu sva polja popunjena zaustavlja izvrsavanje metode. \n   * Ako su sva polja popunjena kreirace strukturu podataka igre i prosledice taj objekat GameService pushGame funkciji\n   */\n  onCreateNewGameSubmit(){\n    if(!this.checkIfFieldsNotEmpty()){\n      this.formInputInvalid = true;\n      return;\n    } else{ this.formInputInvalid = false;}\n    this.formInputInvalid = false;\n\n    let item = {\n      name: this.inputNameGameData,\n      data: JSON.stringify(this.inputGameData)\n    }\n    this.gameService.pushGame(item).subscribe((data)=>{\n      this.onUpdatGameModalClose();\n      sendMessageUserModal(\"Nova Igra Uspesno Napravljena\");\n      this.initMainDataTable();\n    }, (err)=>{\n      sendMessageUserModal(\"Doslo je do greske, igra nije mogla da se napravi\");\n    });\n\n  }\n  /**\n   * Getter\n   * @returns {boolean} podatak da li je panel za unos podataka aktivan ili ne.\n   */\n  getIsCreateModalActive():boolean{\n    return this.isCreateModalActive;\n  }\n\n}\n\n    \n\n    \n        \n    Napravi Nove Igre - Izmeni Igre - Izbriši Igre\n\n\n\n\n\n\n\n\n\n\n    Pocetna\n\n\n\n\n    Igra\n\n\n\n\n\n\n\nNapravi novu igru\n    \n\n    \n        \n            id\n            Naziv Igre\n             akcije \n        \n    \n    \n        \n            {{item.id}}\n            {{item.name}}\n            \n                Izmeni\n                Ukloni\n            \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n    Igra\n    \n    \n    \n      \n        \n        \n          1.\n          \n            \n            \n          \n\n          2.\n          \n            \n            \n          \n\n          3.\n          \n            \n            \n          \n\n          4.\n          \n            \n            \n          \n\n          5.\n          \n            \n            \n          \n\n          6.\n          \n            \n            \n          \n\n          7.\n          \n            \n            \n          \n\n          8.\n          \n            \n            \n          \n\n           -->\n          Izmeni Igre -->\n           -->\n\n          9.\n          \n            \n            \n          \n\n          10.\n          \n            \n            \n          \n        \n        Morate popuniti sva polja!\n        \n            IZMENI\n        \n        \n            KREIRAJ\n        \n        \n            ZATVORI\n        \n    \n    \n    \n    \n    \n    \n\n    \n\n    \n                \n                    ./game-tab-view.component.css\n                \n                h1{\n    color:#D8D8D8;\n}\n#datatablee{\n    width:50%;\n    color:#D8D8D8;\n    background-color:#0A1B2A;\n    opacity: 0.7;\n}\ntr{\n    border: 2px solid #CEE3F6;\n}\nth{\n    color:#F3F781;\n    width: 33.33%;\n    text-align: center;\n}\n\n#additionalLinksBtn{\n    margin-bottom:20px;\n}\n#additionalLinksBtn button{\n    background-color:#0A1B2A;\n    margin-right:10px;\n}\n#thScore{\n    cursor: pointer;\n}\ntd button{\n    margin-right:5px;\n    padding-top:1px;\n    padding-bottom: 1px;\n}\ntd{\n    text-align: center;\n}\n\n.text-orange-create{\n    color: orange;\n    background-color:#0A1B2A;\n    margin-left: 25%;\n    margin-bottom: 10px;\n}\n\n#formCreateGame button{\n    margin-top:8px;\n    margin-right: 5px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Napravi Nove Igre - Izmeni Igre - Izbriši Igre    Pocetna    IgraNapravi novu igru                            id            Naziv Igre             akcije                                     {{item.id}}            {{item.name}}                            Izmeni                Ukloni                                        Igra                                            1.                                                      2.                                                      3.                                                      4.                                                      5.                                                      6.                                                      7.                                                      8.                                                       -->          Izmeni Igre -->           -->          9.                                                      10.                                                            Morate popuniti sva polja!                    IZMENI                            KREIRAJ                            ZATVORI                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameTabViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndexComponent.html":{"url":"components/IndexComponent.html","title":"component - IndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/index/index.component.ts\n\n\n    \n        Description\n    \n    \n        Component IndexComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-index\n            \n\n            \n                styleUrls\n                ./index.component.css\n            \n\n\n\n            \n                templateUrl\n                ./index.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/index/index.component.ts:14\n                            \n                        \n\n                \n                    \n                            Konstruktor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/index/index.component.ts:24\n                \n            \n\n\n            \n                \n                    Postavlja gameService - gameActive atribut na false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GameService } from 'src/app/services/game.service';\n/**  Component IndexComponent*/\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\n\n/**\n *  prva komponenta koja se ucitava kada je korisnik na glavnoj strani tj. kada se otvori glavni URL web sajta\n */\nexport class IndexComponent implements OnInit\n{\n  /**\n   * Konstruktor\n   * @param gameService {GameService}\n   */\n  constructor( private gameService: GameService) { }\n\n  /** \n   * Postavlja gameService - gameActive atribut na false\n   */\n    ngOnInit(): void\n    {\n      this.gameService.gameActive = false;\n    }\n\n}\n\n    \n\n    \n        \n   IGRA SPOJNICE \n\n\n\n   Spojiti nazive sa leve strane sa odgovarajucim nazivima desne strane \n   Logujte se kako bi igrali Ili napravite novi nalog \n\n\n\n  \n    Igraj!\n  \n\n  \n  \n\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./index.component.css\n                \n                body{\n          background-color:#5882FA;\n          color: white;\n      }\n      h1 {\n        text-align: center; \n        display: inline-block;\n      }\n      .list-group a{\n          margin-top:5px;\n          margin-bottom:5px;\n      }\n      #additionalLinksBtn{\n        margin-bottom:20px;\n    }\n    #additionalLinksBtn button{\n        background-color:#0A1B2A;\n        margin-right:20px;\n        margin-bottom: 7px;\n        width: 130px;\n    }\ndiv p{\n  font-size: 20px;\n  color: white;\n  text-align: center;\n}    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   IGRA SPOJNICE    Spojiti nazive sa leve strane sa odgovarajucim nazivima desne strane    Logujte se kako bi igrali Ili napravite novi nalog       Igraj!        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component - LoginComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eml\n                            \n                            \n                                pwd\n                            \n                            \n                                showUserLoginForm\n                            \n                            \n                                usr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onApiLoginOrRegisterActionResult\n                            \n                            \n                                onLogin\n                            \n                            \n                                onRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            Proverava da li UserService ima podatke o igracu, to znači da je igrac ulogovan.\nAko je igrac ulogovan on ce biti redirektovan na stranicu za igru.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:53\n                \n            \n\n\n            \n                \n                    Prazan metod, ne radi nista. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApiLoginOrRegisterActionResult\n                        \n                        \n                    \n                \n            \n            \n                \nonApiLoginOrRegisterActionResult(res: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:101\n                \n            \n\n\n            \n                \n                    Ako je input parametar Objekat ova funkcija ce postaviti aktivnog korisnika - igraca u UserService.\nAko je input parametar tekst tada ce se pozvati funkcija koja ce prikazati panel sa porukom igracu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Predstavlja rezultat koji treba da dobijemo od servera. To moze biti Objekat ili tekst   \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogin\n                        \n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:58\n                \n            \n\n\n            \n                \n                    Metod se poziva kad igrac klikne na dugme Logovanje\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRegister\n                        \n                        \n                    \n                \n            \n            \n                \nonRegister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:73\n                \n            \n\n\n            \n                \n                    Metod se poziva kad igrac klikne na dugme Registracija\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n                \n                    \n                        Povezuje se eml sa email poljem za unos. To pokazuje da li je igrac izabrao opciju za registraciju \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pwd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                        Povezuje se pwd sa password poljem za unos \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showUserLoginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Povezuje se usr sa username poljem za unos \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GameService } from 'src/app/services/game.service';\nimport { UserService } from 'src/app/services/user.service';\n\n/** JS funkcija definisana u index.html fajlu.\n * Funkcija koja prikazuje modal sa tekstom igracu. */\ndeclare const sendMessageUserModal: any; // funkcija koja je definisana u INDEX.HTML fajlu dole u script tagu\n// ovako je pozivamo i kazemo joj sta i gde da izvrsi\n\n/**\n * Component - LoginComponent\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n/** Klasa koja se koristi za stranu za logovanje. */\nexport class LoginComponent implements OnInit {\n\n   /** Povezuje se usr sa username poljem za unos */\n    usr: string = ''; // radimo binding sa value on input text field-a\n\n   /** Povezuje se pwd sa password poljem za unos */\n    pwd: string = '';// radimo binding sa value on input text field-a\n\n   /** Povezuje se eml sa email poljem za unos. To pokazuje da li je igrac izabrao opciju za registraciju */\n    eml: string = '';\n    showUserLoginForm : boolean = true;\n  // Povezivanje nam omogucava da pristupom na promenjljivu dobijamo sta je u tekstualnim poljima u realnom vremenu\n  /**\n   * Proverava da li UserService ima podatke o igracu, to znači da je igrac ulogovan.\n   * Ako je igrac ulogovan on ce biti redirektovan na stranicu za igru.\n   * @param {UserService} userService\n   * @param {Router} router \n   * @param {GameService} gameService \n   */\n  constructor(private userService : UserService, private router:Router, private gameService: GameService) {\n    //private userService : UserService - mozemo pristupiti userService varijabli kao i njenim metodama\n    //, private router:Router - pristupamo ruteru\n    if(userService.getLoggedinUser().id != -1){\n      // ako nije ulogovan radi redirect na /login stranu\n      // -1 je defaultni i za logout kada nema user-a ulogovanog\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n      this.router.navigate([\"/game\"]));\n    }\n    else {\n      this.gameService.gameActive = false;\n    }\n   }\n  /** Prazan metod, ne radi nista. */\n  ngOnInit(): void {\n  }\n/**\n * Metod se poziva kad igrac klikne na dugme Logovanje\n */\n  onLogin(): void {\n    // subscribe - zato sto je sve asinhrono\n    // cekamo odgovor od servera kada server vrati dobar kod, npr 200 mi dobijene podatke dobijamo u data\n    // ako vrati neki error ili resurs nije mogo biti nadjen/nema odgovora od servera to ide u error\n\n      this.userService.loginUser(this.usr, this.pwd).subscribe((data) => {\n          console.log('[LOGIN USER RES]: ', data)\n          this.onApiLoginOrRegisterActionResult(data)\n      }, (err) => { this.onApiLoginOrRegisterActionResult(\"lozinka ili korisnicko ime netacno!\") });\n     \n }\n\n/**\n * Metod se poziva kad igrac klikne na dugme Registracija\n */\n    onRegister(): void {\n\n        if (this.usr == \"\")\n            this.onApiLoginOrRegisterActionResult(\"Unesite neki Username\");\n        \n        else if (this.pwd == \"\") \n            this.onApiLoginOrRegisterActionResult(\"Unesite neki Pasword\");\n\n        else if (this.eml == \"\")\n            this.onApiLoginOrRegisterActionResult(\"Unesite email adresu\");\n\n        else {\n            this.userService.createNewUser(this.usr, this.pwd, this.eml, \"user\").subscribe(\n                (data) => { this.onApiLoginOrRegisterActionResult(data) },\n                (err) => {\n                    this.onApiLoginOrRegisterActionResult(\"korisnicko ime je zauzeto!\")\n                    //console.log(err)\n                }\n            );\n        \n        }\n    \n    }\n/**\n * Ako je input parametar Objekat ova funkcija ce postaviti aktivnog korisnika - igraca u UserService.\n * Ako je input parametar tekst tada ce se pozvati funkcija koja ce prikazati panel sa porukom igracu.\n * @param res {any} Predstavlja rezultat koji treba da dobijemo od servera. To moze biti Objekat ili tekst   \n */\n  onApiLoginOrRegisterActionResult(res:any){\n    if(res instanceof Object)\n    {\n      // Proveravamo da li je res javascript objekat ako jeste postavljamo ulogovanog igraca\n      this.userService.setActiveUser({           \n        id         : res.id,       \n        username   : res.username,    \n        email      : res.email,\n        role       : res.role,\n        notificationsToken: res.notificationToken,\n        notificationsActive:res.notifications,\n      });\n\n\n        //radimo redirect na game komponentu this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\n      this.router.navigate([\"/game\"]);//);\n    }\n    else {\n      sendMessageUserModal(res); // ako nije objekat salje da ispise sve preko modala\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Logovanje - Registracija\n  \n\n  \n    \n      Pocetna\n    \n  \n  \n    \n      \n        \n           Logovanje\n        \n        \n           Registracija\n        \n      \n      \n        \n          \n\n            \n              Korisnicko ime\n              \n            \n\n            \n              Lozinka\n              \n            \n\n            \n              Email\n              \n            \n\n            \n\n              \n                Uloguj se\n              \n\n              \n                Registruj se\n              \n\n\n            \n\n             -->\n             -->\n\n              -->\n\n            \n          \n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .logincompclass{\n    background-color:#5882FA;\n    color: white;\n}\n#registerBtn, #loginBtn {\n  \n  margin-top: 10px;\n  margin-left: 10px;\n}\n\n#additionalLinksBtn{\n  margin-bottom:20px;\n}\n#additionalLinksBtn button{\n  background-color:#0A1B2A;\n \n}\n.formSection{\n  width:20%;\n}\n.nav-link{\n  cursor: pointer;\n  color:white;\n}\n.active {\n  color:black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Logovanje - Registracija              Pocetna                                     Logovanje                           Registracija                                                                Korisnicko ime                                                    Lozinka                                                    Email                                                                    Uloguj se                                            Registruj se                                       -->             -->              -->                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Score.html":{"url":"interfaces/Score.html","title":"interface - Score","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Score\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/score.service.ts\n        \n\n            \n                Description\n            \n            \n                Score interface representing the data \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        score\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Score id represents score id in our Score table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Score score represents score in our Score table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Score id represents score id in our Score table in the database \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\n\n/** Score interface representing the data */\nexport interface Score { // izgled score podataka\n    /** Score id represents score id in our Score table in the database */\n    id: number,\n    /** Score score represents score in our Score table in the database */\n    score: number,\n    /** Score id represents score id in our Score table in the database */\n    username: string\n  }\n\n@Injectable()\nexport class ScoreService {\n    /** Contains full score list that is in our microservice database */\n    private scoreList : Array = [];\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5201/api\";  // glavna URL adresa za nas API\n    /**\n     * constructor\n     * @param httpClient {HttpClient} Used to issue requests to our api calls.\n     */\n    constructor(private httpClient: HttpClient) {}\n\n    /**\n     * Used to contact microservice API and obtain the score list on success.\n     * @returns Observable that will return full list of scores found in the microservice database\n     */\n    public getScore() : Observable   {\n        return this.httpClient\n                .get(`${this.apiURL}/score`);\n    }\n    /**\n     * Sends score to add to the microservice backend database.\n     * @param score {number}\n     * @param username {string}\n     * @returns Observable\n     */\n    public pushScore(score: number, username:string) : Observable   {\n        let scoreObj = {\n            score : score,\n            username : username,\n        }\n        return this.httpClient\n        .post(`${this.apiURL}/score`, scoreObj)\n    }\n\n    /**\n     * Set method for our private class scoreList attribute\n     * @param inScoreList {Array}\n     */\n    public setScoreList( inScoreList : Array){\n        this.scoreList = inScoreList\n    }\n    /**\n     * Getter\n     * @returns private class scoreList attribute\n     */\n    public getScoreList(){\n        return this.scoreList;\n    }\n    \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScoreService.html":{"url":"injectables/ScoreService.html","title":"injectable - ScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/score.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                            \n                                    Private\n                                scoreList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getScore\n                            \n                            \n                                    Public\n                                getScoreList\n                            \n                            \n                                    Public\n                                pushScore\n                            \n                            \n                                    Public\n                                setScoreList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/score.service.ts:20\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to issue requests to our api calls.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/score.service.ts:31\n                \n            \n\n\n            \n                \n                    Used to contact microservice API and obtain the score list on success.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable that will return full list of scores found in the microservice database\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getScoreList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScoreList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/score.service.ts:61\n                \n            \n\n\n            \n                \n                    Getter\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        private class scoreList attribute\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pushScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pushScore(score: number, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/score.service.ts:41\n                \n            \n\n\n            \n                \n                    Sends score to add to the microservice backend database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setScoreList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setScoreList(inScoreList: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/score.service.ts:54\n                \n            \n\n\n            \n                \n                    Set method for our private class scoreList attribute\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inScoreList\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://localhost:5201/api\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/score.service.ts:20\n                            \n                        \n\n                \n                    \n                        URL to our microservice api. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scoreList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/score.service.ts:18\n                            \n                        \n\n                \n                    \n                        Contains full score list that is in our microservice database \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\n\n/** Score interface representing the data */\nexport interface Score { // izgled score podataka\n    /** Score id represents score id in our Score table in the database */\n    id: number,\n    /** Score score represents score in our Score table in the database */\n    score: number,\n    /** Score id represents score id in our Score table in the database */\n    username: string\n  }\n\n@Injectable()\nexport class ScoreService {\n    /** Contains full score list that is in our microservice database */\n    private scoreList : Array = [];\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5201/api\";  // glavna URL adresa za nas API\n    /**\n     * constructor\n     * @param httpClient {HttpClient} Used to issue requests to our api calls.\n     */\n    constructor(private httpClient: HttpClient) {}\n\n    /**\n     * Used to contact microservice API and obtain the score list on success.\n     * @returns Observable that will return full list of scores found in the microservice database\n     */\n    public getScore() : Observable   {\n        return this.httpClient\n                .get(`${this.apiURL}/score`);\n    }\n    /**\n     * Sends score to add to the microservice backend database.\n     * @param score {number}\n     * @param username {string}\n     * @returns Observable\n     */\n    public pushScore(score: number, username:string) : Observable   {\n        let scoreObj = {\n            score : score,\n            username : username,\n        }\n        return this.httpClient\n        .post(`${this.apiURL}/score`, scoreObj)\n    }\n\n    /**\n     * Set method for our private class scoreList attribute\n     * @param inScoreList {Array}\n     */\n    public setScoreList( inScoreList : Array){\n        this.scoreList = inScoreList\n    }\n    /**\n     * Getter\n     * @returns private class scoreList attribute\n     */\n    public getScoreList(){\n        return this.scoreList;\n    }\n    \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreTabComponent.html":{"url":"components/ScoreTabComponent.html","title":"component - ScoreTabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScoreTabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game/score-tab/score-tab.component.ts\n\n\n    \n        Description\n    \n    \n        Component - ScoreTabComponent \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-score-tab\n            \n\n            \n                styleUrls\n                ./score-tab.component.css\n            \n\n\n\n            \n                templateUrl\n                ./score-tab.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scoreList\n                            \n                            \n                                    Public\n                                scoreService\n                            \n                            \n                                scoreSortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onScoreSort\n                            \n                            \n                                updateScoreTableView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scoreService: ScoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game/score-tab/score-tab.component.ts:16\n                            \n                        \n\n                \n                    \n                            Konstruktor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scoreService\n                                                  \n                                                        \n                                                                        ScoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/score-tab/score-tab.component.ts:25\n                \n            \n\n\n            \n                \n                    Poziva updateScoreTableView metod \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScoreSort\n                        \n                        \n                    \n                \n            \n            \n                \nonScoreSort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/score-tab/score-tab.component.ts:37\n                \n            \n\n\n            \n                \n                    Sortira Skor tabelu u odnosu na igracev izbor u rastucem ili opadajucem poretku. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateScoreTableView\n                        \n                        \n                    \n                \n            \n            \n                \nupdateScoreTableView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/score-tab/score-tab.component.ts:30\n                \n            \n\n\n            \n                \n                    Uzima listu skorova iz scoreService \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/score-tab/score-tab.component.ts:13\n                            \n                        \n\n                \n                    \n                        Sadrzi niz skoreva \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scoreService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ScoreService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/score-tab/score-tab.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreSortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"asc\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/score-tab/score-tab.component.ts:16\n                            \n                        \n\n                \n                    \n                        Sadrzi tip sortiranja \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ScoreService, Score} from 'src/app/services/score.service';\n\n/** Component - ScoreTabComponent */\n@Component({\n  selector: 'app-score-tab',\n  templateUrl: './score-tab.component.html',\n  styleUrls: ['./score-tab.component.css']\n})\n/** Prikazuje skor tabelu u gornjem desnom uglu na panelu za igru.*/\nexport class ScoreTabComponent implements OnInit {\n  /** Sadrzi niz skoreva */\n    scoreList: Array = [];\n\n  /** Sadrzi tip sortiranja */\n    scoreSortOrder: string = \"asc\";\n\n  /**\n   * Konstruktor\n   * @param scoreService {ScoreService}\n   */\n    constructor(public scoreService: ScoreService) { }\n\n  /** Poziva updateScoreTableView metod */\n  ngOnInit(): void {\n    this.updateScoreTableView();\n  }\n\n  /** Uzima listu skorova iz scoreService */\n  updateScoreTableView(){\n    this.scoreService.getScore().subscribe((data)=>{\n      this.scoreService.setScoreList(data);\n      console.log(data)\n    })\n  }\n /** Sortira Skor tabelu u odnosu na igracev izbor u rastucem ili opadajucem poretku. */\n  onScoreSort(){\n    console.log(this.scoreSortOrder)\n    if(this.scoreSortOrder === \"asc\"){\n      this.scoreList = this.scoreService.getScoreList()\n        .sort((a:any, b:any) => parseFloat(a.score) - parseFloat(b.score));\n      this.scoreSortOrder  = \"desc\";\n    } else if(this.scoreSortOrder === \"desc\"){\n      this.scoreList = this.scoreService.getScoreList()\n        .sort((a:any, b:any) => parseFloat(b.score) - parseFloat(a.score));\n      this.scoreSortOrder  = \"asc\";\n    }\n    this.scoreService.setScoreList(this.scoreList);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            Korisnicko ime\n            Poeni\n        \n    \n    \n        \n            {{item.username}}\n            {{item.score}}\n        \n    \n\n\n    \n\n    \n                \n                    ./score-tab.component.css\n                \n                #datatablee{\n    width:15%;\n    margin-right: 35px;\n    margin-top: 5px;\n    font-family: 'Barlow Semi Condensed', sans-serif;\n    position: absolute;\n    right: 0;\n\n}\n#datatablee th, #datatablee td{\n    color:#F7FE2E;\n    font-weight: bold;\n    background-color: #045FB4;\n}\n#thScore{\n    cursor: pointer;\n    background-color:red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Korisnicko ime            Poeni                                    {{item.username}}            {{item.score}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScoreTabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                User interface representing the data \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        notificationsActive\n                                \n                                \n                                        notificationsToken\n                                \n                                \n                                        role\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User email represents user email in our User table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id represents user id in our User table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notificationsActive\n                                    \n                                \n                                \n                                    \n                                        notificationsActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean value that tells us if the user wants to receive email notifications.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notificationsToken\n                                    \n                                \n                                \n                                    \n                                        notificationsToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User notification token represents the token for our GET request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User role represents user role in our User table in the database \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User username represents user username in our User table in the database \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { GameService } from \"./game.service\";\n\n/** User interface representing the data */\nexport interface User {\n    /** User id represents user id in our User table in the database */\n    id         : number;\n    /** User username represents user username in our User table in the database */\n    username   : string;\n    /** User email represents user email in our User table in the database */\n    email      : string;\n    /** User role represents user role in our User table in the database */\n    role       : string;\n    /** User notification token represents the token for our GET request*/\n    notificationsToken : string;\n    /** Boolean value that tells us if the user wants to receive email notifications.*/\n    notificationsActive:boolean;\n    \n} \n\n@Injectable()\nexport class UserService {\n    // glavna URL adresa za nas API\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5101\"; // glavna URL adresa za nas API\n    /**This class attribute contains all the necessary user data.\n     * It is used to mark if user is logged in our application later.\n     * If user is not logged it contains default set of data.\n     */\n    private activeUser: User = { \n        // cuvamo aktivnog usera - potrebni su nam podaci\n        //kako bi znali koji je user za slanje Scora,\n        //kao i da li da ima dozvolu da pravi nove igre    \n        id         : -1,       \n        username   : \"\",\n        email      : \"\",\n        role       : \"\",\n        notificationsToken: \"\",\n        notificationsActive:false,\n    };\n    /**\n     * constructor\n     * @param httpClient {HttpClient}\n     * @param gameService  {GameService} we need it to mark in case user has loggedout while playing the game to set it to be inactive.\n     */\n    constructor(private httpClient: HttpClient, private gameService: GameService) {} // preko httpclijenta kontaktiramo server\n\n    /**\n     * Sends the data to login our user to the application\n     * @param usr {string} Username that user has entered in the input field in our Login component.\n     * @param pwd {string} Password that user has entered in the input field in our Login component.\n     * @returns Observable. If code is 200 it will return User object data.\n     */\n    public loginUser(usr:string, pwd:string) : Observable   {\n        let userObj = {\n            username:usr,\n            password:pwd\n        }\n        return this.httpClient\n        .post(`${this.apiURL}/login`, userObj);\n    }\n\n    /**\n     * Method that contacts our microservice end API to create a new user.\n     * @param usr {string} Username that user has entered in the input field in our Login component.\n     * @param pwd {string} Password that user has entered in the input field in our Login component.\n     * @param eml {string} Email that user has entered in the input field in our Login component.\n     * @param role {string} Within the application hard coded value is to be 'user' type.\n     * @returns Observable\n     */\n    public createNewUser(usr: string, pwd: string, eml: string, role: string ): Observable  {\n        let userObj = {\n            username: usr,\n            password: pwd,           \n            email   : eml,\n            role    : role\n        }\n        console.log(userObj)\n        return this.httpClient.post(`${this.apiURL}/create`, userObj)\n    }\n    /**\n     * Sets default values for out activeUser atribut.\n     * sets gameActive attribute to false that can be found in the Game Service.\n     */\n    public logoutUser(){\n        this.activeUser = {           \n            id         : -1,       \n            username   : \"\",\n            email      : \"\",\n            role       : \"\",\n            notificationsToken: \"\",\n            notificationsActive:false,\n           \n        };\n        this.gameService.gameActive = false;\n    }\n    /**\n     * @returns activeUser attribute.\n     */\n    public getLoggedinUser(){\n        return this.activeUser; // vraca objekat ulogovanog user-a\n    }\n\n    /**\n     * Set method\n     * @param dataUser {User} new value that will be added to our activeUser attribute.\n     */\n    public setActiveUser(dataUser: User): void{\n        this.activeUser = dataUser; // postavlja aktivnog user-a\n    }\n\n    /**\n     * Function to contact our microservice and to change the notification state for the loggedin user\n     */\n\n    public changeEmailNotifications() : Observable   {\n        return this.httpClient\n        .get(`https://localhost:5101/api/users/notification/change/${this.activeUser.notificationsToken}/${this.activeUser.notificationsActive}`);\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserActionsBtnsComponent.html":{"url":"components/UserActionsBtnsComponent.html","title":"component - UserActionsBtnsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserActionsBtnsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game/user-actions-btns/user-actions-btns.component.ts\n\n\n    \n        Description\n    \n    \n        Component - UserActionsBtnsComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-actions-btns\n            \n\n            \n                styleUrls\n                ./user-actions-btns.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-actions-btns.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNewGame\n                            \n                            \n                                onSettingsModalClose\n                            \n                            \n                                onSettingsModalOpen\n                            \n                            \n                                onSettingsNotificationCheckBoxChange\n                            \n                            \n                                onUserLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, gameService: GameService, gameComponent: GameComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:21\n                            \n                        \n\n                \n                    \n                            Konstruktor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameComponent\n                                                  \n                                                        \n                                                                        GameComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:38\n                \n            \n\n\n            \n                \n                    Setting up the settings modal variable reference \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNewGame\n                        \n                        \n                    \n                \n            \n            \n                \nonNewGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:55\n                \n            \n\n\n            \n                \n                    Nova igra ce biti zapoceta (via gameComponent) i igra ce biti postavljena da je aktivna (gameService - attribute: gameActive ).\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSettingsModalClose\n                        \n                        \n                    \n                \n            \n            \n                \nonSettingsModalClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:71\n                \n            \n\n\n            \n                \n                    Funkcija koja zatvara modal za podesavanje dobijanja notifikacija od aplikacije\nKada se modal zatvori, vrednost koja je postavljena na modalu ce biti promenjana u bazi podataka u koloni Notifications.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSettingsModalOpen\n                        \n                        \n                    \n                \n            \n            \n                \nonSettingsModalOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:63\n                \n            \n\n\n            \n                \n                    Funkcija koja otvara modal za podesavanje dobijanja notifikacija od aplikacije\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSettingsNotificationCheckBoxChange\n                        \n                        \n                    \n                \n            \n            \n                \nonSettingsNotificationCheckBoxChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:79\n                \n            \n\n\n            \n                \n                    Funkcija koja menja trenutnu vrednost notifikacije u korisnickom objektu na frontendu i kontaktira funkciju iz\nuserService koja kontaktira microservice API da bi se promenila vrednost u koloni Notifications u bazi podataka.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUserLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonUserLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:46\n                \n            \n\n\n            \n                \n                    Kada igrac odabere da hoce da se izloguje, tada ce metod logoutUser iz UserService klase da izloguje igraca.\nPosle toga ce igrac biti redirektovan na login stranicu.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/game/user-actions-btns/user-actions-btns.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GameService } from 'src/app/services/game.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { GameComponent } from '../game.component';\n\n/** JS funkcija definisana u index.html fajlu. Funkcija koja inicijalizuje modal reference when called. */\ndeclare const initializeSettingsModalVar: any;\n/** JS funkcija definisana u index.html fajlu. Funkcija koja prikazuje modal igracu. */\ndeclare const settingsModalShow: any;\n\n/** Component - UserActionsBtnsComponent*/\n@Component({\n  selector: 'app-user-actions-btns',\n  templateUrl: './user-actions-btns.component.html',\n  styleUrls: ['./user-actions-btns.component.css']\n})\n/**\n * Contains action buttons - mainly the navigation for the user.\n */\nexport class UserActionsBtnsComponent implements OnInit {\n  /**\n   * Konstruktor\n   * @param userService {UserService}\n   * @param router {Router}\n   * @param gameService {GameService}\n   * @param gameComponent {GameComponent}\n   */\n  constructor(\n    public userService : UserService,\n    private router:Router,\n    private gameService: GameService,\n    private gameComponent : GameComponent\n  ) {\n    \n  }\n  /** Setting up the settings modal variable reference */\n  ngOnInit(): void {\n    initializeSettingsModalVar();\n  }\n\n  /**\n   * Kada igrac odabere da hoce da se izloguje, tada ce metod logoutUser iz UserService klase da izloguje igraca.\n   * Posle toga ce igrac biti redirektovan na login stranicu.\n   */\n  onUserLogout():void{\n    this.userService.logoutUser();\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/login\"]));\n  }\n\n  /**\n   * Nova igra ce biti zapoceta (via gameComponent) i igra ce biti postavljena da je aktivna (gameService - attribute: gameActive ).\n   */\n  onNewGame(){\n    this.gameComponent.startTheGame();\n    this.gameService.gameActive = true;\n  }\n\n  /**\n   * Funkcija koja otvara modal za podesavanje dobijanja notifikacija od aplikacije\n   */\n  onSettingsModalOpen(){\n    settingsModalShow(true);\n  }\n\n  /**\n   * Funkcija koja zatvara modal za podesavanje dobijanja notifikacija od aplikacije\n   * Kada se modal zatvori, vrednost koja je postavljena na modalu ce biti promenjana u bazi podataka u koloni Notifications.\n   */\n  onSettingsModalClose(){\n    settingsModalShow(false);\n  }\n\n  /**\n   * Funkcija koja menja trenutnu vrednost notifikacije u korisnickom objektu na frontendu i kontaktira funkciju iz\n   * userService koja kontaktira microservice API da bi se promenila vrednost u koloni Notifications u bazi podataka.\n   */\n  onSettingsNotificationCheckBoxChange(){\n    this.userService.getLoggedinUser().notificationsActive = !this.userService.getLoggedinUser().notificationsActive;\n    this.userService.changeEmailNotifications().subscribe()\n  }\n}\n\n    \n\n    \n        \n   -->\n   -->\n\n\n  \n    Izloguj se\n  \n\n  \n    \n      Izmeni Igre\n    \n  \n\n\n  \n  \n  \n    \n\n      Nova Igra\n    \n  \n\n  &nbsp;&nbsp;&nbsp;&nbsp;\n\n  \n    \n  \n\n\n\n\n  \n\n  \n    \n      \n        \n          \n            \n              \n              \n            \n            Podešavanja\n          \n        \n        \n          \n            \n            Odobri email notifikacije\n          \n\n        \n      \n    \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./user-actions-btns.component.css\n                \n                #ifadmin button{\n    margin-left: 35px;\n    margin-top: 5px;\n    display: block;\n    width: 180px;\n}\n\n#createGameInputElements h5{\n    margin-top:8px;\n}\n\n.a-btn-bgcolor{\n    background-color:#0A1B2A;\n}\n.modal{\n    color:black;\n}\n\nform button {\n    margin-top:10px;\n    margin-right:10px;\n}\n#ifadmin{\n    position: absolute;\n}\na{\n    text-decoration:none; \n    display: block;\n    width: 180px;\n}\n.edit-games-a{\n    opacity: 0.7;\n    color:white;\n}\n\n\n.edit-games-a:hover{\n    opacity: 1;\n    color:black;\n}\n.btn-secondary{background-color: black;}\n.settings-icon{\n    cursor: pointer;\n    margin-left: 35px;\n    margin-top: 500px;\n    display: block;\n    width: 180px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->   -->      Izloguj se              Izmeni Igre                      Nova Igra                                                                                                                    Podešavanja                                                            Odobri email notifikacije                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'GameTabViewComponent', 'selector': 'app-game-tab-view'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ScoreTabComponent', 'selector': 'app-score-tab'},{'name': 'UserActionsBtnsComponent', 'selector': 'app-user-actions-btns'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserActionsBtnsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeUser\n                            \n                            \n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeEmailNotifications\n                            \n                            \n                                    Public\n                                createNewUser\n                            \n                            \n                                    Public\n                                getLoggedinUser\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Public\n                                logoutUser\n                            \n                            \n                                    Public\n                                setActiveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:42\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                we need it to mark in case user has loggedout while playing the game to set it to be inactive.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeEmailNotifications\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeEmailNotifications()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:118\n                \n            \n\n\n            \n                \n                    Function to contact our microservice and to change the notification state for the loggedin user\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createNewUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewUser(usr: string, pwd: string, eml: string, role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:73\n                \n            \n\n\n            \n                \n                    Method that contacts our microservice end API to create a new user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    usr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username that user has entered in the input field in our Login component.\n\n                                    \n                                \n                                \n                                    pwd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password that user has entered in the input field in our Login component.\n\n                                    \n                                \n                                \n                                    eml\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Email that user has entered in the input field in our Login component.\n\n                                    \n                                \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Within the application hard coded value is to be 'user' type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLoggedinUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoggedinUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        activeUser attribute.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loginUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(usr: string, pwd: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:56\n                \n            \n\n\n            \n                \n                    Sends the data to login our user to the application\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    usr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username that user has entered in the input field in our Login component.\n\n                                    \n                                \n                                \n                                    pwd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password that user has entered in the input field in our Login component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable. If code is 200 it will return User object data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:87\n                \n            \n\n\n            \n                \n                    Sets default values for out activeUser atribut.\nsets gameActive attribute to false that can be found in the Game Service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setActiveUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setActiveUser(dataUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:110\n                \n            \n\n\n            \n                \n                    Set method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dataUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new value that will be added to our activeUser attribute.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Default value : { \n        // cuvamo aktivnog usera - potrebni su nam podaci\n        //kako bi znali koji je user za slanje Scora,\n        //kao i da li da ima dozvolu da pravi nove igre    \n        id         : -1,       \n        username   : \"\",\n        email      : \"\",\n        role       : \"\",\n        notificationsToken: \"\",\n        notificationsActive:false,\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:32\n                            \n                        \n\n                \n                    \n                        This class attribute contains all the necessary user data.\nIt is used to mark if user is logged in our application later.\nIf user is not logged it contains default set of data.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://localhost:5101\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:27\n                            \n                        \n\n                \n                    \n                        URL to our microservice api. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { GameService } from \"./game.service\";\n\n/** User interface representing the data */\nexport interface User {\n    /** User id represents user id in our User table in the database */\n    id         : number;\n    /** User username represents user username in our User table in the database */\n    username   : string;\n    /** User email represents user email in our User table in the database */\n    email      : string;\n    /** User role represents user role in our User table in the database */\n    role       : string;\n    /** User notification token represents the token for our GET request*/\n    notificationsToken : string;\n    /** Boolean value that tells us if the user wants to receive email notifications.*/\n    notificationsActive:boolean;\n    \n} \n\n@Injectable()\nexport class UserService {\n    // glavna URL adresa za nas API\n    /** URL to our microservice api. */\n    apiURL: string = \"https://localhost:5101\"; // glavna URL adresa za nas API\n    /**This class attribute contains all the necessary user data.\n     * It is used to mark if user is logged in our application later.\n     * If user is not logged it contains default set of data.\n     */\n    private activeUser: User = { \n        // cuvamo aktivnog usera - potrebni su nam podaci\n        //kako bi znali koji je user za slanje Scora,\n        //kao i da li da ima dozvolu da pravi nove igre    \n        id         : -1,       \n        username   : \"\",\n        email      : \"\",\n        role       : \"\",\n        notificationsToken: \"\",\n        notificationsActive:false,\n    };\n    /**\n     * constructor\n     * @param httpClient {HttpClient}\n     * @param gameService  {GameService} we need it to mark in case user has loggedout while playing the game to set it to be inactive.\n     */\n    constructor(private httpClient: HttpClient, private gameService: GameService) {} // preko httpclijenta kontaktiramo server\n\n    /**\n     * Sends the data to login our user to the application\n     * @param usr {string} Username that user has entered in the input field in our Login component.\n     * @param pwd {string} Password that user has entered in the input field in our Login component.\n     * @returns Observable. If code is 200 it will return User object data.\n     */\n    public loginUser(usr:string, pwd:string) : Observable   {\n        let userObj = {\n            username:usr,\n            password:pwd\n        }\n        return this.httpClient\n        .post(`${this.apiURL}/login`, userObj);\n    }\n\n    /**\n     * Method that contacts our microservice end API to create a new user.\n     * @param usr {string} Username that user has entered in the input field in our Login component.\n     * @param pwd {string} Password that user has entered in the input field in our Login component.\n     * @param eml {string} Email that user has entered in the input field in our Login component.\n     * @param role {string} Within the application hard coded value is to be 'user' type.\n     * @returns Observable\n     */\n    public createNewUser(usr: string, pwd: string, eml: string, role: string ): Observable  {\n        let userObj = {\n            username: usr,\n            password: pwd,           \n            email   : eml,\n            role    : role\n        }\n        console.log(userObj)\n        return this.httpClient.post(`${this.apiURL}/create`, userObj)\n    }\n    /**\n     * Sets default values for out activeUser atribut.\n     * sets gameActive attribute to false that can be found in the Game Service.\n     */\n    public logoutUser(){\n        this.activeUser = {           \n            id         : -1,       \n            username   : \"\",\n            email      : \"\",\n            role       : \"\",\n            notificationsToken: \"\",\n            notificationsActive:false,\n           \n        };\n        this.gameService.gameActive = false;\n    }\n    /**\n     * @returns activeUser attribute.\n     */\n    public getLoggedinUser(){\n        return this.activeUser; // vraca objekat ulogovanog user-a\n    }\n\n    /**\n     * Set method\n     * @param dataUser {User} new value that will be added to our activeUser attribute.\n     */\n    public setActiveUser(dataUser: User): void{\n        this.activeUser = dataUser; // postavlja aktivnog user-a\n    }\n\n    /**\n     * Function to contact our microservice and to change the notification state for the loggedin user\n     */\n\n    public changeEmailNotifications() : Observable   {\n        return this.httpClient\n        .get(`https://localhost:5101/api/users/notification/change/${this.activeUser.notificationsToken}/${this.activeUser.notificationsActive}`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/game-tab-view/game-tab-view.component.ts\n            \n            component\n            GameTabViewComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/components/game-tab-view/game-tab-view.component.ts\n            \n            variable\n            initializeUpdateGameModalVar\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/game-tab-view/game-tab-view.component.ts\n            \n            variable\n            sendMessageUserModal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/game-tab-view/game-tab-view.component.ts\n            \n            variable\n            updateGameModalShow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/game/game.component.ts\n            \n            component\n            GameComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/components/game/game.component.ts\n            \n            variable\n            sendMessageUserModal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/game/score-tab/score-tab.component.ts\n            \n            component\n            ScoreTabComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/components/game/user-actions-btns/user-actions-btns.component.ts\n            \n            component\n            UserActionsBtnsComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/components/game/user-actions-btns/user-actions-btns.component.ts\n            \n            variable\n            initializeSettingsModalVar\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/game/user-actions-btns/user-actions-btns.component.ts\n            \n            variable\n            settingsModalShow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/index/index.component.ts\n            \n            component\n            IndexComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            variable\n            sendMessageUserModal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/game.service.ts\n            \n            injectable\n            GameService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/services/game.service.ts\n            \n            interface\n            Game\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/score.service.ts\n            \n            injectable\n            ScoreService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/score.service.ts\n            \n            interface\n            Score\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            interface\n            User\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.5\n        \n            @angular/common : ~11.0.5\n        \n            @angular/compiler : ~11.0.5\n        \n            @angular/core : ~11.0.5\n        \n            @angular/forms : ~11.0.5\n        \n            @angular/platform-browser : ~11.0.5\n        \n            @angular/platform-browser-dynamic : ~11.0.5\n        \n            @angular/router : ~11.0.5\n        \n            bcryptjs : ^2.4.3\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGameApp\nThis project was generated with Angular CLI version 11.0.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nGameTabViewComponent\n\nGameTabViewComponent\n\nAppModule -->\n\nGameTabViewComponent->AppModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nAppModule -->\n\nIndexComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nScoreTabComponent\n\nScoreTabComponent\n\nAppModule -->\n\nScoreTabComponent->AppModule\n\n\n\n\n\nUserActionsBtnsComponent\n\nUserActionsBtnsComponent\n\nAppModule -->\n\nUserActionsBtnsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGameService\n\nGameService\n\nAppModule -->\n\nGameService->AppModule\n\n\n\n\n\nScoreService\n\nScoreService\n\nAppModule -->\n\nScoreService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            initializeSettingsModalVar   (src/.../user-actions-btns.component.ts)\n                        \n                        \n                            initializeUpdateGameModalVar   (src/.../game-tab-view.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            sendMessageUserModal   (src/.../game.component.ts)\n                        \n                        \n                            sendMessageUserModal   (src/.../game-tab-view.component.ts)\n                        \n                        \n                            sendMessageUserModal   (src/.../login.component.ts)\n                        \n                        \n                            settingsModalShow   (src/.../user-actions-btns.component.ts)\n                        \n                        \n                            updateGameModalShow   (src/.../game-tab-view.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n                \n                    \n                        context finds all tests. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n                \n                    \n                        Default require const \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n                \n                    \n                        default value set as production enviroment \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        default production enviroment set to false \n\n                    \n                \n\n            \n        \n\n    src/app/components/game/user-actions-btns/user-actions-btns.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initializeSettingsModalVar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS funkcija definisana u index.html fajlu. Funkcija koja inicijalizuje modal reference when called. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settingsModalShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS funkcija definisana u index.html fajlu. Funkcija koja prikazuje modal igracu. \n\n                    \n                \n\n            \n        \n\n    src/app/components/game-tab-view/game-tab-view.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initializeUpdateGameModalVar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS funkcija definisana u index.html fajlu. Funkcija koja inicijalizuje modal kada se pozove. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessageUserModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS funkcija definisana u index.html fajlu. Funkcija koja prikazuje modal sa tekstom. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGameModalShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS funkcija definisana u index.html fajlu. Funkcija koja prikazuje modal. \n\n                    \n                \n\n            \n        \n\n    src/app/components/game/game.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessageUserModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS funkcija definisana u index.html file. Funkcija koja prikazuje modal korisniku - igracu sa tekstom. \n\n                    \n                \n\n            \n        \n\n    src/app/components/login/login.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessageUserModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        JS funkcija definisana u index.html fajlu.\nFunkcija koja prikazuje modal sa tekstom igracu. \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
